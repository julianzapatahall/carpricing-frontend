{"ast":null,"code":"var _jsxFileName = \"/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/AnalysisBoard.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport PropTypes from \"prop-types\";\nimport { Chess } from \"chess.js\";\n//import { Chessboard } from 'react-chessboard';\nimport EditBoard from \"./EditBoard\";\nimport Chessboard from \"chessboardjsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STOCKFISH = window.STOCKFISH;\nconst game = new Chess();\nclass AnalysisBoard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orientation: \"white\",\n      evaluation: \"\",\n      bestLine: \"\",\n      currentPly: 1,\n      future: [],\n      ply0Game: true,\n      showEvaluation: false,\n      moveHistory: [],\n      fullGame: [],\n      importedGames: JSON.parse(localStorage.getItem('importedGames')) || [],\n      showDropdown: false,\n      selectedGame: null,\n      gamesDetails: [],\n      showEditBoard: false,\n      fen: this.props.fen || 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n      startFen: this.props.fen || 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n      fileInputKey: Date.now(),\n      // To reset the file input\n      showImportTabs: false,\n      inputMethod: 'pgn',\n      opponentName: ''\n    };\n    this.handleKeyDown = event => {\n      switch (event.key) {\n        case \"ArrowRight\":\n          this.goToNextMove();\n          break;\n        case \"ArrowLeft\":\n          this.goToPreviousMove();\n          break;\n        case \"ArrowDown\":\n          this.goToStart();\n          break;\n        case \"ArrowUp\":\n          this.goToEnd();\n          break;\n        default:\n          break;\n      }\n    };\n    this.handleGameSelect = pgn => {\n      game.reset();\n      const tmp = new Chess();\n      tmp.loadPgn(pgn);\n      this.setState({\n        fen: this.props.fen || \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n        showDropdown: true,\n        selectedGame: pgn\n      });\n      this.future = tmp.history();\n      this.moveHistory = tmp.history();\n      this.fullGame = this.moveHistory;\n      this.engineGame().prepareMove();\n    };\n    this.handleFileSelect = async event => {\n      const file = event.target.files[0];\n      if (!file) {\n        return;\n      }\n      const reader = new FileReader();\n      reader.onload = e => {\n        const fullPgn = e.target.result;\n        let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n        let games = rawGames.map((game, index) => {\n          return ('[Event' + game).trim();\n        });\n        const details = games.map(pgn => {\n          const chess = new Chess();\n          chess.loadPgn(pgn);\n          const headers = chess.header();\n          return {\n            pgn: pgn,\n            details: `${headers.White} vs ${headers.Black}, ${headers.Result}, ${headers.Date}`\n          };\n        });\n        this.setState({\n          importedGames: [...this.state.importedGames, ...details],\n          selectedGame: null,\n          fileInputKey: Date.now() // Reset the file input\n        });\n        localStorage.setItem('importedGames', JSON.stringify([...this.state.importedGames, ...details]));\n      };\n      reader.readAsText(file);\n    };\n    this.handleRemoveFile = () => {\n      this.setState({\n        importedGames: [],\n        selectedGame: null,\n        fileInputKey: Date.now() // Reset the file input\n      });\n      localStorage.removeItem('importedGames');\n    };\n    this.displayGameDetails = pgn => {\n      const chess = new Chess();\n      chess.loadPgn(pgn);\n      const headers = chess.header();\n      return `${headers.White} vs ${headers.Black}, ${headers.Result}, ${headers.Date}`;\n    };\n    this.handleFlipBoard = () => {\n      this.setState(({\n        orientation\n      }) => ({\n        orientation: orientation === 'white' ? 'black' : 'white'\n      }));\n    };\n    this.handleResetBoard = () => {\n      game.reset();\n      this.setState({\n        fen: game.fen(),\n        selectedGame: null\n      });\n      this.future = [];\n      this.moveHistory = [];\n      this.fullGame = [];\n      this.engineGame().prepareMove();\n    };\n    this.toggleStockfishEvaluation = () => {\n      this.setState(prevState => ({\n        showEvaluation: !prevState.showEvaluation\n      }));\n    };\n    this.goToEnd = () => {\n      const moves = game.history();\n      const tmp = new Chess();\n      tmp.load(this.state.startFen);\n      const previous = moves.length + this.future.length - 1;\n      if (previous >= 0) {\n        if (moves.length > 0) {\n          for (var i = 0; i < moves.length; i += 1) {\n            tmp.move(moves[i]);\n          }\n        }\n        if (this.future.length - 1 >= 0) {\n          for (var i = 0; i < this.future.length; i += 1) {\n            tmp.move(this.future[i]);\n          }\n          const previous_fen = tmp.fen();\n          const previous_pgn = tmp.pgn();\n          this.future = [];\n          game.load(previous_fen);\n          game.loadPgn(previous_pgn);\n          this.setState({\n            fen: game.fen()\n          });\n          this.moveHistory = game.history();\n          this.setState({\n            currentPly: this.state.ply0Game ? this.moveHistory.length : this.moveHistory.length + 1\n          });\n          this.engineGame().prepareMove();\n        } else {\n          return;\n        }\n      } else {\n        return;\n      }\n    };\n    this.goToNextMove = () => {\n      if (this.future.length > 0) {\n        game.move(this.future[0]);\n        this.setState({\n          fen: game.fen()\n        });\n        this.future.shift();\n        this.moveHistory = game.history();\n        this.setState({\n          currentPly: this.state.ply0Game ? this.moveHistory.length : this.moveHistory.length + 1\n        });\n        this.engineGame().prepareMove();\n      }\n      return;\n    };\n    this.goToPreviousMove = () => {\n      const moves = game.history();\n      const tmp = new Chess();\n      tmp.load(this.state.startFen);\n      const previous = moves.length - 1;\n      if (previous >= 0) {\n        for (var i = 0; i < previous; i += 1) {\n          tmp.move(moves[i]);\n        }\n        const previous_fen = tmp.fen();\n        const previous_pgn = tmp.pgn();\n        this.future.unshift(moves[previous]);\n        tmp.move(moves[previous]);\n        game.load(previous_fen);\n        game.loadPgn(previous_pgn);\n        this.setState({\n          fen: previous_fen\n        });\n        this.moveHistory = game.history();\n        this.setState({\n          currentPly: this.state.ply0Game ? this.moveHistory.length : this.moveHistory.length + 1\n        });\n        this.engineGame().prepareMove();\n      }\n      return;\n    };\n    this.goToStart = () => {\n      const moves = game.history();\n      const tmp = new Chess();\n      tmp.load(this.state.startFen);\n      const previous_fen = tmp.fen();\n      const previous_pgn = tmp.pgn();\n      const previous = moves.length - 1;\n      if (previous >= 0) {\n        for (var i = 0; i < previous; i += 1) {\n          tmp.move(moves[i]);\n        }\n        this.future.unshift(...moves);\n        game.load(previous_fen);\n        game.loadPgn(previous_pgn);\n        this.setState({\n          fen: game.fen()\n        });\n        this.moveHistory = [];\n        this.setState({\n          currentPly: this.state.ply0Game ? this.moveHistory.length : this.moveHistory.length + 1\n        });\n        this.engineGame().prepareMove();\n      }\n      return;\n    };\n    this.toggleDropdown = () => {\n      this.setState(prevState => ({\n        showDropdown: !prevState.showDropdown\n      }));\n    };\n    this.goToMove = moveIndex => {\n      const moves = this.fullGame;\n      const tmp = new Chess();\n      for (let i = 0; i <= moveIndex; i++) {\n        tmp.move(moves[i]);\n      }\n      const previous_fen = tmp.fen();\n      const previous_pgn = tmp.pgn();\n      game.loadPgn(previous_pgn);\n      this.setState({\n        fen: previous_fen\n      });\n      const newMoveHistory = tmp.history();\n      this.moveHistory = newMoveHistory;\n      this.future = moves.slice(moveIndex + 1);\n      this.setState({\n        currentPly: this.state.ply0Game ? this.moveHistory.length : this.moveHistory.length + 1\n      });\n      this.engineGame().prepareMove();\n    };\n    this.engineGame = options => {\n      options = options || {};\n      let engine = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(options.stockfishjs || \"stockfish.js\");\n      engine.postMessage(\"uci\");\n      engine.onmessage = event => {\n        let line;\n        if (event && typeof event === \"object\") {\n          line = event.data;\n          const evaluation = this.extractEvaluation(line);\n          const bestLine = this.extractBestLine(line);\n          this.setState({\n            evaluation,\n            bestLine\n          });\n        } else {\n          line = event;\n        }\n        const bestLine = this.extractBestLine(line);\n        this.setState({\n          previousOutput: bestLine\n        });\n      };\n      return {\n        prepareMove: function () {\n          engine.postMessage(\"position fen \" + game.fen());\n          engine.postMessage(\"go depth 17\");\n        }\n      };\n    };\n    this.handleEditBoard = () => {\n      this.setState(prevState => ({\n        showEditBoard: !prevState.showEditBoard\n      }));\n    };\n    this.updateFenAndCloseEdit = newFen => {\n      game.reset();\n      game.load(newFen);\n      const parts = newFen.split(' ');\n      const isWhitesTurn = parts[1] === 'w';\n      this.setState({\n        fen: newFen,\n        showEditBoard: false,\n        currentPly: isWhitesTurn ? 0 : 1,\n        ply0Game: isWhitesTurn ? true : false,\n        startFen: newFen,\n        selectedGame: null\n      });\n      this.future = [];\n      this.moveHistory = [];\n      this.fullGame = [];\n      console.log(this.state.currentPly);\n      this.engineGame().prepareMove();\n    };\n    this.onDrop = ({\n      sourceSquare,\n      targetSquare\n    }) => {\n      const legalMoves = game.moves({\n        verbose: true\n      });\n      const move = legalMoves.find(move => move.from === sourceSquare && move.to === targetSquare);\n      if (!move) {\n        console.log(\"Illegal move\");\n        return;\n      }\n      if (move.san === this.future[0]) {\n        this.future.shift();\n      } else {\n        this.future = [];\n      }\n      game.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: \"q\"\n      });\n      this.moveHistory = game.history();\n      this.setState({\n        currentPly: this.state.ply0Game ? this.moveHistory.length : this.moveHistory.length + 1\n      });\n      this.fullGame = this.moveHistory.concat(this.future);\n      this.setState(prevState => ({\n        fen: game.fen()\n      }));\n      this.engineGame().prepareMove();\n    };\n    this.extractEvaluation = line => {\n      const mateEvalMatch = line.match(/score mate (-?\\d+)/);\n      const evalMatch = line.match(/score cp (-?\\d+)/);\n      // Handle game over (mate on the board)\n      if (game.isCheckmate()) {\n        return game.turn() === \"w\" ? \"Mate on the board! Black wins!\" : \"Mate on the board! White wins!\";\n      }\n\n      // Handle forced mate evaluation\n      if (mateEvalMatch) {\n        const evaluation = parseInt(mateEvalMatch[1], 10);\n        if (evaluation > 0) {\n          return game.turn() === \"b\" ? `Black Mate in ${evaluation}` : `White Mate in ${evaluation}`;\n        }\n        return game.turn() === \"w\" ? `Black Mate in ${-evaluation}` : `White Mate in ${-evaluation}`;\n      }\n\n      // Handle normal evaluation\n      if (evalMatch) {\n        const evaluation = Math.round(parseInt(evalMatch[1]) * 0.01 * 100) / 100;\n        if (evaluation >= 0) {\n          return game.turn() === \"b\" ? -evaluation : `+${evaluation}`;\n        }\n        return game.turn() === \"w\" ? evaluation : `+${-evaluation}`;\n      }\n      return null;\n    };\n    this.extractBestLine = line => {\n      const currentPly = this.state.currentPly;\n      const bestLineMatch = line.match(/pvSan (.*) bmc/);\n      if (game.isCheckmate()) {\n        return null;\n      }\n      if (bestLineMatch) {\n        const moves = bestLineMatch[1].split(\" \");\n        const sanMoves = [];\n        if (moves.length !== 1) {\n          for (let i = 0; i < Math.min(2 * Math.floor(moves.length / 2), 14); i += 1) {\n            const moveNumber = i + currentPly + 1;\n            const sanMove = moveNumber % 2 === 1 ? `${Math.floor((moveNumber + 1) / 2)}.${moves[i]}` : `${Math.floor((moveNumber + 1) / 2)}...${moves[i]}`;\n            sanMoves.push(sanMove);\n          }\n          return sanMoves.join(\" \");\n        } else {\n          const sanMove = currentPly % 2 === 0 ? `${Math.floor((currentPly + 1) / 2)}.${moves[0]}` : `${Math.floor((currentPly + 1) / 2)}...${moves[0]}`;\n          return sanMove;\n        }\n      }\n      return this.state.previousOutput;\n    };\n  }\n  componentDidMount() {\n    const combinedPgn = localStorage.getItem('combinedPgn');\n    if (combinedPgn) {\n      this.processCombinedPgn(combinedPgn);\n      localStorage.removeItem('combinedPgn');\n      this.future = [];\n    } else if (this.props.pgn) {\n      game.loadPgn(this.props.pgn);\n      this.future = [];\n      this.moveHistory = game.history();\n      this.fullGame = this.moveHistory.concat(this.future);\n      this.importedGames = [];\n    } else {\n      game.reset();\n      this.future = [];\n      this.moveHistory = [];\n      this.fullGame = [];\n      this.setState({\n        fen: this.props.fen\n      });\n    }\n    this.engineGame().prepareMove();\n    // Add keyboard event listener\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n  componentWillUnmount() {\n    // Remove keyboard event listener\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n  processCombinedPgn(combinedPgn) {\n    const rawGames = combinedPgn.split(/\\[Event/gi).filter(Boolean);\n    const games = rawGames.map(game => '[Event' + game.trim());\n    const details = games.map(pgn => {\n      const chess = new Chess();\n      chess.loadPgn(pgn);\n      const headers = chess.header();\n      return {\n        pgn: pgn,\n        details: `${headers.White} vs ${headers.Black}, ${headers.Result}, ${headers.Date}`\n      };\n    });\n    this.setState({\n      importedGames: details,\n      selectedGame: null,\n      showDropdown: true,\n      fen: this.props.fen || \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"\n    });\n    localStorage.setItem('importedGames', JSON.stringify(details));\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.selectedGame !== this.state.selectedGame && this.state.selectedGame) {\n      const chess = new Chess();\n      chess.loadPgn(this.state.selectedGame);\n      this.setState({\n        fen: chess.fen()\n      });\n    }\n    if (prevProps.pgn !== this.props.pgn && this.props.pgn) {\n      game.reset();\n      game.loadPgn(this.props.pgn);\n      this.setState({\n        fen: game.fen(),\n        currentPly: 1,\n        future: []\n      });\n      this.moveHistory = game.history();\n      this.engineGame().prepareMove();\n    }\n  }\n  render() {\n    const {\n      fen,\n      orientation,\n      evaluation,\n      bestLine,\n      currentPly,\n      future,\n      showEvaluation,\n      moveHistory,\n      fullGame,\n      importedGames,\n      showDropdown,\n      showEditBoard,\n      fileInputKey,\n      ply0Game,\n      selectedGameshowImportTabs,\n      inputMethod\n    } = this.state;\n    let headers = {};\n    if (selectedGame) {\n      console.log(selectedGame);\n      const chess = new Chess();\n      chess.loadPgn(selectedGame);\n      headers = chess.header();\n    }\n    const whiteResult = headers.Result === '1-0' ? 1 : headers.Result === '1/2-1/2' ? 0.5 : 0;\n    const blackResult = headers.Result === '0-1' ? 1 : headers.Result === '1/2-1/2' ? 0.5 : 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analysis-toolkit\",\n        id: \"EditingOff\",\n        style: {\n          display: showEditBoard ? \"none\" : \"block\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: showImportTabs ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"import-tabs\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tab-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tab\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: inputMethod === 'chesscom' ? 'tablinks active' : 'tablinks',\n                  onClick: () => this.setState({\n                    inputMethod: 'chesscom'\n                  }),\n                  children: \"Chess.com\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: inputMethod === 'lichess' ? 'tablinks active' : 'tablinks',\n                  onClick: () => this.setState({\n                    inputMethod: 'lichess'\n                  }),\n                  children: \"Lichess\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: inputMethod === 'pgn' ? 'tablinks active' : 'tablinks',\n                  onClick: () => this.setState({\n                    inputMethod: 'pgn'\n                  }),\n                  children: \"PGN\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tabcontent\",\n                style: {\n                  display: inputMethod === 'pgn' ? 'block' : 'none'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    onChange: this.handleFileSelect\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => this.setState({\n                      showImportTabs: false\n                    }),\n                    children: \"Add Game(s)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tabcontent\",\n                style: {\n                  display: inputMethod === 'lichess' ? 'block' : 'none'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"opponentUsername\",\n                    children: \"Lichess Username:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 525,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"opponentUsername\",\n                    value: this.state.opponentName,\n                    onChange: e => this.setState({\n                      opponentName: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 526,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: this.handleAddLichessGames,\n                    children: \"Add Game(s)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 532,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tabcontent\",\n                style: {\n                  display: inputMethod === 'chesscom' ? 'block' : 'none'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"opponentUsername\",\n                    children: \"Chess.com Username:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 538,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"opponentUsername\",\n                    value: this.state.opponentName,\n                    onChange: e => this.setState({\n                      opponentName: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: this.handleAddChessComGames,\n                    children: \"Add Game(s)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 9\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown-header\",\n                onClick: this.toggleDropdown,\n                children: [\"Imported Games: \", importedGames.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 11\n              }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"games-list\",\n                children: importedGames.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Click \\\"Upload a Game\\\" to Import Games\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 17\n                }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: importedGames.map((game, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"game-item\",\n                    onClick: () => this.handleGameSelect(game.pgn),\n                    children: game.details\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 563,\n                    columnNumber: 21\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"upload-button\",\n                onClick: () => this.setState({\n                  showImportTabs: true\n                }),\n                style: {\n                  backgroundColor: 'green',\n                  color: 'white',\n                  padding: '10px 20px',\n                  fontSize: '16px'\n                },\n                children: \"Upload New Game(s)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"remove-file-button\",\n                onClick: this.handleRemoveFile,\n                style: {\n                  marginLeft: '10px',\n                  padding: '10px 20px',\n                  fontSize: '16px'\n                },\n                children: \"Clear Imported Games\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 9\n        }, this), \");\", /*#__PURE__*/_jsxDEV(\"div\", {\n          style: boardsContainer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"analysis-board-container\",\n            style: {\n              display: \"block\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Chessboard, {\n              position: fen,\n              width: 520,\n              pieces: customPieces({\n                squareWidth: 65,\n                isDragging: false\n              }),\n              onDrop: this.onDrop,\n              orientation: orientation,\n              boardStyle: boardStyle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 11\n        }, this), selectedGame && (orientation === \"white\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"black-upper-info-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [blackResult, \" \", headers.Black, \" (\", headers.BlackElo, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 5\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"white-upper-info-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [whiteResult, \" \", headers.White, \" (\", headers.WhiteElo, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 5\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"move-history\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: this.fullGame && this.fullGame.map((move, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: ply0Game ? index === currentPly - 1 ? 'selected' : '' : index === currentPly - 2 ? 'selected' : '',\n              onClick: () => this.goToMove(index),\n              children: [ply0Game ? index % 2 === 0 ? `${index / 2 + 1}. ` : `${(index - 1) / 2 + 1}...` : index % 2 === 0 ? `${index / 2 + 1}... ` : `${(index - 1) / 2 + 2}. `, move]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }, this), selectedGame && (orientation === \"white\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"white-lower-info-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [whiteResult, \" \", headers.White, \" (\", headers.WhiteElo, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 5\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"black-lower-info-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [blackResult, \" \", headers.Black, \" (\", headers.BlackElo, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 5\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleEditBoard,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleFlipBoard,\n            children: \"Flip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleResetBoard,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.toggleStockfishEvaluation,\n            children: \"\\uD83D\\uDC1F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.goToStart,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.goToPreviousMove,\n            children: \"\\u21E6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.goToNextMove,\n            children: \"\\u21E8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.goToEnd,\n            children: \"End\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this), showEvaluation && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stockfish-evaluation\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Stockfish Eval: \", evaluation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: bestLine\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this), showEditBoard && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-board-container\",\n        id: \"EditingOn\",\n        style: {\n          display: \"block\"\n        },\n        children: /*#__PURE__*/_jsxDEV(EditBoard, {\n          in_fen: fen,\n          updateFenAndClose: this.updateFenAndCloseEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this);\n  }\n}\nAnalysisBoard.propTypes = {\n  children: PropTypes.func,\n  fen: PropTypes.string,\n  pgn: PropTypes.string\n};\nexport default AnalysisBoard;\nconst customPieces = ({\n  squareWidth,\n  isDragging\n}) => ({\n  wK: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/4/42/Chess_klt45.svg\",\n    alt: \"White King\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 682,\n    columnNumber: 5\n  }, this),\n  wQ: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/1/15/Chess_qlt45.svg\",\n    alt: \"White Queen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 692,\n    columnNumber: 5\n  }, this),\n  wR: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg\",\n    alt: \"White Rook\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 702,\n    columnNumber: 5\n  }, this),\n  wB: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/b/b1/Chess_blt45.svg\",\n    alt: \"White Bishop\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 712,\n    columnNumber: 5\n  }, this),\n  wN: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/7/70/Chess_nlt45.svg\",\n    alt: \"White Knight\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 722,\n    columnNumber: 5\n  }, this),\n  wP: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/4/45/Chess_plt45.svg\",\n    alt: \"White Pawn\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 732,\n    columnNumber: 5\n  }, this),\n  bK: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/f/f0/Chess_kdt45.svg\",\n    alt: \"Black King\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 742,\n    columnNumber: 5\n  }, this),\n  bQ: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/4/47/Chess_qdt45.svg\",\n    alt: \"Black Queen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 752,\n    columnNumber: 5\n  }, this),\n  bR: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg\",\n    alt: \"Black Rook\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 762,\n    columnNumber: 5\n  }, this),\n  bB: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/9/98/Chess_bdt45.svg\",\n    alt: \"Black Bishop\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 772,\n    columnNumber: 5\n  }, this),\n  bN: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/e/ef/Chess_ndt45.svg\",\n    alt: \"Black Knight\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 782,\n    columnNumber: 5\n  }, this),\n  bP: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/c/c7/Chess_pdt45.svg\",\n    alt: \"Black Pawn\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 792,\n    columnNumber: 5\n  }, this)\n});\nconst boardStyle = {\n  borderRadius: \"5px\",\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\n};\nconst boardsContainer = {\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  alignItems: \"center\"\n};","map":{"version":3,"names":["React","Component","axios","PropTypes","Chess","EditBoard","Chessboard","jsxDEV","_jsxDEV","STOCKFISH","window","game","AnalysisBoard","constructor","args","state","orientation","evaluation","bestLine","currentPly","future","ply0Game","showEvaluation","moveHistory","fullGame","importedGames","JSON","parse","localStorage","getItem","showDropdown","selectedGame","gamesDetails","showEditBoard","fen","props","startFen","fileInputKey","Date","now","showImportTabs","inputMethod","opponentName","handleKeyDown","event","key","goToNextMove","goToPreviousMove","goToStart","goToEnd","handleGameSelect","pgn","reset","tmp","loadPgn","setState","history","engineGame","prepareMove","handleFileSelect","file","target","files","reader","FileReader","onload","e","fullPgn","result","rawGames","split","filter","Boolean","games","map","index","trim","details","chess","headers","header","White","Black","Result","setItem","stringify","readAsText","handleRemoveFile","removeItem","displayGameDetails","handleFlipBoard","handleResetBoard","toggleStockfishEvaluation","prevState","moves","load","previous","length","i","move","previous_fen","previous_pgn","shift","unshift","toggleDropdown","goToMove","moveIndex","newMoveHistory","slice","options","engine","Worker","stockfishjs","postMessage","onmessage","line","data","extractEvaluation","extractBestLine","previousOutput","handleEditBoard","updateFenAndCloseEdit","newFen","parts","isWhitesTurn","console","log","onDrop","sourceSquare","targetSquare","legalMoves","verbose","find","from","to","san","promotion","concat","mateEvalMatch","match","evalMatch","isCheckmate","turn","parseInt","Math","round","bestLineMatch","sanMoves","min","floor","moveNumber","sanMove","push","join","componentDidMount","combinedPgn","processCombinedPgn","document","addEventListener","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","render","selectedGameshowImportTabs","whiteResult","blackResult","children","className","id","style","display","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","htmlFor","value","handleAddLichessGames","handleAddChessComGames","backgroundColor","color","padding","fontSize","marginLeft","boardsContainer","position","width","pieces","customPieces","squareWidth","isDragging","boardStyle","BlackElo","WhiteElo","in_fen","updateFenAndClose","propTypes","func","string","wK","height","src","alt","wQ","wR","wB","wN","wP","bK","bQ","bR","bB","bN","bP","borderRadius","boxShadow","justifyContent","alignItems"],"sources":["/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/AnalysisBoard.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\nimport PropTypes from \"prop-types\";\nimport { Chess } from \"chess.js\";\n//import { Chessboard } from 'react-chessboard';\nimport EditBoard from \"./EditBoard\";\nimport Chessboard from \"chessboardjsx\";\n\nconst STOCKFISH = window.STOCKFISH;\nconst game = new Chess();\n\nclass AnalysisBoard extends Component {\n  static propTypes = {\n    children: PropTypes.func,\n    fen: PropTypes.string,\n    pgn: PropTypes.string,\n  };\n  \n  state = {\n    orientation: \"white\",\n    evaluation: \"\",\n    bestLine: \"\",\n    currentPly: 1,\n    future: [],\n    ply0Game:true,\n    showEvaluation: false,\n    moveHistory: [],\n    fullGame: [],\n    importedGames: JSON.parse(localStorage.getItem('importedGames')) || [],\n    showDropdown: false,\n    selectedGame: null,\n    gamesDetails: [],\n    showEditBoard: false,\n    fen: this.props.fen || 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n    startFen: this.props.fen || 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n    fileInputKey: Date.now(), // To reset the file input\n    showImportTabs: false,\n  inputMethod: 'pgn',\n  opponentName: '',\n\n  };\n\n  componentDidMount() {\n    const combinedPgn = localStorage.getItem('combinedPgn');\n    if (combinedPgn) {\n        this.processCombinedPgn(combinedPgn);\n        localStorage.removeItem('combinedPgn');\n        this.future = [];\n    }else if (this.props.pgn) {\n      game.loadPgn(this.props.pgn);\n      this.future = [];\n      this.moveHistory = game.history();\n      this.fullGame = this.moveHistory.concat(this.future);\n      this.importedGames = [];\n    } else {\n      game.reset();\n      this.future = [];\n      this.moveHistory = [];\n      this.fullGame = [];\n      this.setState({ fen: this.props.fen });\n    }\n    this.engineGame().prepareMove();\n    // Add keyboard event listener\n  document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n  componentWillUnmount() {\n    // Remove keyboard event listener\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\nprocessCombinedPgn(combinedPgn) {\n  const rawGames = combinedPgn.split(/\\[Event/gi).filter(Boolean);\n  const games = rawGames.map(game => '[Event' + game.trim());\n\n  const details = games.map(pgn => {\n      const chess = new Chess();\n      chess.loadPgn(pgn);\n      const headers = chess.header();\n      return {\n          pgn: pgn,\n          details: `${headers.White} vs ${headers.Black}, ${headers.Result}, ${headers.Date}`\n      };\n  });\n\n  this.setState({\n      importedGames: details,\n      selectedGame: null,\n      showDropdown: true,\n      fen: this.props.fen || \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"\n    });\n\n  localStorage.setItem('importedGames', JSON.stringify(details));\n}\n  handleKeyDown = (event) => {\n    switch (event.key) {\n      case \"ArrowRight\":\n        this.goToNextMove();\n        break;\n      case \"ArrowLeft\":\n        this.goToPreviousMove();\n        break;\n      case \"ArrowDown\":\n        this.goToStart();\n        break;\n      case \"ArrowUp\":\n        this.goToEnd();\n        break;\n      default:\n        break;\n    }\n  };\n  \n\n  handleGameSelect = (pgn) => {\n    game.reset();\n    const tmp = new Chess();\n    tmp.loadPgn(pgn);\n    this.setState({ \n      fen: this.props.fen || \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n      showDropdown: true,\n      selectedGame:pgn,\n    });\n    this.future = tmp.history();\n    this.moveHistory = tmp.history();\n    this.fullGame = this.moveHistory;\n    this.engineGame().prepareMove();\n  };\n\n  handleFileSelect = async (event) => {\n    const file = event.target.files[0];\n    if (!file) {\n      return;\n    }\n  \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const fullPgn = e.target.result;\n      let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n      let games = rawGames.map((game, index) => {\n        return ('[Event' + game).trim();\n      });\n      const details = games.map(pgn => {\n        const chess = new Chess();\n        chess.loadPgn(pgn);\n        const headers = chess.header();\n        return {\n          pgn: pgn,\n          details: `${headers.White} vs ${headers.Black}, ${headers.Result}, ${headers.Date}`\n        };\n      });\n  \n      this.setState({\n        importedGames: [...this.state.importedGames, ...details],\n        selectedGame: null,\n        fileInputKey: Date.now() // Reset the file input\n      });\n      localStorage.setItem('importedGames', JSON.stringify([...this.state.importedGames, ...details]));\n    };\n    reader.readAsText(file);\n  };\n  \n\n  handleRemoveFile = () => {\n    this.setState({\n      importedGames: [],\n      selectedGame: null,\n      fileInputKey: Date.now() // Reset the file input\n    });\n    localStorage.removeItem('importedGames');\n  };\n\n  displayGameDetails = (pgn) => {\n    const chess = new Chess();\n    chess.loadPgn(pgn);\n    const headers = chess.header();\n    return `${headers.White} vs ${headers.Black}, ${headers.Result}, ${headers.Date}`;\n  };\n\n  handleFlipBoard = () => {\n    this.setState(({ orientation }) => ({\n      orientation: orientation === 'white' ? 'black' : 'white',\n    }));\n  };\n\n  handleResetBoard = () => {\n    game.reset();\n    this.setState(({ fen: game.fen() , selectedGame: null}));\n    this.future = [];\n    this.moveHistory = [];\n    this.fullGame = [];\n    this.engineGame().prepareMove();\n  };\n\n  toggleStockfishEvaluation = () => {\n    this.setState(prevState => ({\n      showEvaluation: !prevState.showEvaluation\n    }));\n  };\n\n  goToEnd = () => {\n    const moves = game.history();\n    const tmp = new Chess();\n    tmp.load(this.state.startFen);\n    const previous = moves.length + this.future.length - 1;\n    if (previous >= 0) {\n      if (moves.length > 0) {\n        for (var i = 0; i < moves.length; i += 1) {\n          tmp.move(moves[i]);\n        }\n      }\n\n      if (this.future.length - 1 >= 0) {\n        for (var i = 0; i < this.future.length; i += 1) {\n          tmp.move(this.future[i]);\n        }\n        const previous_fen = tmp.fen();\n        const previous_pgn = tmp.pgn();\n        this.future = [];\n        game.load(previous_fen);\n        game.loadPgn(previous_pgn);\n        this.setState(({ fen: game.fen() }));\n        this.moveHistory = game.history();\n        this.setState({currentPly: this.state.ply0Game?this.moveHistory.length:this.moveHistory.length+1});\n        this.engineGame().prepareMove();\n        \n        \n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  };\n\n  goToNextMove = () => {\n    if (this.future.length > 0) {\n      game.move(this.future[0]);\n      this.setState(({ fen: game.fen() }));\n      this.future.shift();\n      this.moveHistory = game.history();\n      this.setState({currentPly: this.state.ply0Game?this.moveHistory.length:this.moveHistory.length+1});\n      this.engineGame().prepareMove();\n      \n    }\n    return;\n  };\n\n  goToPreviousMove = () => {\n    const moves = game.history();\n    const tmp = new Chess();\n    tmp.load(this.state.startFen);\n    const previous = moves.length - 1;\n    if (previous >= 0) {\n      for (var i = 0; i < previous; i += 1) {\n        tmp.move(moves[i]);\n      }\n      const previous_fen = tmp.fen();\n\n      const previous_pgn = tmp.pgn();\n      this.future.unshift(moves[previous]);\n      tmp.move(moves[previous]);\n      game.load(previous_fen);\n      game.loadPgn(previous_pgn);\n      this.setState({ fen: previous_fen });\n      this.moveHistory = game.history();\n      this.setState({currentPly: this.state.ply0Game?this.moveHistory.length:this.moveHistory.length+1});\n      this.engineGame().prepareMove();\n      \n    }\n    return;\n  };\n\n  goToStart = () => {\n    const moves = game.history();\n    const tmp = new Chess();\n    tmp.load(this.state.startFen);\n    const previous_fen = tmp.fen();\n    const previous_pgn = tmp.pgn();\n    const previous = moves.length - 1;\n    if (previous >= 0) {\n      for (var i = 0; i < previous; i += 1) {\n        tmp.move(moves[i]);\n      }\n      this.future.unshift(...moves);\n      game.load(previous_fen);\n      game.loadPgn(previous_pgn);\n      this.setState(({ fen: game.fen() }));\n      this.moveHistory = [];\n      this.setState({currentPly: this.state.ply0Game?this.moveHistory.length:this.moveHistory.length+1});\n      this.engineGame().prepareMove();\n      \n    }\n    return;\n  };\n  \n\n  toggleDropdown = () => {\n    this.setState((prevState) => ({\n      showDropdown: !prevState.showDropdown,\n    }));\n  };\n\n  goToMove = (moveIndex) => {\n    const moves = this.fullGame;\n    const tmp = new Chess();\n\n    for (let i = 0; i <= moveIndex; i++) {\n      tmp.move(moves[i]);\n    }\n\n    const previous_fen = tmp.fen();\n    const previous_pgn = tmp.pgn();\n    game.loadPgn(previous_pgn);\n    this.setState({ fen: previous_fen });\n\n    const newMoveHistory = tmp.history();\n    this.moveHistory = newMoveHistory;\n    this.future = moves.slice(moveIndex + 1);\n    this.setState({currentPly: this.state.ply0Game?this.moveHistory.length:this.moveHistory.length+1});\n    this.engineGame().prepareMove();\n    \n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.selectedGame !== this.state.selectedGame && this.state.selectedGame) {\n      const chess = new Chess();\n      chess.loadPgn(this.state.selectedGame);\n      this.setState({ fen: chess.fen() });\n    }\n    if (prevProps.pgn !== this.props.pgn && this.props.pgn) {\n      game.reset();\n      game.loadPgn(this.props.pgn);\n      this.setState({ fen: game.fen(), currentPly: 1, future: [] });\n      this.moveHistory = game.history();\n      this.engineGame().prepareMove();\n    }\n  }\n\n  engineGame = (options) => {\n    options = options || {};\n\n    let engine =\n      typeof STOCKFISH === \"function\"\n        ? STOCKFISH()\n        : new Worker(options.stockfishjs || \"stockfish.js\");\n\n    engine.postMessage(\"uci\");\n\n    engine.onmessage = (event) => {\n      let line;\n\n      if (event && typeof event === \"object\") {\n        line = event.data;\n        const evaluation = this.extractEvaluation(line);\n        const bestLine = this.extractBestLine(line);\n        this.setState({ evaluation, bestLine });\n      } else {\n        line = event;\n      }\n\n      const bestLine = this.extractBestLine(line);\n      this.setState({ previousOutput: bestLine });\n    };\n\n    return {\n      prepareMove: function () {\n        engine.postMessage(\"position fen \" + game.fen());\n        engine.postMessage(\"go depth 17\");\n      },\n    };\n  };\n\n  handleEditBoard = () => {\n    this.setState(prevState => ({\n      showEditBoard: !prevState.showEditBoard\n    }));\n  };\n\n  updateFenAndCloseEdit = (newFen) => {\n    game.reset();\n    game.load(newFen);\n    const parts = newFen.split(' ');\n    const isWhitesTurn = parts[1] === 'w';\n    this.setState({\n      fen: newFen,\n      showEditBoard: false,\n      currentPly: isWhitesTurn ? 0 : 1,\n      ply0Game:isWhitesTurn? true: false,\n      startFen:newFen,\n      selectedGame:null\n    });\n    this.future = [];\n    this.moveHistory = [];\n    this.fullGame = [];\n    console.log(this.state.currentPly);\n    this.engineGame().prepareMove();\n  };\n\n  onDrop = ({ sourceSquare, targetSquare }) => {\n    \n    const legalMoves = game.moves({ verbose: true });\n    const move = legalMoves.find(\n      (move) => move.from === sourceSquare && move.to === targetSquare\n    );\n\n    if (!move) {\n      console.log(\"Illegal move\");\n      return;\n    }\n\n    if (move.san === this.future[0]) {\n      this.future.shift();\n    } else {\n      this.future = [];\n    }\n\n    game.move({ from: sourceSquare, to: targetSquare, promotion: \"q\" });\n    this.moveHistory = game.history();\n    this.setState({currentPly: this.state.ply0Game?this.moveHistory.length:this.moveHistory.length+1});\n    this.fullGame = this.moveHistory.concat(this.future);\n    this.setState((prevState) => ({\n      fen: game.fen()\n    }));\n    this.engineGame().prepareMove();\n    \n  };\n\n  extractEvaluation = (line) => {\n    const mateEvalMatch = line.match(/score mate (-?\\d+)/);\n    const evalMatch = line.match(/score cp (-?\\d+)/);\n    // Handle game over (mate on the board)\n    if (game.isCheckmate()) {\n      return game.turn() === \"w\" ? \"Mate on the board! Black wins!\" : \"Mate on the board! White wins!\";\n    }\n\n    // Handle forced mate evaluation\n    if (mateEvalMatch) {\n      const evaluation = parseInt(mateEvalMatch[1], 10);\n      if (evaluation > 0) {\n        return game.turn() === \"b\" ? `Black Mate in ${evaluation}` : `White Mate in ${evaluation}`;\n      }\n      return game.turn() === \"w\" ? `Black Mate in ${-evaluation}` : `White Mate in ${-evaluation}`;\n    }\n  \n  \n    // Handle normal evaluation\n    if (evalMatch) {\n      const evaluation = Math.round(parseInt(evalMatch[1]) * 0.01 * 100) / 100;\n      if (evaluation >= 0) {\n        return game.turn() === \"b\" ? -evaluation : `+${evaluation}`;\n      }\n      return game.turn() === \"w\" ? evaluation : `+${-evaluation}`;\n    }\n\n     \n    \n  \n   \n  \n    return null;\n  };\n  \n\n  extractBestLine = (line) => {\n    const currentPly = this.state.currentPly;\n    const bestLineMatch = line.match(/pvSan (.*) bmc/);\n    if (game.isCheckmate()) {\n      return null;\n    }\n    if (bestLineMatch) {\n      const moves = bestLineMatch[1].split(\" \");\n      const sanMoves = [];\n      if (moves.length !== 1) {\n        for (let i = 0; i < Math.min(2 * Math.floor(moves.length / 2), 14); i += 1) {\n          const moveNumber = i + currentPly+1;\n          const sanMove = moveNumber % 2 === 1 ? `${Math.floor((moveNumber + 1) / 2)}.${moves[i]}` : `${Math.floor((moveNumber + 1) / 2)}...${moves[i]}`;\n          sanMoves.push(sanMove);\n        }\n        return sanMoves.join(\" \");\n      } else {\n        const sanMove = currentPly % 2 === 0 ? `${Math.floor((currentPly + 1) / 2)}.${moves[0]}` : `${Math.floor((currentPly + 1) / 2)}...${moves[0]}`;\n        return sanMove;\n      }\n    }\n    return this.state.previousOutput;\n  };\n\n  render() {\n    const { fen, orientation, evaluation, bestLine, currentPly, future, showEvaluation, moveHistory, fullGame, importedGames, showDropdown, showEditBoard, fileInputKey, ply0Game, selectedGameshowImportTabs, \n      inputMethod} = this.state;\n    \n    let headers = {};\n    if (selectedGame) {\n      console.log(selectedGame);\n      const chess = new Chess();\n      chess.loadPgn(selectedGame);\n      headers = chess.header();\n    }\n  \n    const whiteResult = headers.Result === '1-0' ? 1 : (headers.Result === '1/2-1/2' ? 0.5 : 0);\n    const blackResult = headers.Result === '0-1' ? 1 : (headers.Result === '1/2-1/2' ? 0.5 : 0);\n  \n    return (\n      <div>\n        <div className=\"analysis-toolkit\" id=\"EditingOff\" style={{ display: showEditBoard ? \"none\" : \"block\" }}>\n        <div>\n      {showImportTabs ? (\n        <div className=\"import-tabs\">\n          <div className=\"tab-container\">\n            <div className=\"tab\">\n              <button className={inputMethod === 'chesscom' ? 'tablinks active' : 'tablinks'} onClick={() => this.setState({ inputMethod: 'chesscom' })}>Chess.com</button>\n              <button className={inputMethod === 'lichess' ? 'tablinks active' : 'tablinks'} onClick={() => this.setState({ inputMethod: 'lichess' })}>Lichess</button>\n              <button className={inputMethod === 'pgn' ? 'tablinks active' : 'tablinks'} onClick={() => this.setState({ inputMethod: 'pgn' })}>PGN</button>\n            </div>\n\n            <div className=\"tabcontent\" style={{ display: inputMethod === 'pgn' ? 'block' : 'none' }}>\n              <div className=\"form-group\">\n                <input type=\"file\" onChange={this.handleFileSelect} />\n                <button onClick={() => this.setState({ showImportTabs: false })}>Add Game(s)</button>\n              </div>\n            </div>\n\n            <div className=\"tabcontent\" style={{ display: inputMethod === 'lichess' ? 'block' : 'none' }}>\n              <div className=\"form-group\">\n                <label htmlFor=\"opponentUsername\">Lichess Username:</label>\n                <input \n                  type=\"text\" \n                  id=\"opponentUsername\" \n                  value={this.state.opponentName} \n                  onChange={(e) => this.setState({ opponentName: e.target.value })} \n                />\n                <button onClick={this.handleAddLichessGames}>Add Game(s)</button>\n              </div>\n            </div>\n\n            <div className=\"tabcontent\" style={{ display: inputMethod === 'chesscom' ? 'block' : 'none' }}>\n              <div className=\"form-group\">\n                <label htmlFor=\"opponentUsername\">Chess.com Username:</label>\n                <input \n                  type=\"text\" \n                  id=\"opponentUsername\" \n                  value={this.state.opponentName} \n                  onChange={(e) => this.setState({ opponentName: e.target.value })} \n                />\n                <button onClick={this.handleAddChessComGames}>Add Game(s)</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div>\n          <div>\n          <div className=\"dropdown-header\" onClick={this.toggleDropdown}>\n            Imported Games: {importedGames.length}\n          </div>\n          {showDropdown && (\n            <div className=\"games-list\">\n              {importedGames.length === 0 ? (\n                <p>Click \"Upload a Game\" to Import Games</p>\n              ) : (\n                <ul>\n                  {importedGames.map((game, index) => (\n                    <li className=\"game-item\" key={index} onClick={() => this.handleGameSelect(game.pgn)}>\n                      {game.details}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          )}\n          </div>\n          <div className=\"file-buttons\">\n  <button \n    className=\"upload-button\" \n    onClick={() => this.setState({ showImportTabs: true })}\n    style={{ backgroundColor: 'green', color: 'white', padding: '10px 20px', fontSize: '16px' }}\n  >\n    Upload New Game(s)\n  </button>\n  <button \n    className=\"remove-file-button\" \n    onClick={this.handleRemoveFile} \n    style={{ marginLeft: '10px', padding: '10px 20px', fontSize: '16px' }}\n  >\n    Clear Imported Games\n  </button>\n</div>\n</div>\n      )}\n    </div>\n  );\n\n          <div style={boardsContainer}>\n            <div className=\"analysis-board-container\" style={{ display: \"block\" }}>\n              <Chessboard\n                position={fen}\n                width={520}\n                pieces={customPieces({ squareWidth:65, isDragging: false })}\n                onDrop={this.onDrop}\n                orientation={orientation}\n                boardStyle={boardStyle}\n              />\n            </div>\n          </div>\n          {selectedGame && (\n  orientation === \"white\" ? (\n    <div className=\"black-upper-info-bar\">\n      <span>{blackResult} {headers.Black} ({headers.BlackElo})</span>\n    </div>\n  ) : (\n    <div className=\"white-upper-info-bar\">\n      <span>{whiteResult} {headers.White} ({headers.WhiteElo})</span>\n    </div>\n  )\n)}\n\n          <div className=\"move-history\">\n            <ul>\n              {this.fullGame && this.fullGame.map((move, index) => (\n                <li\n                  key={index}\n                  className={ply0Game ? (index === currentPly - 1 ? 'selected' : '') : (index === currentPly - 2 ? 'selected' : '')}\n                  onClick={() => this.goToMove(index)}\n                >\n                  {ply0Game ? (\n                    index % 2 === 0 ? `${index / 2 + 1}. ` : `${(index - 1) / 2 + 1}...`\n                  ) : (\n                    index % 2 === 0 ? `${index / 2 + 1}... ` : `${(index - 1) / 2 + 2}. `\n                  )}\n                  {move}\n                </li>\n              ))}\n            </ul>\n            \n          </div>\n          {selectedGame && (\n  orientation === \"white\" ? (\n    <div className=\"white-lower-info-bar\">\n      <span>{whiteResult} {headers.White} ({headers.WhiteElo})</span>\n    </div>\n    \n  ) : (\n    <div className=\"black-lower-info-bar\">\n      <span>{blackResult} {headers.Black} ({headers.BlackElo})</span>\n    </div>\n  )\n)}\n\n          <div className=\"control-panel\">\n            <button onClick={this.handleEditBoard}>Edit</button>\n            <button onClick={this.handleFlipBoard}>Flip</button>\n            <button onClick={this.handleResetBoard}>Reset</button>\n            <button onClick={this.toggleStockfishEvaluation}>🐟</button>\n            <button onClick={this.goToStart}>Start</button>\n            <button onClick={this.goToPreviousMove}>⇦</button>\n            <button onClick={this.goToNextMove}>⇨</button>\n            <button onClick={this.goToEnd}>End</button>\n            {showEvaluation && (\n              <div className=\"stockfish-evaluation\">\n                <div>Stockfish Eval: {evaluation}</div>\n                <div>{bestLine}</div>\n              </div>\n            )}\n          </div>\n        </div>\n        {showEditBoard && (\n          <div className=\"edit-board-container\" id=\"EditingOn\" style={{ display: \"block\" }}>\n            <EditBoard in_fen={fen} updateFenAndClose={this.updateFenAndCloseEdit} />\n          </div>\n        )}\n      </div>\n    );\n  }\n  \n  \n  \n}\nexport default AnalysisBoard;\n\nconst customPieces = ({ squareWidth, isDragging }) => ({\n  wK: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/4/42/Chess_klt45.svg\"\n      alt=\"White King\"\n    />\n  ),\n  wQ: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/1/15/Chess_qlt45.svg\"\n      alt=\"White Queen\"\n    />\n  ),\n  wR: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg\"\n      alt=\"White Rook\"\n    />\n  ),\n  wB: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Chess_blt45.svg\"\n      alt=\"White Bishop\"\n    />\n  ),\n  wN: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/7/70/Chess_nlt45.svg\"\n      alt=\"White Knight\"\n    />\n  ),\n  wP: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/4/45/Chess_plt45.svg\"\n      alt=\"White Pawn\"\n    />\n  ),\n  bK: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/f/f0/Chess_kdt45.svg\"\n      alt=\"Black King\"\n    />\n  ),\n  bQ: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/4/47/Chess_qdt45.svg\"\n      alt=\"Black Queen\"\n    />\n  ),\n  bR: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg\"\n      alt=\"Black Rook\"\n    />\n  ),\n  bB: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/9/98/Chess_bdt45.svg\"\n      alt=\"Black Bishop\"\n    />\n  ),\n  bN: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/e/ef/Chess_ndt45.svg\"\n      alt=\"Black Knight\"\n    />\n  ),\n  bP: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/c/c7/Chess_pdt45.svg\"\n      alt=\"Black Pawn\"\n    />\n  )\n});\n\n\n\n\nconst boardStyle = {\n  borderRadius: \"5px\",\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\n};\n\nconst boardsContainer = {\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  alignItems: \"center\"\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}