{"ast":null,"code":"var _jsxFileName = \"/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/BlunderPunisher.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Chess } from 'chess.js';\nimport AdvancedFilter from './AdvancedFilter'; // Import the new component\nimport displayErrorBanner from './App.js';\nimport './styles.css';\n\n/*\n<div className=\"form-group\">\n                            <label htmlFor=\"precisionLevel\">Min Mistake Frequency:</label>\n                            <select \n                                id=\"precisionLevel\" \n                                value={precisionLevel} \n                                onChange={(e) => setPrecisionLevel(e.target.value)}\n                            >\n                                <option value=\"10% of Games\">10% of Games (5s-1min)</option>\n                                <option value=\"3% of Games\">3% of Games (30s-4min)</option>\n                                <option value=\"At Least 1 Game\">At Least 1 Game (1-30min)</option>\n                            </select>\n                        </div>\n*/\n\n// Import both logo images\nimport logo from './checkmatewizard_transparent.png'; // Adjust the path as needed\nimport logoWhite from './checkmatewizard_pure_white.png'; // Adjust the path as needed\nimport rightArrow from './rarrow_white.png'; // Adjust the path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STOCKFISH = window.STOCKFISH;\nconst defaultState = {\n  importedGames: [],\n  gamesCount: 0,\n  gamesProcessed: 0,\n  commonLines: [],\n  filteredData: [],\n  thePgnList: [],\n  previousOutput: \"\",\n  opponentName: '',\n  opponentColor: 'White',\n  precisionLevel: '3% of Games',\n  processing: false,\n  showTable: false,\n  activeDropdown: null,\n  inputMethod: 'chesscom',\n  isLogoHovered: false,\n  openingStats: {}\n};\nconst BlunderPunisher = () => {\n  _s();\n  const [showAdvancedFilter, setShowAdvancedFilter] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [filterParams, setFilterParams] = useState(null);\n  const [filter, setFilter] = useState('blunderPunisher_all'); // Default filter is 'All Games'\n  const [isLogoHovered, setIsLogoHovered] = useState(defaultState.isLogoHovered);\n  const [importedGames, setImportedGames] = useState(() => JSON.parse(localStorage.getItem('blunderPunisher_importedGames')) || defaultState.importedGames);\n  const [gamesCount, setGamesCount] = useState(() => Number(localStorage.getItem('blunderPunisher_gamesCount')) || defaultState.gamesCount);\n  const [commonLines, setCommonLines] = useState(() => JSON.parse(localStorage.getItem('blunderPunisher_commonLines')) || defaultState.commonLines);\n  const [filteredData, setFilteredData] = useState(() => JSON.parse(localStorage.getItem('blunderPunisher_filteredData')) || defaultState.filteredData);\n  const [thePgnList, setThePgnList] = useState(() => JSON.parse(localStorage.getItem('blunderPunisher_thePgnList')) || defaultState.thePgnList);\n  const [previousOutput, setPreviousOutput] = useState(defaultState.previousOutput);\n  const [opponentName, setOpponentName] = useState(() => localStorage.getItem('blunderPunisher_opponentName') || defaultState.opponentName);\n  const [opponentColor, setOpponentColor] = useState(() => localStorage.getItem('blunderPunisher_opponentColor') || defaultState.opponentColor);\n  const [precisionLevel, setPrecisionLevel] = useState(() => localStorage.getItem('blunderPunisher_precisionLevel') || defaultState.precisionLevel);\n  const [processing, setProcessing] = useState(() => localStorage.getItem('blunderPunisher_processing') || defaultState.processing);\n  const [showTable, setShowTable] = useState(() => localStorage.getItem('blunderPunisher_showTable') || defaultState.showTable);\n  const [activeDropdown, setActiveDropdown] = useState(defaultState.activeDropdown);\n  const [openingStats, setOpeningStats] = useState(() => JSON.parse(localStorage.getItem('blunderPunisher_openingStats')) || defaultState.openingStats); // Holds stats for each opening\n  const [inputMethod, setInputMethod] = useState(() => localStorage.getItem('blunderPunisher_inputMethod') || defaultState.inputMethod);\n  const [gamesProcessed, setGamesProcessed] = useState(() => Number(localStorage.getItem('blunderPunisher_gamesProcessed')) || defaultState.gamesProcessed);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 1200);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n\n  // Event listener for window resize\n\n  useEffect(() => {\n    const handleResize = () => {\n      const isNowMobile = window.innerWidth < 1200;\n      setIsMobile(isNowMobile);\n      if (isNowMobile) {\n        console.log('Applying frozen class');\n        document.body.classList.add('frozen');\n      } else {\n        console.log('Removing frozen class');\n        document.body.classList.remove('frozen');\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('blunderPunisher_openingStats', JSON.stringify(openingStats));\n  }, [openingStats]);\n  useEffect(() => {\n    localStorage.setItem('blunderPunisher_importedGames', JSON.stringify(importedGames));\n  }, [importedGames]);\n  useEffect(() => {\n    localStorage.setItem('blunderPunisher_gamesCount', gamesCount);\n  }, [gamesCount]);\n  useEffect(() => {\n    localStorage.setItem('blunderPunisher_gamesProcessed', gamesProcessed);\n  }, [gamesProcessed]);\n  useEffect(() => {\n    localStorage.setItem('blunderPunisher_commonLines', JSON.stringify(commonLines));\n  }, [commonLines]);\n  useEffect(() => {\n    localStorage.setItem('blunderPunisher_filteredData', JSON.stringify(filteredData));\n  }, [filteredData]);\n  useEffect(() => {\n    localStorage.setItem('blunderPunisher_thePgnList', JSON.stringify(thePgnList));\n  }, [thePgnList]);\n  useEffect(() => {\n    localStorage.setItem('blunderPunisher_opponentName', opponentName);\n  }, [opponentName]);\n  useEffect(() => {\n    localStorage.setItem('blunderPunisher_opponentColor', opponentColor);\n  }, [opponentColor]);\n  useEffect(() => {\n    localStorage.setItem('blunderPunisher_precisionLevel', precisionLevel);\n  }, [precisionLevel]);\n  useEffect(() => {\n    localStorage.setItem('blunderPunisher_inputMethod', inputMethod);\n  }, [inputMethod]);\n  useEffect(() => {\n    localStorage.setItem('blunderPunisher_showTable', showTable);\n  }, [showTable]);\n  useEffect(() => {\n    setProcessing(false); // Reset processing when toggling tabs\n  }, [inputMethod]);\n  const handleReset = () => {\n    // Reset state to default values\n    setImportedGames(defaultState.importedGames);\n    setGamesCount(defaultState.gamesCount);\n    setCommonLines(defaultState.commonLines);\n    setFilteredData(defaultState.filteredData);\n    setThePgnList(defaultState.thePgnList);\n    setPreviousOutput(defaultState.previousOutput);\n    setOpponentName(defaultState.opponentName);\n    setOpponentColor(defaultState.opponentColor);\n    setPrecisionLevel(defaultState.precisionLevel);\n    setProcessing(defaultState.processing);\n    setActiveDropdown(defaultState.activeDropdown);\n    setInputMethod(defaultState.inputMethod);\n    setOpeningStats(defaultState.openingStats);\n    setGamesProcessed(defaultState.gamesProcessed);\n    setShowTable(defaultState.showTable);\n\n    // Clear localStorage\n    localStorage.removeItem('blunderPunisher_importedGames');\n    localStorage.removeItem('blunderPunisher_gamesCount');\n    localStorage.removeItem('blunderPunisher_commonLines');\n    localStorage.removeItem('blunderPunisher_filteredData');\n    localStorage.removeItem('blunderPunisher_thePgnList');\n    localStorage.removeItem('blunderPunisher_opponentName');\n    localStorage.removeItem('blunderPunisher_opponentColor');\n    localStorage.removeItem('blunderPunisher_precisionLevel');\n    localStorage.removeItem('blunderPunisher_inputMethod');\n    localStorage.removeItem('blunderPunisher_combinedPgn');\n    localStorage.removeItem('blunderPunisher_gamesProcessed');\n    localStorage.removeItem('blunderPunisher_processing');\n    localStorage.removeItem('blunderPunisher_showTable');\n    localStorage.removeItem('blunderPunisher_openingStats');\n  };\n  let stockfish = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(\"stockfish.js\");\n  stockfish.postMessage(\"uci\");\n  useEffect(() => {}, [thePgnList]);\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const fullPgn = e.target.result;\n      let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n      let games = rawGames.map(game => '[Event' + game.trim());\n      setImportedGames(games);\n      setGamesCount(games.length);\n    };\n    reader.readAsText(file);\n  };\n  const fetchLichessGames = async (username, maxGames = 1000, timeControls, oldestDate, newestDate, opponentColor) => {\n    const timeClasses = [];\n    if (timeControls.bullet) timeClasses.push('bullet');\n    if (timeControls.blitz) timeClasses.push('blitz');\n    if (timeControls.rapid) timeClasses.push('rapid');\n    if (timeControls.classical) timeClasses.push('classical');\n    const timeClassFilter = timeClasses.length > 0 ? `&perfType=${timeClasses.join(',')}` : '';\n    let allFilteredGames = [];\n    let fetchedGamesCount = 0;\n    let currentPage = 1;\n\n    // Fetch games in batches until we get enough games of the correct color\n    while (allFilteredGames.length < maxGames) {\n      const response = await fetch(`https://lichess.org/api/games/user/${username}?max=1000&moves=true&pgnInJson=false&page=${currentPage}${timeClassFilter}`);\n      const data = await response.text();\n\n      // Split and process the games from the fetched data\n      let rawGames = data.split(/\\[Event/gi).filter(Boolean);\n      if (rawGames.length === 0) {\n        // No more games to fetch, break the loop\n        break;\n      }\n\n      // Filter games by color and date\n      let filteredGames = rawGames.map(game => '[Event' + game.trim()).filter(gamePgn => {\n        const dateMatch = gamePgn.match(/\\[Date \"(\\d{4}\\.\\d{2}\\.\\d{2})\"\\]/);\n        const isWithinRange = !dateMatch || (!oldestDate || new Date(dateMatch[1].replace(/\\./g, '-')) >= new Date(oldestDate)) && (!newestDate || new Date(dateMatch[1].replace(/\\./g, '-')) <= new Date(newestDate));\n\n        // Filter by color\n        const whitePlayerMatch = gamePgn.match(/\\[White \"(.*)\"\\]/);\n        const blackPlayerMatch = gamePgn.match(/\\[Black \"(.*)\"\\]/);\n        const isCorrectColor = opponentColor === 'White' && whitePlayerMatch && whitePlayerMatch[1] === username || opponentColor === 'Black' && blackPlayerMatch && blackPlayerMatch[1] === username;\n        return isWithinRange && isCorrectColor;\n      });\n\n      // Add the filtered games to the result array\n      allFilteredGames = allFilteredGames.concat(filteredGames);\n\n      // Stop if we reached or exceeded the desired number of games\n      if (allFilteredGames.length >= maxGames) {\n        allFilteredGames = allFilteredGames.slice(0, maxGames); // Trim to the exact number of games\n        break;\n      }\n\n      // Increment page and continue fetching\n      currentPage++;\n      fetchedGamesCount += rawGames.length;\n    }\n    return allFilteredGames;\n  };\n  const handleFilterClick = () => {\n    setShowAdvancedFilter(true);\n  };\n  const handleSaveFilter = params => {\n    setFilterParams(params);\n    setShowAdvancedFilter(false);\n    // Apply the filters directly to the games list or during game fetching\n  };\n  const handleCancelFilter = () => {\n    setShowAdvancedFilter(false);\n  };\n  const fetchChessComGames = async (username, maxGames = 1000, timeControls, oldestDate, newestDate, opponentColor) => {\n    const fetchGamesBatch = async archiveUrl => {\n      try {\n        const response = await fetch(archiveUrl);\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Error fetching data: ${response.statusText} - ${errorText}`);\n        }\n        const data = await response.json();\n        const filteredGames = data.games.filter(game => {\n          if (game.rules != \"chess\") return false\n\n          // Check for matching time control\n          ;\n          const isCorrectTimeClass = timeControls.bullet && game.time_class === 'bullet' || timeControls.blitz && game.time_class === 'blitz' || timeControls.rapid && game.time_class === 'rapid' || timeControls.classical && game.time_class === 'classical';\n\n          // Check for matching color\n          const isCorrectColor = opponentColor === 'White' && game.white.username === username || opponentColor === 'Black' && game.black.username === username;\n\n          // Check for date range\n          const gameDate = new Date(game.end_time * 1000); // Convert Unix timestamp to JS Date\n          const isWithinDateRange = (!oldestDate || gameDate >= new Date(oldestDate)) && (!newestDate || gameDate <= new Date(newestDate));\n          return isCorrectTimeClass && isCorrectColor && isWithinDateRange;\n        });\n        return filteredGames;\n      } catch (error) {\n        console.error('Error fetching games batch:', error.message);\n        return []; // Return an empty array if there's an error\n      }\n    };\n    try {\n      const archivesResponse = await fetch(`https://api.chess.com/pub/player/${username}/games/archives`);\n      if (!archivesResponse.ok) {\n        const errorText = await archivesResponse.text();\n        throw new Error(`Error fetching archives: ${archivesResponse.statusText} - ${errorText}`);\n      }\n      const archivesData = await archivesResponse.json();\n      const archives = archivesData.archives.reverse(); // Reverse to start from the most recent\n\n      const results = [];\n      for (let archiveUrl of archives) {\n        if (results.length >= maxGames) break;\n        const games = await fetchGamesBatch(archiveUrl);\n        results.push(...games);\n        if (results.length >= maxGames) {\n          results.length = maxGames; // Trim to the maxGames limit\n          break;\n        }\n      }\n      return results;\n    } catch (error) {\n      console.error('Error fetching games from Chess.com:', error.message);\n      throw error;\n    }\n  };\n  const handleLoadGames = () => {\n    // Logic to load games based on the selected filter (all or last 1000 games)\n    // Update the state variables such as totalGames, gameCounts, oldestGame, newestGame, etc.\n    console.log(`Loading games with filter: ${filter}`);\n  };\n  const openings = {\n    // French Defense\n    \"e4 e6 d4 d5 exd5 exd5 Nc3\": \"French Defense: Exchange, Bogolyubov Variation\",\n    \"e4 e6 d4 d5 exd5 exd5 Bd3\": \"French Defense: Exchange Variation\",\n    \"e4 e6 d4 d5 Nf3\": \"French Defense: Two Knights\",\n    \"e4 e6 d4 d5 Nc3 Bb4\": \"French Defense: Winawer\",\n    \"e4 e6 d4 d5 Nc3 Nf6\": \"French Defense: Winawer Variation\",\n    \"e4 e6 d4 d5 Nc3\": \"French Defense: Classical\",\n    \"e4 e6 d4 d5 Nd2\": \"French Defense: Tarrasch\",\n    \"e4 e6 d4 d5 e5 c5\": \"French Defense: Advance Variation\",\n    \"e4 e6 d4 d5 e5\": \"French Defense: Advance Variation\",\n    \"e4 e6 d4 d5\": \"French Defense: Main Line\",\n    \"e4 e6 Nf3\": \"French Defense: Two Knights\",\n    \"e4 e6 c4\": \"French Defense: Franco-Hiva Gambit\",\n    \"e4 e6 d3\": \"French Defense: King's Indian Attack\",\n    \"e4 e6 d4\": \"French Defense: Advance Variation\",\n    \"e4 e6\": \"French Defense\",\n    // Caro-Kann Defense\n    \"e4 c6 g3\": \"Caro-Kann Defense: Fianchetto Variation\",\n    \"e4 c6 d3\": \"Caro-Kann Defense: King's Indian Attack\",\n    \"e4 c6 Nf3\": \"Caro-Kann Defense: Two Knights\",\n    \"e4 c6 c4\": \"Caro-Kann Defense: Panov-Botvinnik Attack\",\n    \"e4 c6 d4 d5 e5\": \"Caro-Kann Defense: Advance Variation\",\n    \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nf6 Ng5 h6 Nxf7\": \"Caro-Kann Defense: Witty Alien Gambit\",\n    \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nd7 Nf3 Ngf6\": \"Caro-Kann Defense: Smyslov Variation\",\n    \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nd7\": \"Caro-Kann Defense: Karpov Variation\",\n    \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Bf5\": \"Caro-Kann Defense: Tartakower Variation\",\n    \"e4 c6 d4 d5 Nc3 dxe4 Nxe4\": \"Caro-Kann Defense: Classical Variation\",\n    \"e4 c6 d4 d5 Nc3\": \"Caro-Kann Defense: Advance\",\n    \"e4 c6 d4 d5 Nd2\": \"Caro-Kann Defense: Tarrasch\",\n    \"e4 c6 d4 d5 exd5 cxd5 c4\": \"Caro-Kann Defense: Panov-Botvinnik Attack\",\n    \"e4 c6 d4 d5 exd5\": \"Caro-Kann Defense: Exchange\",\n    \"e4 c6 d4 d5\": \"Caro-Kann Defense: Classical\",\n    \"e4 c6 d4\": \"Caro-Kann Defense: Main Line\",\n    \"e4 c6\": \"Caro-Kann Defense\",\n    // Pirc Defense and Modern Defense\n    \"e4 g6 d4 Bg7\": \"Modern Defense: Robatsch Defense\",\n    \"e4 d6 d4 Nf6\": \"Pirc Defense: Classical\",\n    \"e4 g6 d4\": \"Modern Defense\",\n    \"e4 d6 d4\": \"Pirc Defense\",\n    \"e4 g6\": \"Modern Defense\",\n    \"e4 d6\": \"Pirc Defense\",\n    // Scandinavian Defense\n    \"e4 d5 Nf3\": \"Scandinavian Defense: Gambit\",\n    \"e4 d5 exd5\": \"Scandinavian Defense: Main Line\",\n    \"e4 d5\": \"Scandinavian Defense\",\n    // Alekhine's Defense\n    \"e4 Nf6 d3\": \"Alekhine's Defense: King's Indian Attack\",\n    \"e4 Nf6 e5\": \"Alekhine's Defense: Chase Variation\",\n    \"e4 Nf6\": \"Alekhine's Defense\",\n    // Nimzowitsch Defense\n    \"e4 Nc6 d4\": \"Nimzowitsch Defense: Main Line\",\n    \"e4 Nc6\": \"Nimzowitsch Defense\",\n    // Sicilian Defense\n    \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3 a6 Bg5\": \"Sicilian Defense: Najdorf, Main Line\",\n    \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3 a6\": \"Sicilian Defense: Najdorf, English Attack\",\n    \"e4 c5 Nf3 Nc6 d4 cxd4 Nxd4 g6\": \"Sicilian Defense: Accelerated Dragon, Maroczy Bind\",\n    \"e4 c5 Nf3 Nc6 d4 cxd4 Nxd4\": \"Sicilian Defense: Accelerated Dragon\",\n    \"e4 c5 Nf3 Nc6 d4\": \"Sicilian Defense: Open\",\n    \"e4 c5 Nf3 Nc6\": \"Sicilian Defense: Closed\",\n    \"e4 c5 Nf3 e6 d4 cxd4 Nxd4 a6\": \"Sicilian Defense: Kan Variation\",\n    \"e4 c5 Nf3 e6 d4 cxd4 Nxd4 Nc6\": \"Sicilian Defense: Taimanov, Bastrikov\",\n    \"e4 c5 Nf3 e6\": \"Sicilian Defense: Taimanov\",\n    \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3\": \"Sicilian Defense: Classical\",\n    \"e4 c5 Nf3 d6 d4 cxd4 Nxd4\": \"Sicilian Defense: Najdorf Variation, 6.Bg5\",\n    \"e4 c5 Nf3 d6 d4\": \"Sicilian Defense: Open, Najdorf\",\n    \"e4 c5 Nf3 d6\": \"Sicilian Defense: Najdorf Variation\",\n    \"e4 c5 Nf3\": \"Sicilian Defense: Open\",\n    \"e4 c5 d3\": \"Sicilian Defense: King's Indian Attack\",\n    \"e4 c5 g3\": \"Sicilian Defense: Fianchetto Variation\",\n    \"e4 c5 b3\": \"Sicilian Defense: Nimzowitsch-Rossolimo Attack\",\n    \"e4 c5 f4\": \"Sicilian Defense: Grand Prix Attack\",\n    \"e4 c5 Nc3\": \"Sicilian Defense: Closed\",\n    \"e4 c5 d4\": \"Sicilian Defense: Smith-Morra Gambit\",\n    \"e4 c5 c3\": \"Sicilian Defense: Alapin Variation\",\n    \"e4 c5\": \"Sicilian Defense\",\n    // King's Pawn Openings\n    \"e4 e5 d4 exd4 Qxd4\": \"Center Game: Danish Gambit\",\n    \"e4 e5 d4\": \"Center Game\",\n    \"e4 e5 d3\": \"King's Indian Attack\",\n    \"e4 e5 Nf3 Nf6 Nxe5 Nc6\": \"Stafford Gambit\",\n    \"e4 e5 Nc3 Nf6 g3\": \"Vienna Game: Mieses Variation\",\n    \"e4 e5 Nc3 Nf6\": \"Vienna Game: Falkbeer Variation\",\n    \"e4 e5 Nc3\": \"Vienna Game\",\n    \"e4 e5 f4 d6\": \"King's Gambit Declined\",\n    \"e4 e5 f4 exf4 Bc4\": \"King's Gambit Accepted, Bishop's Gambit\",\n    \"e4 e5 f4 exf4 Nf3\": \"King's Gambit Accepted, King's Knight's Gambit\",\n    \"e4 e5 f4 exf4\": \"King's Gambit Accepted\",\n    \"e4 e5 f4\": \"King's Gambit\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1 b5 Bb3 d6 c3 O-O\": \"Ruy Lopez: Closed, Chigorin Defense, 12.d4\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1 b5 Bb3 d6 c3\": \"Ruy Lopez: Closed, Chigorin Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1\": \"Ruy Lopez: Closed, Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7\": \"Ruy Lopez: Closed, Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O\": \"Ruy Lopez: Morphy Defense, Closed\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6\": \"Ruy Lopez: Morphy Defense, Closed\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4\": \"Ruy Lopez: Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6\": \"Ruy Lopez: Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5\": \"Ruy Lopez\",\n    \"e4 e5 Nf3 Nc6 Bc4 Nd4\": \"Blackburne Shilling Gambit\",\n    \"e4 e5 Nf3 Nc6 Bc4 Nf6\": \"Two Knights Defense\",\n    \"e4 e5 Nf3 Nc6 Bc4 Bc5\": \"Italian Game: Giuoco Piano\",\n    \"e4 e5 Nf3 Nc6 Bc4\": \"Italian Game\",\n    \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4 Bc5\": \"Scotch Game: Göring Gambit\",\n    \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4\": \"Scotch Game: Scotch Gambit\",\n    \"e4 e5 Nf3 Nc6 d4\": \"Scotch Game\",\n    \"e4 e5 Nf3 Nc6 d3\": \"King's Indian Attack\",\n    \"e4 e5 Nf3 Nc6\": \"King's Knight Opening: Normal Variation\",\n    \"e4 e5 Nf3 d6\": \"Philidor Defense\",\n    \"e4 e5 Nf3\": \"King's Knight Opening\",\n    \"e4 b5\": \"Polish Defense\",\n    \"e4 b6\": \"Owen's Defense\",\n    \"e4 g6\": \"Modern Defense\",\n    \"e4 Nf6\": \"Alekhine's Defense\",\n    \"e4 d5\": \"Scandinavian Defense\",\n    \"e4 d6\": \"Pirc Defense\",\n    \"e4 e5\": \"Open Game\",\n    \"e4\": \"King's Pawn Opening\",\n    // King's Indian Defense\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O Nbd7\": \"King's Indian Defense: Orthodox Variation, Classical System, 7...Nbd7\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O Nc6\": \"King's Indian Defense: Orthodox Variation, Classical System, 7...Nc6\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O\": \"King's Indian Defense: Orthodox Variation, Classical System, 7.O-O\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2 O-O Nf3\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2 O-O\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2\": \"King's Indian Defense: Orthodox Variation\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 f3\": \"King's Indian Defense: Saemisch Variation\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O\": \"King's Indian Defense: Mar del Plata\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6\": \"King's Indian Defense: Classical\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7\": \"King's Indian Defense: Fianchetto\",\n    \"d4 Nf6 c4 g6\": \"King's Indian Defense\",\n    // Nimzo-Indian Defense\n    \"d4 Nf6 c4 e6 Nc3 Bb4 a3\": \"Nimzo-Indian Defense: Sämisch, Leningrad System\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4 Qb3\": \"Nimzo-Indian Defense: Sämisch Variation\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4 e3 O-O\": \"Nimzo-Indian Defense: Rubinstein, 4...O-O\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4 e3\": \"Nimzo-Indian Defense: Rubinstein\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4 Qc2\": \"Nimzo-Indian Defense: Classical, Capablanca Variation\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4\": \"Nimzo-Indian Defense: Classical\",\n    \"d4 Nf6 c4 e6 Nc3\": \"Nimzo-Indian Defense\",\n    \"d4 Nf6 c4 e6\": \"Indian Game\",\n    \"d4 Nf6 Nf3\": \"King's Indian Attack\",\n    \"d4 Nf6\": \"Indian Game\",\n    // Dutch Defense\n    \"d4 f5 c4\": \"Dutch Defense\",\n    \"d4 c5\": \"Benoni Defense\",\n    \"d4 e6\": \"Horwitz Defense\",\n    \"d4 e5\": \"Englund Gambit\",\n    \"d4 d6\": \"Old Indian Defense\",\n    \"d4 Nc6\": \"Chigorin Defense\",\n    \"d4 g6\": \"Modern Defense\",\n    \"d4 f5\": \"Dutch Defense\",\n    \"d4 d6\": \"Old Indian Defense\",\n    \"d4 f5\": \"Dutch Defense\",\n    // Queen's Gambit\n    \"d4 d5 c4 e6 Nc3 Nf6 Nf3 Be7 Bf4\": \"Queen's Gambit Declined: Harrwitz Attack\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Nf3 Be7\": \"Queen's Gambit Declined: 7.Be7\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Nf3\": \"Queen's Gambit Declined: 6.Nf3\",\n    \"d4 d5 c4 e6 Nc3 c5 cxd5 exd5 Nf3 Nc6\": \"Tarrasch Defense, Main Line\",\n    \"d4 d5 c4 e6 Nc3 c5 cxd5 exd5\": \"Tarrasch Defense, Classical Variation\",\n    \"d4 d5 c4 e6 Nc3 c5\": \"Tarrasch Defense, Closed Variation\",\n    \"d4 d5 c4 e6 Nf3 c5\": \"Tarrasch Defense\",\n    \"d4 d5 c4 e6 Nf3 Nf6\": \"Queen's Gambit Declined: 5.Nf3 Variation, Main Line\",\n    \"d4 d5 c4 e6 Nf3\": \"Queen's Gambit Declined: 5.Nf3 Variation\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Bg5 h6\": \"Queen's Gambit Declined: Orthodox Defense, Lasker Defense\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Bg5 Be7\": \"Queen's Gambit Declined: Orthodox Defense, Main Line\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Bg5\": \"Queen's Gambit Declined: Orthodox Defense\",\n    \"d4 d5 c4 e6 Nc3 Nf6\": \"Queen's Gambit Declined\",\n    \"d4 d5 c4 dxc4\": \"Queen's Gambit Accepted\",\n    \"d4 d5 c4 e6\": \"Queen's Gambit Declined\",\n    \"d4 d5 c4 c6\": \"Slav Defense\",\n    \"d4 d5 c4\": \"Queen's Gambit\",\n    \"d4 d5 Nf3\": \"London System\",\n    \"d4\": \"Queen's Pawn Opening\",\n    // English Opening\n    \"c4 e5 Nc3 Nc6\": \"English Opening: Four Knights\",\n    \"c4 e5 Nc3 Nf6\": \"English Opening: Two Knights\",\n    \"c4 e5 g3\": \"English Opening: Botvinnik System\",\n    \"c4 e5\": \"English Opening: Reversed Sicilian\",\n    \"c4 Nf6\": \"English Opening: Anglo-Indian\",\n    \"c4 g6\": \"English Opening: Botvinnik System\",\n    \"c4 c5\": \"English Opening: Symmetrical Variation\",\n    \"c4\": \"English Opening\",\n    // Reti and Other Openings\n    \"a4\": \"Ware Opening\",\n    \"f3\": \"Barnes Opening\",\n    \"e3\": \"Van 't Kruijs Opening\",\n    \"Nh3\": \"Amar Opening\",\n    \"Na3\": \"Sodium Attack\",\n    \"g4\": \"Grob's Attack\",\n    \"Nc3\": \"Van Geet Opening\",\n    \"c3\": \"Saragossa Opening\",\n    \"d3\": \"Mieses Opening\",\n    \"h4\": \"Desprez Opening\",\n    \"h3\": \"Clemenz Opening\",\n    \"a3\": \"Anderssen's Opening\",\n    \"e3\": \"Van't Kruijs Opening\",\n    \"b4 e5\": \"Polish Opening: Outflank Variation\",\n    \"b4\": \"Polish Opening\",\n    \"f4 e5\": \"From's Gambit\",\n    \"f4 d5\": \"Bird's Opening: Dutch Variation\",\n    \"f4\": \"Bird's Opening\",\n    \"g3\": \"King's Fianchetto Opening\",\n    \"b3\": \"Nimzowitsch-Larsen Attack\",\n    \"Nf3 c5 c4\": \"Reti Opening: King's Indian Attack\",\n    \"Nf3 c5\": \"Reti Opening: Anglo-Slav\",\n    \"Nf3 d5\": \"Reti Opening: Main Line\",\n    \"Nf3\": \"Reti Opening\"\n  };\n  const detectOpening = moves => {\n    const movesSequence = moves.join(\" \");\n    for (const opening in openings) {\n      if (movesSequence.startsWith(opening)) {\n        return openings[opening];\n      }\n    }\n    return \"Unknown Opening\"; // Fallback if the opening is not in the book\n  };\n  const handleStart = async () => {\n    setProcessing(true);\n    setShowTable(false);\n    setFilteredData([]);\n    setOpeningStats({}); // Holds stats for each opening\n    setGamesProcessed(0);\n    let games = [];\n    const {\n      maxGames,\n      timeControls,\n      oldestDate,\n      newestDate\n    } = filterParams || {\n      maxGames: 1000,\n      timeControls: {\n        bullet: true,\n        blitz: true,\n        rapid: true,\n        classical: true\n      },\n      oldestDate: null,\n      newestDate: null\n    };\n    try {\n      if (inputMethod === 'lichess') {\n        const data = await fetchLichessGames(opponentName, maxGames, timeControls, oldestDate, newestDate, opponentColor);\n        games = data;\n      } else if (inputMethod === 'chesscom') {\n        const data = await fetchChessComGames(opponentName, maxGames, timeControls, oldestDate, newestDate, opponentColor);\n        games = data.map(game => game.pgn); // Map the results to PGN format\n      } else {\n        games = importedGames;\n      }\n      setGamesCount(games.length);\n      processGames(games);\n    } catch (error) {\n      console.error(\"Search error:\", error);\n      displayErrorBanner('ERROR: Invalid Search');\n    }\n  };\n  const processGames = games => {\n    console.log(4);\n    setProcessing(true);\n    const eventList = [];\n    const siteList = [];\n    const whiteList = [];\n    const blackList = [];\n    const resultList = [];\n    const dateList = [];\n    const whiteEloList = [];\n    const blackEloList = [];\n    const fullValList = [];\n    const initialColnames = [];\n    const movesList = [];\n    const pgnList = [];\n    const chess = new Chess();\n    console.log(5);\n    const minProbability = filterParams ? filterParams.minProbability : 0.2; // Default to 0.2\n    let updatedStats = {};\n    games.forEach((game, index) => {\n      if (game) {\n        chess.loadPgn(game);\n        chess.deleteComments();\n        let moves = chess.history();\n        movesList.push(moves);\n        const opening = detectOpening(moves);\n        const result = chess.header()[\"Result\"];\n        if (!updatedStats[opening]) {\n          updatedStats[opening] = {\n            numGames: 0,\n            wins: 0,\n            losses: 0,\n            score: 0\n          };\n        }\n        // Update stats based on game result (simplified example)\n        updatedStats[opening].numGames += 1;\n        if (result === '1-0' & opponentColor == \"White\") {\n          updatedStats[opening].wins += 1;\n          updatedStats[opening].score += 1;\n        } else if (result === '1-0' & opponentColor == \"Black\") {\n          updatedStats[opening].losses += 1;\n        } else if (result === '0-1' & opponentColor == \"Black\") {\n          updatedStats[opening].wins += 1;\n          updatedStats[opening].score += 1;\n        } else if (result === '0-1' & opponentColor == \"White\") {\n          updatedStats[opening].losses += 1;\n        } else if (result === '1/2-1/2') {\n          updatedStats[opening].draws += 1;\n          updatedStats[opening].score += 0.5;\n        }\n\n        // Increment games processed counter\n        setGamesProcessed(prev => prev + 1);\n        setOpeningStats({\n          ...updatedStats\n        });\n        const valList = [];\n        let triangle = String(moves[0]) + \"*\";\n        valList.push(triangle);\n        pgnList.push(chess.pgn());\n        eventList.push(chess.header()[\"Event\"]);\n        siteList.push(chess.header()[\"Site\"]);\n        whiteList.push(chess.header()[\"White\"]);\n        blackList.push(chess.header()[\"Black\"]);\n        resultList.push(chess.header()[\"Result\"]);\n        dateList.push(chess.header()[\"Date\"]);\n        whiteEloList.push(chess.header()[\"WhiteElo\"]);\n        blackEloList.push(chess.header()[\"BlackElo\"]);\n        for (let i = 1; i < 25 && i < moves.length; i++) {\n          triangle += String(moves[i]) + \"*\";\n          valList.push(triangle);\n        }\n        fullValList.push(valList);\n      }\n      ;\n    });\n    setShowTable(true);\n    setThePgnList(pgnList); // Set the pgnList to the state variable thePgnList\n\n    for (let j = 1; j <= 25; j++) {\n      initialColnames.push(\"Line\" + String(j));\n    }\n    console.log(6);\n    const dataFrame = fullValList.map((row, index) => ({\n      ...row.reduce((acc, val, i) => ({\n        ...acc,\n        [initialColnames[i]]: val\n      }), {}),\n      Event: eventList[index],\n      Site: siteList[index],\n      White: whiteList[index],\n      Black: blackList[index],\n      WhiteResult1: resultList[index] === '1-0' ? 1 : 0,\n      Date: dateList[index],\n      WhiteElo: whiteEloList[index],\n      BlackElo: blackEloList[index],\n      Pgn: pgnList[index],\n      GameID: index\n    }));\n    console.log(\"dataFrame\");\n    console.log(dataFrame);\n    console.log(7);\n    const filteredDF = dataFrame.filter(row => row[opponentColor] === opponentName);\n    const moveProb1 = filteredDF.reduce((acc, row) => {\n      acc[row.Line1] = (acc[row.Line1] || 0) + 1;\n      return acc;\n    }, {});\n    const totalGames = filteredDF.length;\n    filteredDF.forEach(row => {\n      row.MoveProbability1 = moveProb1[row.Line1] / totalGames;\n    });\n    for (let i = 1; i < 25; i++) {\n      filteredDF.forEach(row => {\n        row[`WhiteResult${i + 1}`] = row.WhiteResult1;\n      });\n      const moveProb = filteredDF.reduce((acc, row) => {\n        const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n        acc[key] = (acc[key] || 0) + 1;\n        return acc;\n      }, {});\n      const lineCount = filteredDF.reduce((acc, row) => {\n        acc[row[`Line${i}`]] = (acc[row[`Line${i}`]] || 0) + 1;\n        return acc;\n      }, {});\n      filteredDF.forEach(row => {\n        const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n        row[`MoveProbability${i + 1}`] = moveProb[key] / lineCount[row[`Line${i}`]];\n      });\n    }\n    console.log(\"filteredDF\");\n    console.log(filteredDF);\n    filteredDF.forEach(row => {\n      let pw = 1;\n      let pb = 1;\n      for (let i = 1; i <= 25; i++) {\n        if (i % 2 === 1) {\n          pw *= row[`MoveProbability${i}`] || 1;\n        } else {\n          pb *= row[`MoveProbability${i}`] || 1;\n        }\n        row[`LineProbability(W)${i}`] = pw;\n        row[`LineProbability(B)${i}`] = pb;\n      }\n    });\n    console.log(\"filteredDF\");\n    console.log(filteredDF);\n    console.log(6);\n    const longDF = [];\n    filteredDF.forEach(row => {\n      for (let i = 1; i <= 25; i++) {\n        longDF.push({\n          GameID: row.GameID,\n          Ply: i,\n          Line: row[`Line${i}`],\n          EVAL: row[`EVAL${i}`],\n          WhiteResult: row[`WhiteResult${i}`],\n          MoveProbability: row[`MoveProbability${i}`],\n          LineProbabilityW: row[`LineProbability(W)${i}`],\n          LineProbabilityB: row[`LineProbability(B)${i}`],\n          Pgn: row.Pgn\n        });\n      }\n    });\n    console.log(\"longDF\");\n    console.log(longDF);\n\n    // Add #Games column\n    const lineCounts = longDF.reduce((acc, row) => {\n      acc[row.Line] = (acc[row.Line] || 0) + 1;\n      return acc;\n    }, {});\n    longDF.forEach(row => {\n      row['#Games'] = lineCounts[row.Line];\n    });\n    const filteredLongDF2 = longDF.filter(row => opponentColor === 'Black' && row.LineProbabilityB > minProbability || opponentColor === 'White' && row.LineProbabilityW > minProbability);\n\n    //#\n    // Calculate lower limit based on precision level\n    let minGames = 1; // Default for At least 1\n    if (precisionLevel === '10% of Games') {\n      minGames = Math.ceil(totalGames / 10);\n    } else if (precisionLevel === '3% of Games') {\n      minGames = Math.ceil(totalGames / 35);\n    }\n    console.log(\"minGames\");\n    console.log(minGames);\n\n    // Filter for lines with more than minGames played\n    const filteredLongDFUnsorted = filteredLongDF2.filter(row => row.Line !== undefined && row['#Games'] > minGames);\n    console.log(\"filteredLongDFUnsorted\");\n    console.log(filteredLongDFUnsorted);\n    const filteredLongDF = filteredLongDFUnsorted.sort((a, b) => b.Ply - a.Ply);\n    console.log(\"filteredLongDF\");\n    console.log(filteredLongDF);\n    const sortedByLengthDF = filteredLongDFUnsorted.sort((a, b) => b.Line.length - a.Line.length);\n    console.log(\"sortedByLengthDF\");\n    console.log(sortedByLengthDF);\n\n    // Initialize a set to store lines that are not proper subsets\n    let uniqueLinesStr = \"//\";\n\n    // Filter out rows where Line is a proper subset of any other row\n    const nonSubsetLongDF = sortedByLengthDF.filter(row => {\n      if (uniqueLinesStr.includes(\"//\" + row.Line)) {\n        uniqueLinesStr += row.Line;\n        uniqueLinesStr += \"//\";\n        return false;\n      } else {\n        uniqueLinesStr += row.Line;\n        uniqueLinesStr += \"//\";\n        return true;\n      }\n    });\n    console.log(7);\n    console.log(\"nonSubsetLongDF\");\n    console.log(nonSubsetLongDF);\n    const groupedByLine = nonSubsetLongDF.reduce((acc, row) => {\n      if (!acc[row.Line]) {\n        acc[row.Line] = {\n          Line: row.Line,\n          EVAL: !isNaN(row.EVAL) ? row.EVAL : -Infinity,\n          Ply: row.Ply,\n          WhiteResult: row.WhiteResult,\n          LineProbabilityB: row.LineProbabilityB,\n          LineProbabilityW: row.LineProbabilityW,\n          GameID: row.GameID,\n          GameIDs: [row.GameID]\n        };\n      } else {\n        acc[row.Line].EVAL = Math.max(acc[row.Line].EVAL, !isNaN(row.EVAL) ? row.EVAL : -Infinity);\n        acc[row.Line].Ply = Math.max(acc[row.Line].Ply, row.Ply);\n        acc[row.Line].WhiteResult = Math.max(acc[row.Line].WhiteResult, row.WhiteResult);\n        acc[row.Line].LineProbabilityB = Math.max(acc[row.Line].LineProbabilityB, row.LineProbabilityB);\n        acc[row.Line].LineProbabilityW = Math.max(acc[row.Line].LineProbabilityW, row.LineProbabilityW);\n        acc[row.Line].GameID = Math.max(acc[row.Line].GameID, row.GameID);\n        acc[row.Line].GameIDs.push(row.GameID);\n      }\n      return acc;\n    }, {});\n\n    // Replace -Infinity back with NaN if no valid EVAL was found\n    Object.values(groupedByLine).forEach(row => {\n      if (row.EVAL === -Infinity) {\n        row.EVAL = NaN;\n      }\n    });\n    console.log(\"groupedByLine\");\n    console.log(groupedByLine);\n\n    // Convert groupedByLine to an array and sort\n    const groupedLongDF = Object.values(groupedByLine);\n    const sortedLongDF = groupedLongDF.sort((a, b) => {\n      if (opponentColor === \"Black\") {\n        return b.EVAL - a.EVAL;\n      } else {\n        return a.EVAL - b.EVAL;\n      }\n    });\n\n    // Consolidate LineProbability and drop irrelevant columns\n    sortedLongDF.forEach(row => {\n      if (opponentColor === \"Black\") {\n        row.LineProbability = row.LineProbabilityB;\n        delete row.LineProbabilityW;\n        delete row.LineProbabilityB;\n      } else {\n        row.LineProbability = row.LineProbabilityW;\n        delete row.LineProbabilityB;\n        delete row.LineProbabilityW;\n      }\n    });\n    console.log(\"sortedLongDF\");\n    console.log(sortedLongDF);\n    const categorizedLines = categorizeLines(sortedLongDF, opponentColor);\n    setFilteredData(categorizedLines);\n    const commonLines = findCommonLines(movesList);\n    setCommonLines(commonLines);\n    evaluateAndAnnotateGames(sortedLongDF, pgnList); // Pass pgnList as an argument\n  };\n  const sortedStats = Object.entries(openingStats).sort(([, a], [, b]) => b.numGames - a.numGames);\n  const evaluateAndAnnotateGames = async (minimalGroupedDF, pgnList) => {\n    const chess = new Chess();\n    const evaluatedGames = [];\n    const maxPly = Math.max(...minimalGroupedDF.map(row => row.Ply));\n    console.log(\"maxPly\");\n    console.log(maxPly);\n    const uniqueGameIDs = [...new Set(minimalGroupedDF.map(row => row.GameID))];\n    console.log(uniqueGameIDs);\n    for (let gameID = 0; gameID < pgnList.length; gameID++) {\n      if (uniqueGameIDs.includes(gameID)) {\n        const pgn = pgnList[gameID]; // Assuming all rows for the same game have the same PGN\n        chess.loadPgn(pgn);\n        const chess2 = new Chess();\n        chess2.loadPgn(pgn);\n        chess2.load(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\", {\n          preserveHeaders: true\n        });\n        const moves = chess.history();\n        for (let i = 0; i < maxPly && i < moves.length; i++) {\n          chess2.move(moves[i]);\n          const fen = chess2.fen();\n          const origevaluation = await evaluatePosition(fen);\n          const evaluation = i % 2 == 0 ? String(parseFloat(origevaluation) * -1) : String(parseFloat(origevaluation));\n          chess2.setComment(evaluation);\n        }\n        evaluatedGames.push(chess2.pgn());\n      } else {\n        evaluatedGames.push(pgnList[gameID]);\n      }\n    }\n    processEvaluatedGames(evaluatedGames, maxPly);\n    setProcessing(false);\n  };\n  const processEvaluatedGames = (evaluatedPGNs, maxPly) => {\n    const chess = new Chess();\n    const movesList = [];\n    const fullValList = [];\n    const eventList = [];\n    const siteList = [];\n    const whiteList = [];\n    const blackList = [];\n    const resultList = [];\n    const dateList = [];\n    const whiteEloList = [];\n    const blackEloList = [];\n    const initialColnames = [];\n    chess.loadPgn(evaluatedPGNs[0]);\n    evaluatedPGNs.forEach((pgn, index) => {\n      console.log(\"pgn\");\n      console.log(pgn);\n      try {\n        chess.loadPgn(pgn);\n        console.log('a');\n        let moves = chess.history();\n        console.log('b');\n        movesList.push(moves);\n        console.log('c');\n        const commentsWithFens = chess.getComments();\n        const comments = commentsWithFens.map(item => item.comment);\n        const valList = [];\n        let triangle = String(moves[0]) + \"*\";\n        valList.push(triangle);\n        valList.push(parseFloat(comments[0]));\n        eventList.push(chess.header()[\"Event\"]);\n        siteList.push(chess.header()[\"Site\"]);\n        whiteList.push(chess.header()[\"White\"]);\n        blackList.push(chess.header()[\"Black\"]);\n        resultList.push(chess.header()[\"Result\"]);\n        dateList.push(chess.header()[\"Date\"]);\n        whiteEloList.push(chess.header()[\"WhiteElo\"]);\n        blackEloList.push(chess.header()[\"BlackElo\"]);\n        for (let i = 1; i < maxPly && i < moves.length; i++) {\n          triangle += String(moves[i]) + \"*\";\n          valList.push(triangle);\n          valList.push(parseFloat(comments[i]));\n        }\n        fullValList.push(valList);\n      } catch (error) {\n        fullValList.push([]);\n        eventList.push(\"\");\n        siteList.push(\"\");\n        whiteList.push(\"\");\n        blackList.push(\"\");\n        resultList.push(\"\");\n        dateList.push(\"\");\n        whiteEloList.push(\"\");\n        blackEloList.push(\"\");\n      }\n    });\n    console.log(\"fullValList\");\n    console.log(fullValList);\n    console.log(\"fullValList\");\n    console.log(fullValList);\n    for (let j = 1; j <= maxPly; j++) {\n      initialColnames.push(\"Line\" + String(j));\n      initialColnames.push(\"EVAL\" + String(j));\n    }\n    const dataFrame = fullValList.map((row, index) => ({\n      ...row.reduce((acc, val, i) => ({\n        ...acc,\n        [initialColnames[i]]: val\n      }), {}),\n      Event: eventList[index],\n      Site: siteList[index],\n      White: whiteList[index],\n      Black: blackList[index],\n      WhiteResult1: resultList[index] === '1-0' ? 1 : 0,\n      Date: dateList[index],\n      WhiteElo: whiteEloList[index],\n      BlackElo: blackEloList[index],\n      GameID: index\n    }));\n    console.log(\"dataFrame\");\n    console.log(dataFrame);\n    const filteredDF = dataFrame.filter(row => row[opponentColor] === opponentName);\n    const moveProb1 = filteredDF.reduce((acc, row) => {\n      acc[row.Line1] = (acc[row.Line1] || 0) + 1;\n      return acc;\n    }, {});\n    const totalGames = filteredDF.length;\n    filteredDF.forEach(row => {\n      row.MoveProbability1 = moveProb1[row.Line1] / totalGames;\n    });\n    for (let i = 1; i < maxPly; i++) {\n      filteredDF.forEach(row => {\n        row[`WhiteResult${i + 1}`] = row.WhiteResult1;\n      });\n      const moveProb = filteredDF.reduce((acc, row) => {\n        const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n        acc[key] = (acc[key] || 0) + 1;\n        return acc;\n      }, {});\n      const lineCount = filteredDF.reduce((acc, row) => {\n        acc[row[`Line${i}`]] = (acc[row[`Line${i}`]] || 0) + 1;\n        return acc;\n      }, {});\n      filteredDF.forEach(row => {\n        const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n        row[`MoveProbability${i + 1}`] = moveProb[key] / lineCount[row[`Line${i}`]];\n      });\n    }\n    filteredDF.forEach(row => {\n      let pw = 1;\n      let pb = 1;\n      for (let i = 1; i <= maxPly; i++) {\n        if (i % 2 === 1) {\n          pw *= row[`MoveProbability${i}`] || 1;\n        } else {\n          pb *= row[`MoveProbability${i}`] || 1;\n        }\n        row[`LineProbability(W)${i}`] = pw;\n        row[`LineProbability(B)${i}`] = pb;\n      }\n    });\n    const longDF = [];\n    filteredDF.forEach(row => {\n      for (let i = 1; i <= maxPly; i++) {\n        longDF.push({\n          GameID: row.GameID,\n          Ply: i,\n          Line: row[`Line${i}`],\n          EVAL: row[`EVAL${i}`],\n          WhiteResult: row[`WhiteResult${i}`],\n          MoveProbability: row[`MoveProbability${i}`],\n          LineProbabilityW: row[`LineProbability(W)${i}`],\n          LineProbabilityB: row[`LineProbability(B)${i}`],\n          Pgn: row.Pgn\n        });\n      }\n    });\n    console.log(\"longDF\");\n    console.log(longDF);\n\n    // Add #Games column\n    const lineCounts = longDF.reduce((acc, row) => {\n      acc[row.Line] = (acc[row.Line] || 0) + 1;\n      return acc;\n    }, {});\n    longDF.forEach(row => {\n      row['#Games'] = lineCounts[row.Line];\n    });\n\n    // Calculate lower limit based on precision level\n    let minGames = 1; // Default for At least 1\n    if (precisionLevel === '10% of Games') {\n      minGames = Math.ceil(totalGames / 10);\n    } else if (precisionLevel === '3% of Games') {\n      minGames = Math.ceil(totalGames / 35);\n    }\n    console.log(\"minGames\");\n    console.log(minGames);\n\n    // Filter for lines with more than minGames played\n    const filteredLongDFUnsorted = longDF.filter(row => row['#Games'] > minGames);\n    console.log(\"filteredLongDFUnsorted\");\n    console.log(filteredLongDFUnsorted);\n    const filteredLongDF = filteredLongDFUnsorted.sort((a, b) => b.Ply - a.Ply);\n    console.log(\"filteredLongDF\");\n    console.log(filteredLongDF);\n    const groupedByLine = filteredLongDF.reduce((acc, row) => {\n      if (!acc[row.Line]) {\n        acc[row.Line] = {\n          Line: row.Line,\n          EVAL: !isNaN(row.EVAL) ? row.EVAL : -Infinity,\n          Ply: row.Ply,\n          WhiteResult: row.WhiteResult,\n          LineProbabilityB: row.LineProbabilityB,\n          LineProbabilityW: row.LineProbabilityW,\n          GameIDs: [row.GameID]\n        };\n      } else {\n        acc[row.Line].EVAL = Math.max(acc[row.Line].EVAL, !isNaN(row.EVAL) ? row.EVAL : -Infinity);\n        acc[row.Line].Ply = Math.max(acc[row.Line].Ply, row.Ply);\n        acc[row.Line].WhiteResult = Math.max(acc[row.Line].WhiteResult, row.WhiteResult);\n        acc[row.Line].LineProbabilityB = Math.max(acc[row.Line].LineProbabilityB, row.LineProbabilityB);\n        acc[row.Line].LineProbabilityW = Math.max(acc[row.Line].LineProbabilityW, row.LineProbabilityW);\n        acc[row.Line].GameIDs.push(row.GameID);\n      }\n      return acc;\n    }, {});\n\n    // Replace -Infinity back with NaN if no valid EVAL was found\n    Object.values(groupedByLine).forEach(row => {\n      if (row.EVAL === -Infinity) {\n        row.EVAL = NaN;\n      }\n    });\n    console.log(\"groupedByLine\");\n    console.log(groupedByLine);\n\n    // Convert groupedByLine to an array and sort\n    const groupedLongDF = Object.values(groupedByLine);\n    const sortedLongDF = groupedLongDF.sort((a, b) => {\n      if (opponentColor === \"Black\") {\n        return b.EVAL - a.EVAL;\n      } else {\n        return a.EVAL - b.EVAL;\n      }\n    });\n\n    // Consolidate LineProbability and drop irrelevant columns\n    sortedLongDF.forEach(row => {\n      if (opponentColor === \"Black\") {\n        row.LineProbability = row.LineProbabilityB;\n        delete row.LineProbabilityW;\n        delete row.LineProbabilityB;\n      } else {\n        row.LineProbability = row.LineProbabilityW;\n        delete row.LineProbabilityB;\n        delete row.LineProbabilityW;\n      }\n    });\n    console.log(\"sortedLongDF\");\n    console.log(sortedLongDF);\n    const definedDF = sortedLongDF.filter(row => row.Line !== undefined);\n    console.log(\"definedDF\");\n    console.log(definedDF);\n    let fullLinesStr = \"//\";\n    let partialLinesStr = \"//\";\n    const nonSubsetLongDF = definedDF.filter(row => {\n      const subsets = [];\n      const lineMoves = row.Line.split(\"*\").filter(Boolean);\n\n      // SUBSET CHECK\n      // Check if value already in partialLinesStr\n      if (partialLinesStr.includes(\"//\" + row.Line + \"//\")) {\n        return false;\n      }\n\n      // SUPERSET CHECK\n      // Check if any subset is already in fullLinesStr\n\n      // Generate all possible subsets of the current line\n      for (let i = 1; i <= lineMoves.length; i++) {\n        const subset = lineMoves.slice(0, i).join(\"*\") + \"*\";\n        if (fullLinesStr.includes(\"//\" + subset + \"//\")) {\n          return false;\n        }\n        partialLinesStr += subset + \"//\";\n      }\n      ;\n      fullLinesStr += row.Line + \"//\";\n      return true;\n    });\n    console.log(\"nonSubsetLongDF\");\n    console.log(nonSubsetLongDF);\n    const categorizedLines = categorizeLines(nonSubsetLongDF, opponentColor);\n    setFilteredData(categorizedLines);\n    const commonLines = findCommonLines(movesList);\n    setCommonLines(commonLines);\n    setProcessing(false); // Stop processing\n  };\n  const evaluatePosition = fen => {\n    return new Promise(resolve => {\n      stockfish.postMessage(`position fen ${fen}`);\n      stockfish.postMessage(\"go depth 16\");\n      stockfish.onmessage = event => {\n        const line = event.data;\n        const depthMatch = line.match(/depth (\\d+)/);\n        const evalMatch = line.match(/score cp (-?\\d+)/);\n        if (depthMatch && evalMatch) {\n          const depth = parseInt(depthMatch[1], 10);\n          if (depth === 15) {\n            const evaluation = (parseInt(evalMatch[1], 10) / 100).toFixed(2);\n            resolve(evaluation);\n          }\n        }\n      };\n    });\n  };\n  // This function handles the toggling logic\n  const handleToggle = () => {\n    setShowTable(prevShowTable => !prevShowTable);\n  };\n  const createPgnFromGameIDs = (gameIDs, pgnList) => {\n    return gameIDs.map(id => pgnList[id]).join('\\n\\n');\n  };\n  const handleLineClick = gameIDs => {\n    const combinedPgn = createPgnFromGameIDs(gameIDs, thePgnList);\n\n    // Store the combined PGN in localStorage\n    localStorage.setItem('combinedPgn', combinedPgn);\n\n    // Clear imported games\n    localStorage.removeItem('importedGames');\n\n    // Redirect to analysis board\n    window.location.href = '/analysis-board';\n  };\n  const categorizeLines = (finalLongDF, opponentColor) => {\n    return finalLongDF.map(row => {\n      const evalColumn = \"EVAL\";\n      const evaluation = row[evalColumn];\n      if (opponentColor === \"Black\") {\n        if (evaluation >= 2) {\n          row.MistakeType = \"Fatal Blunder\";\n        } else if (evaluation >= 1.0) {\n          row.MistakeType = \"Major Mistake\";\n        } else if (evaluation >= 0.6) {\n          row.MistakeType = \"Slight Inaccuracy\";\n        } else {\n          row.MistakeType = \"None\";\n        }\n      } else {\n        if (evaluation <= -1.6) {\n          row.MistakeType = \"Fatal Blunder\";\n        } else if (evaluation <= -0.6) {\n          row.MistakeType = \"Major Mistake\";\n        } else if (evaluation <= -0.2) {\n          row.MistakeType = \"Slight Inaccuracy\";\n        } else {\n          row.MistakeType = \"None\";\n        }\n      }\n      return row;\n    }).filter(row => row.MistakeType !== \"None\" && row.LineProbability > 0.2);\n  };\n  const findCommonLines = movesList => {\n    const lineCounts = {};\n    movesList.forEach(moves => {\n      moves.forEach((move, index) => {\n        const line = moves.slice(0, index + 1).join(' ');\n        if (!lineCounts[line]) {\n          lineCounts[line] = 0;\n        }\n        lineCounts[line]++;\n      });\n    });\n    const sortedLines = Object.entries(lineCounts).sort((a, b) => b[1] - a[1]);\n    return sortedLines.slice(0, 5);\n  };\n  const toggleDropdown = dropdown => {\n    setActiveDropdown(activeDropdown === dropdown ? null : dropdown);\n  };\n  const formatMovesWithNumbers = line => {\n    const moves = line.Line.split(\"*\").filter(Boolean);\n    const opening = detectOpening(moves);\n    const formattedMoves = moves.map((move, index) => {\n      const moveNumber = Math.floor(index / 2) + 1;\n      return index % 2 === 0 ? `${moveNumber}. ${move}` : `${moveNumber}...${move}`;\n    }).join(\" \");\n    return `${opening}: ${formattedMoves}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weakness-finder\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onMouseEnter: () => setIsLogoHovered(true),\n            onMouseLeave: () => setIsLogoHovered(false),\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: isLogoHovered ? logoWhite : logo,\n                alt: \"Home\",\n                style: {\n                  height: '39px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1371,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1370,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1366,\n            columnNumber: 41\n          }, this), isMobile ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navdropdown-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${isDropdownOpen ? 'navdropdown' : 'navdropdown'}`,\n              onClick: () => setIsDropdownOpen(!isDropdownOpen),\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"navdropdown-header\",\n                style: {\n                  lineHeight: '1.78',\n                  padding: '10px 20px',\n                  fontSize: '22px',\n                  color: 'white'\n                },\n                children: \"\\u2630 Menu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1380,\n                columnNumber: 53\n              }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/blunder-punisher\",\n                    className: \"nav-link\",\n                    onClick: () => setIsDropdownOpen(false),\n                    children: \"Blunder Punisher\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1397,\n                    columnNumber: 65\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1396,\n                  columnNumber: 61\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/weakness-finder\",\n                    className: \"nav-link\",\n                    onClick: () => setIsDropdownOpen(false),\n                    children: \"Weakness Finder\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1406,\n                    columnNumber: 65\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1405,\n                  columnNumber: 61\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/analysis-board\",\n                    className: \"nav-link\",\n                    onClick: () => setIsDropdownOpen(false),\n                    children: \"Analysis Board\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1415,\n                    columnNumber: 65\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1414,\n                  columnNumber: 61\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/feedback\",\n                    className: \"nav-link\",\n                    onClick: () => setIsDropdownOpen(false),\n                    children: \"Your Feedback\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1424,\n                    columnNumber: 65\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1423,\n                  columnNumber: 61\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1395,\n                columnNumber: 57\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1376,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1375,\n            columnNumber: 45\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/blunder-punisher\",\n                className: \"prepare-link\",\n                children: \"Blunder Punisher\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1439,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1438,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/weakness-finder\",\n                children: \"Weakness Finder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1444,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1443,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/analysis-board\",\n                children: \"Analysis Board\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1447,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1446,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/feedback\",\n                children: \"Your Feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1450,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1449,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1437,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1365,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1364,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1363,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"hero4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            style: {\n              position: 'absolute',\n              left: '50%',\n              transform: 'translateX(-50%)'\n            },\n            children: \"Blunder Punisher\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1460,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontStyle: 'italic',\n              fontSize: 20,\n              marginLeft: 'auto'\n            },\n            children: \"Punish your opponent's mistakes!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1461,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1459,\n          columnNumber: 17\n        }, this), !showAdvancedFilter ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFilterClick,\n            className: \"adv-filter-button\",\n            children: \"\\uD83D\\uDD0D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1466,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tab-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tab\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: inputMethod === 'chesscom' ? 'tablinks active' : 'tablinks',\n                onClick: () => setInputMethod('chesscom'),\n                children: \"Chess.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1470,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: inputMethod === 'lichess' ? 'tablinks active' : 'tablinks',\n                onClick: () => setInputMethod('lichess'),\n                children: \"Lichess\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1471,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: inputMethod === 'pgn' ? 'tablinks active' : 'tablinks',\n                onClick: () => setInputMethod('pgn'),\n                children: \"PGN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1472,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1469,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tabcontent\",\n              style: {\n                display: inputMethod === 'pgn' ? 'block' : 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  onChange: handleFileSelect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1477,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"opponentName\",\n                  children: \"Player Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1478,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"opponentName\",\n                  value: opponentName,\n                  onChange: e => setOpponentName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1479,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1476,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1475,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tabcontent\",\n              style: {\n                display: inputMethod === 'lichess' ? 'block' : 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"opponentUsername\",\n                  children: \"Player Username:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1490,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"opponentUsername\",\n                  value: opponentName,\n                  onChange: e => setOpponentName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1491,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1489,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1488,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tabcontent\",\n              style: {\n                display: inputMethod === 'chesscom' ? 'block' : 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"opponentUsername\",\n                  children: \"Player Username:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1502,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"opponentUsername\",\n                  value: opponentName,\n                  onChange: e => setOpponentName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1503,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1501,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1500,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"opponentColor\",\n                children: \"Piece Color:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1513,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"opponentColor\",\n                value: opponentColor,\n                onChange: e => setOpponentColor(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"White\",\n                  children: \"White\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1519,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Black\",\n                  children: \"Black\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1520,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1514,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1512,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleStart,\n              className: \"spec-button\",\n              style: {\n                marginTop: 6.5,\n                marginLeft: 10\n              },\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1526,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleReset,\n              className: \"spec-button\",\n              style: {\n                marginTop: 6.5,\n                marginLeft: 10\n              },\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1527,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1468,\n            columnNumber: 21\n          }, this), processing ?\n          /*#__PURE__*/\n          // Rotating white king while games are being processed\n          _jsxDEV(\"div\", {\n            className: \"rotating-king\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://upload.wikimedia.org/wikipedia/commons/4/42/Chess_klt45.svg\",\n              alt: \"Rotating King\",\n              className: \"king-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1532,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1531,\n            columnNumber: 9\n          }, this) :\n          /*#__PURE__*/\n          // Toggle button after processing is complete\n          _jsxDEV(\"div\", {\n            className: \"arrow-button\",\n            onClick: handleToggle,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: rightArrow,\n              alt: \"Toggle View\",\n              className: `arrow-icon ${showTable ? '' : 'rotate'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1537,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1536,\n            columnNumber: 9\n          }, this), showTable && gamesProcessed > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-container\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"scrollable-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Opening\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1549,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Games\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1550,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Score %\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1551,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Wins\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1552,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Losses\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1553,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1548,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1547,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: sortedStats.map(([opening, stats], index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: opening\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1559,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: stats.numGames\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1560,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [(stats.score / stats.numGames * 100).toFixed(2), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1561,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: stats.wins\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1562,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: stats.losses\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1563,\n                    columnNumber: 17\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1558,\n                  columnNumber: 15\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1556,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1570,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: sortedStats.reduce((total, [, stats]) => total + stats.numGames, 0)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1571,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [(sortedStats.reduce((total, [, stats]) => total + stats.score, 0) / sortedStats.reduce((total, [, stats]) => total + stats.numGames, 0) * 100).toFixed(2), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1572,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: sortedStats.reduce((total, [, stats]) => total + stats.wins, 0)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1573,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: sortedStats.reduce((total, [, stats]) => total + stats.losses, 0)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1574,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1569,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1568,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1546,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1545,\n            columnNumber: 9\n          }, this), showTable ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"common-lines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1583,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleDropdown('Fatal Blunders'),\n                  children: [\"Fatal Blunders: (\", filteredData.filter(line => line.MistakeType === 'Fatal Blunder').length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1589,\n                  columnNumber: 33\n                }, this), activeDropdown === 'Fatal Blunders' && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: filteredData.filter(line => line.MistakeType === 'Fatal Blunder').map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"line-item\",\n                    onClick: () => handleLineClick(line.GameIDs),\n                    children: [formatMovesWithNumbers(line), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Evaluation: \", Math.round(line.EVAL * 100) / 100, \" w/ Trap Probability: \", Math.round(line.LineProbability * 100), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1597,\n                      columnNumber: 45\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1595,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1593,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1588,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleDropdown('Major Mistakes'),\n                  children: [\"Major Mistakes: (\", filteredData.filter(line => line.MistakeType === 'Major Mistake').length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1604,\n                  columnNumber: 33\n                }, this), activeDropdown === 'Major Mistakes' && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: filteredData.filter(line => line.MistakeType === 'Major Mistake').map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"line-item\",\n                    onClick: () => handleLineClick(line.GameIDs),\n                    children: [formatMovesWithNumbers(line), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Evaluation: \", Math.round(line.EVAL * 100) / 100, \" w/ Trap Probability: \", Math.round(line.LineProbability * 100), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1612,\n                      columnNumber: 44\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1610,\n                    columnNumber: 44\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1608,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1603,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleDropdown('Slight Inaccuracies'),\n                  children: [\"Slight Inaccuracies: (\", filteredData.filter(line => line.MistakeType === 'Slight Inaccuracy').length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1619,\n                  columnNumber: 33\n                }, this), activeDropdown === 'Slight Inaccuracies' && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: filteredData.filter(line => line.MistakeType === 'Slight Inaccuracy').map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"line-item\",\n                    onClick: () => handleLineClick(line.GameIDs),\n                    children: [formatMovesWithNumbers(line), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Evaluation: \", Math.round(line.EVAL * 100) / 100, \" w/ Trap Probability: \", Math.round(line.LineProbability * 100), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1627,\n                      columnNumber: 44\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1625,\n                    columnNumber: 44\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1623,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1618,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1587,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1586,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1465,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(AdvancedFilter, {\n          onSave: handleSaveFilter,\n          onCancel: handleCancelFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1638,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1458,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1457,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2025 CheckmateWizard.com All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1643,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1642,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1362,\n    columnNumber: 9\n  }, this);\n};\n_s(BlunderPunisher, \"njxTOyu3evRHmBZGRMrJ0d0HmEA=\");\n_c = BlunderPunisher;\nexport default BlunderPunisher;\nvar _c;\n$RefreshReg$(_c, \"BlunderPunisher\");","map":{"version":3,"names":["React","useState","useEffect","Link","Chess","AdvancedFilter","displayErrorBanner","logo","logoWhite","rightArrow","jsxDEV","_jsxDEV","STOCKFISH","window","defaultState","importedGames","gamesCount","gamesProcessed","commonLines","filteredData","thePgnList","previousOutput","opponentName","opponentColor","precisionLevel","processing","showTable","activeDropdown","inputMethod","isLogoHovered","openingStats","BlunderPunisher","_s","showAdvancedFilter","setShowAdvancedFilter","errorMessage","setErrorMessage","filterParams","setFilterParams","filter","setFilter","setIsLogoHovered","setImportedGames","JSON","parse","localStorage","getItem","setGamesCount","Number","setCommonLines","setFilteredData","setThePgnList","setPreviousOutput","setOpponentName","setOpponentColor","setPrecisionLevel","setProcessing","setShowTable","setActiveDropdown","setOpeningStats","setInputMethod","setGamesProcessed","isMobile","setIsMobile","innerWidth","isDropdownOpen","setIsDropdownOpen","handleResize","isNowMobile","console","log","document","body","classList","add","remove","addEventListener","removeEventListener","setItem","stringify","handleReset","removeItem","stockfish","Worker","postMessage","handleFileSelect","event","file","target","files","reader","FileReader","onload","e","fullPgn","result","rawGames","split","Boolean","games","map","game","trim","length","readAsText","fetchLichessGames","username","maxGames","timeControls","oldestDate","newestDate","timeClasses","bullet","push","blitz","rapid","classical","timeClassFilter","join","allFilteredGames","fetchedGamesCount","currentPage","response","fetch","data","text","filteredGames","gamePgn","dateMatch","match","isWithinRange","Date","replace","whitePlayerMatch","blackPlayerMatch","isCorrectColor","concat","slice","handleFilterClick","handleSaveFilter","params","handleCancelFilter","fetchChessComGames","fetchGamesBatch","archiveUrl","ok","errorText","Error","statusText","json","rules","isCorrectTimeClass","time_class","white","black","gameDate","end_time","isWithinDateRange","error","message","archivesResponse","archivesData","archives","reverse","results","handleLoadGames","openings","detectOpening","moves","movesSequence","opening","startsWith","handleStart","pgn","processGames","eventList","siteList","whiteList","blackList","resultList","dateList","whiteEloList","blackEloList","fullValList","initialColnames","movesList","pgnList","chess","minProbability","updatedStats","forEach","index","loadPgn","deleteComments","history","header","numGames","wins","losses","score","draws","prev","valList","triangle","String","i","j","dataFrame","row","reduce","acc","val","Event","Site","White","Black","WhiteResult1","WhiteElo","BlackElo","Pgn","GameID","filteredDF","moveProb1","Line1","totalGames","MoveProbability1","moveProb","key","lineCount","pw","pb","longDF","Ply","Line","EVAL","WhiteResult","MoveProbability","LineProbabilityW","LineProbabilityB","lineCounts","filteredLongDF2","minGames","Math","ceil","filteredLongDFUnsorted","undefined","filteredLongDF","sort","a","b","sortedByLengthDF","uniqueLinesStr","nonSubsetLongDF","includes","groupedByLine","isNaN","Infinity","GameIDs","max","Object","values","NaN","groupedLongDF","sortedLongDF","LineProbability","categorizedLines","categorizeLines","findCommonLines","evaluateAndAnnotateGames","sortedStats","entries","minimalGroupedDF","evaluatedGames","maxPly","uniqueGameIDs","Set","gameID","chess2","load","preserveHeaders","move","fen","origevaluation","evaluatePosition","evaluation","parseFloat","setComment","processEvaluatedGames","evaluatedPGNs","commentsWithFens","getComments","comments","item","comment","definedDF","fullLinesStr","partialLinesStr","subsets","lineMoves","subset","Promise","resolve","onmessage","line","depthMatch","evalMatch","depth","parseInt","toFixed","handleToggle","prevShowTable","createPgnFromGameIDs","gameIDs","id","handleLineClick","combinedPgn","location","href","finalLongDF","evalColumn","MistakeType","sortedLines","toggleDropdown","dropdown","formatMovesWithNumbers","formattedMoves","moveNumber","floor","className","children","onMouseEnter","onMouseLeave","to","src","alt","style","height","fileName","_jsxFileName","lineNumber","columnNumber","onClick","lineHeight","padding","fontSize","color","display","justifyContent","alignItems","position","left","transform","fontStyle","marginLeft","type","onChange","htmlFor","value","marginTop","stats","total","round","onSave","onCancel","_c","$RefreshReg$"],"sources":["/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/BlunderPunisher.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Chess } from 'chess.js';\nimport AdvancedFilter from './AdvancedFilter'; // Import the new component\nimport displayErrorBanner from './App.js';\nimport './styles.css';\n\n\n/*\n<div className=\"form-group\">\n                            <label htmlFor=\"precisionLevel\">Min Mistake Frequency:</label>\n                            <select \n                                id=\"precisionLevel\" \n                                value={precisionLevel} \n                                onChange={(e) => setPrecisionLevel(e.target.value)}\n                            >\n                                <option value=\"10% of Games\">10% of Games (5s-1min)</option>\n                                <option value=\"3% of Games\">3% of Games (30s-4min)</option>\n                                <option value=\"At Least 1 Game\">At Least 1 Game (1-30min)</option>\n                            </select>\n                        </div>\n*/\n\n// Import both logo images\nimport logo from './checkmatewizard_transparent.png'; // Adjust the path as needed\nimport logoWhite from './checkmatewizard_pure_white.png'; // Adjust the path as needed\nimport rightArrow from './rarrow_white.png'; // Adjust the path as needed\n\nconst STOCKFISH = window.STOCKFISH;\nconst defaultState = {\n    importedGames: [],\n    gamesCount: 0,\n    gamesProcessed:0,\n    commonLines: [],\n    filteredData: [],\n    thePgnList: [],\n    previousOutput: \"\",\n    opponentName: '',\n    opponentColor: 'White',\n    precisionLevel: '3% of Games',\n    processing: false,\n    showTable:false,\n    activeDropdown: null,\n    inputMethod: 'chesscom',\n    isLogoHovered: false,\n    openingStats:{}\n};\nconst BlunderPunisher = () => {\n    const [showAdvancedFilter, setShowAdvancedFilter] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [filterParams, setFilterParams] = useState(null);\n    const [filter, setFilter] = useState('blunderPunisher_all'); // Default filter is 'All Games'\n    const [isLogoHovered, setIsLogoHovered] = useState(defaultState.isLogoHovered);\n    const [importedGames, setImportedGames] = useState(() => JSON.parse(localStorage.getItem('blunderPunisher_importedGames')) || defaultState.importedGames);\n    const [gamesCount, setGamesCount] = useState(() => Number(localStorage.getItem('blunderPunisher_gamesCount')) || defaultState.gamesCount);\n    const [commonLines, setCommonLines] = useState(() => JSON.parse(localStorage.getItem('blunderPunisher_commonLines')) || defaultState.commonLines);\n    const [filteredData, setFilteredData] = useState(() => JSON.parse(localStorage.getItem('blunderPunisher_filteredData')) || defaultState.filteredData);\n    const [thePgnList, setThePgnList] = useState(() => JSON.parse(localStorage.getItem('blunderPunisher_thePgnList')) || defaultState.thePgnList);\n    const [previousOutput, setPreviousOutput] = useState(defaultState.previousOutput);\n    const [opponentName, setOpponentName] = useState(() => localStorage.getItem('blunderPunisher_opponentName') || defaultState.opponentName);\n    const [opponentColor, setOpponentColor] = useState(() => localStorage.getItem('blunderPunisher_opponentColor') || defaultState.opponentColor);\n    const [precisionLevel, setPrecisionLevel] = useState(() => localStorage.getItem('blunderPunisher_precisionLevel') || defaultState.precisionLevel);\n    const [processing, setProcessing] = useState(() => localStorage.getItem('blunderPunisher_processing') || defaultState.processing);\n    const [showTable, setShowTable] = useState(() => localStorage.getItem('blunderPunisher_showTable') || defaultState.showTable);\n    const [activeDropdown, setActiveDropdown] = useState(defaultState.activeDropdown);\n    const [openingStats, setOpeningStats] = useState(() => JSON.parse(localStorage.getItem('blunderPunisher_openingStats')) || defaultState.openingStats);  // Holds stats for each opening\n    const [inputMethod, setInputMethod] = useState(() => localStorage.getItem('blunderPunisher_inputMethod') || defaultState.inputMethod);\n    const [gamesProcessed, setGamesProcessed] = useState(() => Number(localStorage.getItem('blunderPunisher_gamesProcessed')) || defaultState.gamesProcessed);\n    const [isMobile, setIsMobile] = useState(window.innerWidth < 1200);\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n        \n    \n        // Event listener for window resize\n        \n\n        useEffect(() => {\n            const handleResize = () => {\n                const isNowMobile = window.innerWidth < 1200;\n                setIsMobile(isNowMobile);\n        \n                if (isNowMobile) {\n                    console.log('Applying frozen class');\n                    document.body.classList.add('frozen');\n                } else {\n                    console.log('Removing frozen class');\n                    document.body.classList.remove('frozen');\n                }\n            };\n        \n            window.addEventListener('resize', handleResize);\n        \n            handleResize();\n        \n            return () => window.removeEventListener('resize', handleResize);\n        }, []);\n        \n\n\n    useEffect(() => {\n        localStorage.setItem('blunderPunisher_openingStats', JSON.stringify(openingStats));\n    }, [openingStats]);\n\n    useEffect(() => {\n        localStorage.setItem('blunderPunisher_importedGames', JSON.stringify(importedGames));\n    }, [importedGames]);\n\n    useEffect(() => {\n        localStorage.setItem('blunderPunisher_gamesCount', gamesCount);\n    }, [gamesCount]);\n\n    useEffect(() => {\n        localStorage.setItem('blunderPunisher_gamesProcessed', gamesProcessed);\n    }, [gamesProcessed]);\n\n    useEffect(() => {\n        localStorage.setItem('blunderPunisher_commonLines', JSON.stringify(commonLines));\n    }, [commonLines]);\n\n    useEffect(() => {\n        localStorage.setItem('blunderPunisher_filteredData', JSON.stringify(filteredData));\n    }, [filteredData]);\n\n    useEffect(() => {\n        localStorage.setItem('blunderPunisher_thePgnList', JSON.stringify(thePgnList));\n    }, [thePgnList]);\n\n    useEffect(() => {\n        localStorage.setItem('blunderPunisher_opponentName', opponentName);\n    }, [opponentName]);\n\n    useEffect(() => {\n        localStorage.setItem('blunderPunisher_opponentColor', opponentColor);\n    }, [opponentColor]);\n\n    useEffect(() => {\n        localStorage.setItem('blunderPunisher_precisionLevel', precisionLevel);\n    }, [precisionLevel]);\n\n    useEffect(() => {\n        localStorage.setItem('blunderPunisher_inputMethod', inputMethod);\n    }, [inputMethod]);\n\n    useEffect(() => {\n        localStorage.setItem('blunderPunisher_showTable', showTable);\n    }, [showTable]);\n\n    useEffect(() => {\n        setProcessing(false);  // Reset processing when toggling tabs\n    }, [inputMethod]);\n\n    \n\n    const handleReset = () => {\n        // Reset state to default values\n        setImportedGames(defaultState.importedGames);\n        setGamesCount(defaultState.gamesCount);\n        setCommonLines(defaultState.commonLines);\n        setFilteredData(defaultState.filteredData);\n        setThePgnList(defaultState.thePgnList);\n        setPreviousOutput(defaultState.previousOutput);\n        setOpponentName(defaultState.opponentName);\n        setOpponentColor(defaultState.opponentColor);\n        setPrecisionLevel(defaultState.precisionLevel);\n        setProcessing(defaultState.processing);\n        setActiveDropdown(defaultState.activeDropdown);\n        setInputMethod(defaultState.inputMethod);\n        setOpeningStats(defaultState.openingStats);\n        setGamesProcessed(defaultState.gamesProcessed);\n        setShowTable(defaultState.showTable);\n\n        // Clear localStorage\n        localStorage.removeItem('blunderPunisher_importedGames');\n        localStorage.removeItem('blunderPunisher_gamesCount');\n        localStorage.removeItem('blunderPunisher_commonLines');\n        localStorage.removeItem('blunderPunisher_filteredData');\n        localStorage.removeItem('blunderPunisher_thePgnList');\n        localStorage.removeItem('blunderPunisher_opponentName');\n        localStorage.removeItem('blunderPunisher_opponentColor');\n        localStorage.removeItem('blunderPunisher_precisionLevel');\n        localStorage.removeItem('blunderPunisher_inputMethod');\n        localStorage.removeItem('blunderPunisher_combinedPgn');\n        localStorage.removeItem('blunderPunisher_gamesProcessed');\n        localStorage.removeItem('blunderPunisher_processing');\n        localStorage.removeItem('blunderPunisher_showTable');\n        localStorage.removeItem('blunderPunisher_openingStats');\n    };\n\n    let stockfish = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(\"stockfish.js\");\n    stockfish.postMessage(\"uci\");\n\n    useEffect(() => {}, [thePgnList]);\n\n    const handleFileSelect = (event) => {\n        const file = event.target.files[0];\n        if (!file) return;\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const fullPgn = e.target.result;\n            let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n            let games = rawGames.map(game => '[Event' + game.trim());\n\n            setImportedGames(games);\n            setGamesCount(games.length);\n        };\n        reader.readAsText(file);\n    };\n\n    const fetchLichessGames = async (username, maxGames = 1000, timeControls, oldestDate, newestDate, opponentColor) => {\n        const timeClasses = [];\n        if (timeControls.bullet) timeClasses.push('bullet');\n        if (timeControls.blitz) timeClasses.push('blitz');\n        if (timeControls.rapid) timeClasses.push('rapid');\n        if (timeControls.classical) timeClasses.push('classical');\n    \n        const timeClassFilter = timeClasses.length > 0 ? `&perfType=${timeClasses.join(',')}` : '';\n        let allFilteredGames = [];\n        let fetchedGamesCount = 0;\n        let currentPage = 1;\n    \n        // Fetch games in batches until we get enough games of the correct color\n        while (allFilteredGames.length < maxGames) {\n            const response = await fetch(`https://lichess.org/api/games/user/${username}?max=1000&moves=true&pgnInJson=false&page=${currentPage}${timeClassFilter}`);\n            const data = await response.text();\n    \n            // Split and process the games from the fetched data\n            let rawGames = data.split(/\\[Event/gi).filter(Boolean);\n            if (rawGames.length === 0) {\n                // No more games to fetch, break the loop\n                break;\n            }\n    \n            // Filter games by color and date\n            let filteredGames = rawGames.map(game => '[Event' + game.trim()).filter(gamePgn => {\n                const dateMatch = gamePgn.match(/\\[Date \"(\\d{4}\\.\\d{2}\\.\\d{2})\"\\]/);\n                const isWithinRange = !dateMatch || (!oldestDate || new Date(dateMatch[1].replace(/\\./g, '-')) >= new Date(oldestDate)) && \n                                                     (!newestDate || new Date(dateMatch[1].replace(/\\./g, '-')) <= new Date(newestDate));\n    \n                // Filter by color\n                const whitePlayerMatch = gamePgn.match(/\\[White \"(.*)\"\\]/);\n                const blackPlayerMatch = gamePgn.match(/\\[Black \"(.*)\"\\]/);\n                const isCorrectColor = (opponentColor === 'White' && whitePlayerMatch && whitePlayerMatch[1] === username) ||\n                                       (opponentColor === 'Black' && blackPlayerMatch && blackPlayerMatch[1] === username);\n                                       \n                return isWithinRange && isCorrectColor;\n            });\n    \n            // Add the filtered games to the result array\n            allFilteredGames = allFilteredGames.concat(filteredGames);\n    \n            // Stop if we reached or exceeded the desired number of games\n            if (allFilteredGames.length >= maxGames) {\n                allFilteredGames = allFilteredGames.slice(0, maxGames); // Trim to the exact number of games\n                break;\n            }\n    \n            // Increment page and continue fetching\n            currentPage++;\n            fetchedGamesCount += rawGames.length;\n        }\n    \n        return allFilteredGames;\n    };\n    \n    const handleFilterClick = () => {\n        setShowAdvancedFilter(true);\n    };\n    const handleSaveFilter = (params) => {\n        setFilterParams(params);\n        setShowAdvancedFilter(false);\n        // Apply the filters directly to the games list or during game fetching\n    };\n\n    const handleCancelFilter = () => {\n        setShowAdvancedFilter(false);\n    };\n\n    const fetchChessComGames = async (username, maxGames = 1000, timeControls, oldestDate, newestDate, opponentColor) => {\n        const fetchGamesBatch = async (archiveUrl) => {\n            try {\n                const response = await fetch(archiveUrl);\n                if (!response.ok) {\n                    const errorText = await response.text();\n                    throw new Error(`Error fetching data: ${response.statusText} - ${errorText}`);\n                }\n    \n                const data = await response.json();\n                const filteredGames = data.games.filter(game => {\n                    if(game.rules!=\"chess\") return false\n                    \n                    // Check for matching time control\n                    ;\n                    const isCorrectTimeClass = (timeControls.bullet && game.time_class === 'bullet') ||\n                                               (timeControls.blitz && game.time_class === 'blitz') ||\n                                               (timeControls.rapid && game.time_class === 'rapid') ||\n                                               (timeControls.classical && game.time_class === 'classical');\n    \n                    // Check for matching color\n                    const isCorrectColor = (opponentColor === 'White' && game.white.username === username) ||\n                                           (opponentColor === 'Black' && game.black.username === username);\n    \n                    // Check for date range\n                    const gameDate = new Date(game.end_time * 1000); // Convert Unix timestamp to JS Date\n                    const isWithinDateRange = (!oldestDate || gameDate >= new Date(oldestDate)) &&\n                                              (!newestDate || gameDate <= new Date(newestDate));\n                    return isCorrectTimeClass && isCorrectColor && isWithinDateRange;\n                });\n    \n                return filteredGames;\n            } catch (error) {\n                console.error('Error fetching games batch:', error.message);\n                return []; // Return an empty array if there's an error\n            }\n        };\n    \n        try {\n            const archivesResponse = await fetch(`https://api.chess.com/pub/player/${username}/games/archives`);\n            if (!archivesResponse.ok) {\n                const errorText = await archivesResponse.text();\n                throw new Error(`Error fetching archives: ${archivesResponse.statusText} - ${errorText}`);\n            }\n    \n            const archivesData = await archivesResponse.json();\n            const archives = archivesData.archives.reverse(); // Reverse to start from the most recent\n    \n            const results = [];\n            for (let archiveUrl of archives) {\n                if (results.length >= maxGames) break;\n    \n                const games = await fetchGamesBatch(archiveUrl);\n                results.push(...games);\n    \n                if (results.length >= maxGames) {\n                    results.length = maxGames; // Trim to the maxGames limit\n                    break;\n                }\n            }\n    \n            return results;\n        } catch (error) {\n            console.error('Error fetching games from Chess.com:', error.message);\n            throw error;\n        }\n    };\n\n\n    const handleLoadGames = () => {\n        // Logic to load games based on the selected filter (all or last 1000 games)\n        // Update the state variables such as totalGames, gameCounts, oldestGame, newestGame, etc.\n        console.log(`Loading games with filter: ${filter}`);\n    };\n\n    const openings = {\n        \n         // French Defense\n        \"e4 e6 d4 d5 exd5 exd5 Nc3\": \"French Defense: Exchange, Bogolyubov Variation\",\n        \"e4 e6 d4 d5 exd5 exd5 Bd3\": \"French Defense: Exchange Variation\",\n        \"e4 e6 d4 d5 Nf3\": \"French Defense: Two Knights\",\n        \"e4 e6 d4 d5 Nc3 Bb4\": \"French Defense: Winawer\",\n        \"e4 e6 d4 d5 Nc3 Nf6\": \"French Defense: Winawer Variation\",\n        \"e4 e6 d4 d5 Nc3\": \"French Defense: Classical\",\n        \"e4 e6 d4 d5 Nd2\": \"French Defense: Tarrasch\",\n        \"e4 e6 d4 d5 e5 c5\": \"French Defense: Advance Variation\",\n        \"e4 e6 d4 d5 e5\": \"French Defense: Advance Variation\",\n        \"e4 e6 d4 d5\": \"French Defense: Main Line\",\n        \"e4 e6 Nf3\": \"French Defense: Two Knights\",\n        \"e4 e6 c4\": \"French Defense: Franco-Hiva Gambit\",\n        \"e4 e6 d3\": \"French Defense: King's Indian Attack\",\n        \"e4 e6 d4\": \"French Defense: Advance Variation\",\n        \"e4 e6\": \"French Defense\",\n        \n        // Caro-Kann Defense\n        \"e4 c6 g3\": \"Caro-Kann Defense: Fianchetto Variation\",\n        \"e4 c6 d3\": \"Caro-Kann Defense: King's Indian Attack\",\n        \"e4 c6 Nf3\": \"Caro-Kann Defense: Two Knights\",\n        \"e4 c6 c4\": \"Caro-Kann Defense: Panov-Botvinnik Attack\",\n        \"e4 c6 d4 d5 e5\": \"Caro-Kann Defense: Advance Variation\",\n        \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nf6 Ng5 h6 Nxf7\": \"Caro-Kann Defense: Witty Alien Gambit\",\n        \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nd7 Nf3 Ngf6\": \"Caro-Kann Defense: Smyslov Variation\",\n        \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nd7\": \"Caro-Kann Defense: Karpov Variation\",\n        \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Bf5\": \"Caro-Kann Defense: Tartakower Variation\",\n        \"e4 c6 d4 d5 Nc3 dxe4 Nxe4\": \"Caro-Kann Defense: Classical Variation\",\n        \"e4 c6 d4 d5 Nc3\": \"Caro-Kann Defense: Advance\",\n        \"e4 c6 d4 d5 Nd2\": \"Caro-Kann Defense: Tarrasch\",\n        \"e4 c6 d4 d5 exd5 cxd5 c4\": \"Caro-Kann Defense: Panov-Botvinnik Attack\",\n        \"e4 c6 d4 d5 exd5\": \"Caro-Kann Defense: Exchange\",\n        \"e4 c6 d4 d5\": \"Caro-Kann Defense: Classical\",\n        \"e4 c6 d4\": \"Caro-Kann Defense: Main Line\",\n        \"e4 c6\": \"Caro-Kann Defense\",\n        \n        \n        // Pirc Defense and Modern Defense\n        \"e4 g6 d4 Bg7\": \"Modern Defense: Robatsch Defense\",\n        \"e4 d6 d4 Nf6\": \"Pirc Defense: Classical\",\n        \"e4 g6 d4\": \"Modern Defense\",\n        \"e4 d6 d4\": \"Pirc Defense\",\n        \"e4 g6\": \"Modern Defense\",\n        \"e4 d6\": \"Pirc Defense\",\n        \n        // Scandinavian Defense\n        \"e4 d5 Nf3\": \"Scandinavian Defense: Gambit\",\n        \"e4 d5 exd5\": \"Scandinavian Defense: Main Line\",\n        \"e4 d5\": \"Scandinavian Defense\",\n        \n        // Alekhine's Defense\n        \"e4 Nf6 d3\": \"Alekhine's Defense: King's Indian Attack\",\n        \"e4 Nf6 e5\": \"Alekhine's Defense: Chase Variation\",\n        \"e4 Nf6\": \"Alekhine's Defense\",\n        \n        // Nimzowitsch Defense\n        \"e4 Nc6 d4\": \"Nimzowitsch Defense: Main Line\",\n        \"e4 Nc6\": \"Nimzowitsch Defense\",\n        \n        \n        \n        // Sicilian Defense\n        \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3 a6 Bg5\": \"Sicilian Defense: Najdorf, Main Line\",\n        \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3 a6\": \"Sicilian Defense: Najdorf, English Attack\",\n        \"e4 c5 Nf3 Nc6 d4 cxd4 Nxd4 g6\": \"Sicilian Defense: Accelerated Dragon, Maroczy Bind\",\n        \"e4 c5 Nf3 Nc6 d4 cxd4 Nxd4\": \"Sicilian Defense: Accelerated Dragon\",\n        \"e4 c5 Nf3 Nc6 d4\": \"Sicilian Defense: Open\",\n        \"e4 c5 Nf3 Nc6\": \"Sicilian Defense: Closed\",\n        \"e4 c5 Nf3 e6 d4 cxd4 Nxd4 a6\": \"Sicilian Defense: Kan Variation\",\n        \"e4 c5 Nf3 e6 d4 cxd4 Nxd4 Nc6\": \"Sicilian Defense: Taimanov, Bastrikov\",\n        \"e4 c5 Nf3 e6\": \"Sicilian Defense: Taimanov\",\n        \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3\": \"Sicilian Defense: Classical\",\n        \"e4 c5 Nf3 d6 d4 cxd4 Nxd4\": \"Sicilian Defense: Najdorf Variation, 6.Bg5\",\n        \"e4 c5 Nf3 d6 d4\": \"Sicilian Defense: Open, Najdorf\",\n        \"e4 c5 Nf3 d6\": \"Sicilian Defense: Najdorf Variation\",\n        \"e4 c5 Nf3\": \"Sicilian Defense: Open\",\n        \"e4 c5 d3\": \"Sicilian Defense: King's Indian Attack\",\n        \"e4 c5 g3\": \"Sicilian Defense: Fianchetto Variation\",\n        \"e4 c5 b3\": \"Sicilian Defense: Nimzowitsch-Rossolimo Attack\",\n        \"e4 c5 f4\": \"Sicilian Defense: Grand Prix Attack\",\n        \"e4 c5 Nc3\": \"Sicilian Defense: Closed\",\n        \"e4 c5 d4\": \"Sicilian Defense: Smith-Morra Gambit\",\n        \"e4 c5 c3\": \"Sicilian Defense: Alapin Variation\",\n        \"e4 c5\": \"Sicilian Defense\",\n        \n        // King's Pawn Openings\n        \"e4 e5 d4 exd4 Qxd4\": \"Center Game: Danish Gambit\",\n        \"e4 e5 d4\": \"Center Game\",\n        \"e4 e5 d3\": \"King's Indian Attack\",\n        \"e4 e5 Nf3 Nf6 Nxe5 Nc6\": \"Stafford Gambit\",\n        \"e4 e5 Nc3 Nf6 g3\": \"Vienna Game: Mieses Variation\",\n        \"e4 e5 Nc3 Nf6\": \"Vienna Game: Falkbeer Variation\",\n        \"e4 e5 Nc3\": \"Vienna Game\",\n        \"e4 e5 f4 d6\": \"King's Gambit Declined\",\n        \"e4 e5 f4 exf4 Bc4\": \"King's Gambit Accepted, Bishop's Gambit\",\n        \"e4 e5 f4 exf4 Nf3\": \"King's Gambit Accepted, King's Knight's Gambit\",\n        \"e4 e5 f4 exf4\": \"King's Gambit Accepted\",\n        \"e4 e5 f4\": \"King's Gambit\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1 b5 Bb3 d6 c3 O-O\": \"Ruy Lopez: Closed, Chigorin Defense, 12.d4\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1 b5 Bb3 d6 c3\": \"Ruy Lopez: Closed, Chigorin Defense\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1\": \"Ruy Lopez: Closed, Morphy Defense\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7\": \"Ruy Lopez: Closed, Morphy Defense\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O\": \"Ruy Lopez: Morphy Defense, Closed\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6\": \"Ruy Lopez: Morphy Defense, Closed\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4\": \"Ruy Lopez: Morphy Defense\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6\": \"Ruy Lopez: Morphy Defense\",\n        \"e4 e5 Nf3 Nc6 Bb5\": \"Ruy Lopez\",\n        \"e4 e5 Nf3 Nc6 Bc4 Nd4\": \"Blackburne Shilling Gambit\",\n        \"e4 e5 Nf3 Nc6 Bc4 Nf6\": \"Two Knights Defense\",\n        \"e4 e5 Nf3 Nc6 Bc4 Bc5\": \"Italian Game: Giuoco Piano\",\n        \"e4 e5 Nf3 Nc6 Bc4\": \"Italian Game\",\n        \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4 Bc5\": \"Scotch Game: Göring Gambit\",\n        \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4\": \"Scotch Game: Scotch Gambit\",\n        \"e4 e5 Nf3 Nc6 d4\": \"Scotch Game\",\n        \"e4 e5 Nf3 Nc6 d3\": \"King's Indian Attack\",\n        \"e4 e5 Nf3 Nc6\": \"King's Knight Opening: Normal Variation\",\n        \"e4 e5 Nf3 d6\": \"Philidor Defense\",\n        \"e4 e5 Nf3\": \"King's Knight Opening\",\n        \"e4 b5\": \"Polish Defense\",\n        \"e4 b6\": \"Owen's Defense\",\n        \"e4 g6\": \"Modern Defense\",\n        \"e4 Nf6\": \"Alekhine's Defense\",\n        \"e4 d5\": \"Scandinavian Defense\",\n        \"e4 d6\": \"Pirc Defense\",\n        \"e4 e5\": \"Open Game\",\n        \"e4\": \"King's Pawn Opening\",\n        \n        // King's Indian Defense\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O Nbd7\": \"King's Indian Defense: Orthodox Variation, Classical System, 7...Nbd7\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O Nc6\": \"King's Indian Defense: Orthodox Variation, Classical System, 7...Nc6\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O\": \"King's Indian Defense: Orthodox Variation, Classical System, 7.O-O\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2 O-O Nf3\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2 O-O\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2\": \"King's Indian Defense: Orthodox Variation\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 f3\": \"King's Indian Defense: Saemisch Variation\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O\": \"King's Indian Defense: Mar del Plata\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6\": \"King's Indian Defense: Classical\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7\": \"King's Indian Defense: Fianchetto\",\n        \"d4 Nf6 c4 g6\": \"King's Indian Defense\",\n        \n        \n        // Nimzo-Indian Defense\n        \"d4 Nf6 c4 e6 Nc3 Bb4 a3\": \"Nimzo-Indian Defense: Sämisch, Leningrad System\",\n        \"d4 Nf6 c4 e6 Nc3 Bb4 Qb3\": \"Nimzo-Indian Defense: Sämisch Variation\",\n        \"d4 Nf6 c4 e6 Nc3 Bb4 e3 O-O\": \"Nimzo-Indian Defense: Rubinstein, 4...O-O\",\n        \"d4 Nf6 c4 e6 Nc3 Bb4 e3\": \"Nimzo-Indian Defense: Rubinstein\",\n        \"d4 Nf6 c4 e6 Nc3 Bb4 Qc2\": \"Nimzo-Indian Defense: Classical, Capablanca Variation\",\n        \"d4 Nf6 c4 e6 Nc3 Bb4\": \"Nimzo-Indian Defense: Classical\",\n        \"d4 Nf6 c4 e6 Nc3\": \"Nimzo-Indian Defense\",\n        \"d4 Nf6 c4 e6\": \"Indian Game\",\n        \"d4 Nf6 Nf3\": \"King's Indian Attack\",\n        \"d4 Nf6\": \"Indian Game\",\n        \n        \n        // Dutch Defense\n        \"d4 f5 c4\": \"Dutch Defense\",\n        \"d4 c5\": \"Benoni Defense\",\n        \"d4 e6\": \"Horwitz Defense\",\n        \"d4 e5\": \"Englund Gambit\",\n        \"d4 d6\": \"Old Indian Defense\",\n        \"d4 Nc6\": \"Chigorin Defense\",\n        \"d4 g6\": \"Modern Defense\",\n        \"d4 f5\": \"Dutch Defense\",\n        \"d4 d6\": \"Old Indian Defense\",\n        \"d4 f5\": \"Dutch Defense\",\n        \n        // Queen's Gambit\n        \"d4 d5 c4 e6 Nc3 Nf6 Nf3 Be7 Bf4\": \"Queen's Gambit Declined: Harrwitz Attack\",\n        \"d4 d5 c4 e6 Nc3 Nf6 Nf3 Be7\": \"Queen's Gambit Declined: 7.Be7\",\n        \"d4 d5 c4 e6 Nc3 Nf6 Nf3\": \"Queen's Gambit Declined: 6.Nf3\",\n        \"d4 d5 c4 e6 Nc3 c5 cxd5 exd5 Nf3 Nc6\": \"Tarrasch Defense, Main Line\",\n        \"d4 d5 c4 e6 Nc3 c5 cxd5 exd5\": \"Tarrasch Defense, Classical Variation\",\n        \"d4 d5 c4 e6 Nc3 c5\": \"Tarrasch Defense, Closed Variation\",\n        \"d4 d5 c4 e6 Nf3 c5\": \"Tarrasch Defense\",\n        \"d4 d5 c4 e6 Nf3 Nf6\": \"Queen's Gambit Declined: 5.Nf3 Variation, Main Line\",\n        \"d4 d5 c4 e6 Nf3\": \"Queen's Gambit Declined: 5.Nf3 Variation\",\n        \"d4 d5 c4 e6 Nc3 Nf6 Bg5 h6\": \"Queen's Gambit Declined: Orthodox Defense, Lasker Defense\",\n        \"d4 d5 c4 e6 Nc3 Nf6 Bg5 Be7\": \"Queen's Gambit Declined: Orthodox Defense, Main Line\",\n        \"d4 d5 c4 e6 Nc3 Nf6 Bg5\": \"Queen's Gambit Declined: Orthodox Defense\",\n        \"d4 d5 c4 e6 Nc3 Nf6\": \"Queen's Gambit Declined\",\n        \"d4 d5 c4 dxc4\": \"Queen's Gambit Accepted\",\n        \"d4 d5 c4 e6\": \"Queen's Gambit Declined\",\n        \"d4 d5 c4 c6\": \"Slav Defense\",\n        \"d4 d5 c4\": \"Queen's Gambit\",\n        \"d4 d5 Nf3\": \"London System\",\n        \"d4\": \"Queen's Pawn Opening\",\n        \n        \n        // English Opening\n        \"c4 e5 Nc3 Nc6\": \"English Opening: Four Knights\",\n        \"c4 e5 Nc3 Nf6\": \"English Opening: Two Knights\",\n        \"c4 e5 g3\": \"English Opening: Botvinnik System\",\n        \"c4 e5\": \"English Opening: Reversed Sicilian\",\n        \"c4 Nf6\": \"English Opening: Anglo-Indian\",\n        \"c4 g6\": \"English Opening: Botvinnik System\",\n        \"c4 c5\": \"English Opening: Symmetrical Variation\",\n        \"c4\": \"English Opening\",\n    \n        // Reti and Other Openings\n        \"a4\": \"Ware Opening\",\n        \"f3\": \"Barnes Opening\",\n        \"e3\": \"Van 't Kruijs Opening\",\n        \"Nh3\": \"Amar Opening\",\n        \"Na3\": \"Sodium Attack\",\n        \"g4\": \"Grob's Attack\",\n        \"Nc3\": \"Van Geet Opening\",\n        \"c3\": \"Saragossa Opening\",\n        \"d3\": \"Mieses Opening\",\n        \"h4\": \"Desprez Opening\",\n        \"h3\": \"Clemenz Opening\",\n        \"a3\": \"Anderssen's Opening\",\n        \"e3\": \"Van't Kruijs Opening\",\n        \"b4 e5\": \"Polish Opening: Outflank Variation\",\n        \"b4\": \"Polish Opening\",\n        \"f4 e5\": \"From's Gambit\",\n        \"f4 d5\": \"Bird's Opening: Dutch Variation\",\n        \"f4\": \"Bird's Opening\",\n        \"g3\": \"King's Fianchetto Opening\",\n        \"b3\": \"Nimzowitsch-Larsen Attack\",\n        \"Nf3 c5 c4\": \"Reti Opening: King's Indian Attack\",\n        \"Nf3 c5\": \"Reti Opening: Anglo-Slav\",\n        \"Nf3 d5\": \"Reti Opening: Main Line\",\n        \"Nf3\": \"Reti Opening\"\n    };\n\n    const detectOpening = (moves) => {\n        const movesSequence = moves.join(\" \");\n        for (const opening in openings) {\n            if (movesSequence.startsWith(opening)) {\n                return openings[opening];\n            }\n        }\n        return \"Unknown Opening\"; // Fallback if the opening is not in the book\n    };\n\n    const handleStart = async () => {\n        setProcessing(true);\n        setShowTable(false);\n        setFilteredData([]);\n        setOpeningStats({});  // Holds stats for each opening\n        setGamesProcessed(0);\n        let games = [];\n        const { maxGames, timeControls, oldestDate, newestDate } = filterParams || {\n            maxGames: 1000,\n            timeControls: { bullet: true, blitz: true, rapid: true, classical: true },\n            oldestDate: null,\n            newestDate: null,\n        };\n        try{if (inputMethod === 'lichess') {\n\n            const data = await fetchLichessGames(opponentName, maxGames, timeControls, oldestDate, newestDate, opponentColor);\n            games = data;\n        } else if (inputMethod === 'chesscom') {\n            const data = await fetchChessComGames(opponentName, maxGames, timeControls, oldestDate, newestDate, opponentColor);\n            games = data.map(game => game.pgn); // Map the results to PGN format\n        } else {\n            games = importedGames;\n        }\n    \n        setGamesCount(games.length);\n        processGames(games);}\n        catch(error) {\n            console.error(\"Search error:\", error);\n            displayErrorBanner('ERROR: Invalid Search');\n        }\n        };\n\n\n\n    \n    const processGames = (games) => {\n        console.log(4);\n        setProcessing(true);\n        \n        const eventList = [];\n        const siteList = [];\n        const whiteList = [];\n        const blackList = [];\n        const resultList = [];\n        const dateList = [];\n        const whiteEloList = [];\n        const blackEloList = [];\n        const fullValList = [];\n        const initialColnames = [];\n        const movesList = [];\n        const pgnList = [];\n        const chess = new Chess();\n        console.log(5);\n        const minProbability = filterParams ? filterParams.minProbability : 0.2; // Default to 0.2\n        let updatedStats = {};\n        \n\n\n        games.forEach((game, index) => {\n            if (game){\n            chess.loadPgn(game);\n            chess.deleteComments();\n            let moves = chess.history();\n            movesList.push(moves);\n            const opening = detectOpening(moves);\n            const result = chess.header()[\"Result\"];\n\n            if (!updatedStats[opening]) {\n                updatedStats[opening] = { numGames: 0, wins: 0, losses: 0, score: 0 };\n              }\n              // Update stats based on game result (simplified example)\n              updatedStats[opening].numGames += 1;\n              if ((result === '1-0' )&(opponentColor==\"White\")) {\n                updatedStats[opening].wins += 1;\n                updatedStats[opening].score += 1;\n            } else if ((result === '1-0' )&(opponentColor==\"Black\")) {\n                updatedStats[opening].losses += 1;\n            } else if ((result === '0-1' )&(opponentColor==\"Black\")) {\n                updatedStats[opening].wins += 1;\n                updatedStats[opening].score += 1;\n            } else if ((result === '0-1' )&(opponentColor==\"White\")) {\n                updatedStats[opening].losses += 1;\n            } else if (result === '1/2-1/2') {\n                updatedStats[opening].draws += 1;\n                updatedStats[opening].score += 0.5;\n            }\n\n        \n              // Increment games processed counter\n              setGamesProcessed(prev => prev + 1);\n              setOpeningStats({...updatedStats});\n\n            const valList = [];\n            let triangle = String(moves[0]) + \"*\";\n            valList.push(triangle);\n\n            pgnList.push(chess.pgn());\n            eventList.push(chess.header()[\"Event\"]);\n            siteList.push(chess.header()[\"Site\"]);\n            whiteList.push(chess.header()[\"White\"]);\n            blackList.push(chess.header()[\"Black\"]);\n            resultList.push(chess.header()[\"Result\"]);\n            dateList.push(chess.header()[\"Date\"]);\n            whiteEloList.push(chess.header()[\"WhiteElo\"]);\n            blackEloList.push(chess.header()[\"BlackElo\"]);\n\n            for (let i = 1; i < 25 && i < moves.length; i++) {\n                triangle += String(moves[i]) + \"*\";\n                valList.push(triangle);\n            }\n            fullValList.push(valList);\n        };\n    });\n    \n    setShowTable(true);\n        setThePgnList(pgnList); // Set the pgnList to the state variable thePgnList\n\n        for (let j = 1; j <= 25; j++) {\n            initialColnames.push(\"Line\" + String(j));\n        }\n        console.log(6);\n\n        const dataFrame = fullValList.map((row, index) => ({\n            ...row.reduce((acc, val, i) => ({ ...acc, [initialColnames[i]]: val }), {}),\n            Event: eventList[index],\n            Site: siteList[index],\n            White: whiteList[index],\n            Black: blackList[index],\n            WhiteResult1: resultList[index] === '1-0' ? 1 : 0,\n            Date: dateList[index],\n            WhiteElo: whiteEloList[index],\n            BlackElo: blackEloList[index],\n            Pgn: pgnList[index],\n            GameID: index\n        }));\n        console.log(\"dataFrame\");\n        console.log(dataFrame);\n        console.log(7);\n\n        const filteredDF = dataFrame.filter(row => row[opponentColor] === opponentName);\n\n        const moveProb1 = filteredDF.reduce((acc, row) => {\n            acc[row.Line1] = (acc[row.Line1] || 0) + 1;\n            return acc;\n        }, {});\n        const totalGames = filteredDF.length;\n\n        filteredDF.forEach(row => {\n            row.MoveProbability1 = moveProb1[row.Line1] / totalGames;\n        });\n\n        for (let i = 1; i < 25; i++) {\n            filteredDF.forEach(row => {\n                row[`WhiteResult${i + 1}`] = row.WhiteResult1;\n            });\n\n            const moveProb = filteredDF.reduce((acc, row) => {\n                const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n                acc[key] = (acc[key] || 0) + 1;\n                return acc;\n            }, {});\n\n            const lineCount = filteredDF.reduce((acc, row) => {\n                acc[row[`Line${i}`]] = (acc[row[`Line${i}`]] || 0) + 1;\n                return acc;\n            }, {});\n\n            filteredDF.forEach(row => {\n                const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n                row[`MoveProbability${i + 1}`] = moveProb[key] / lineCount[row[`Line${i}`]];\n            });\n        }\n        console.log(\"filteredDF\");\n        console.log(filteredDF);\n\n        filteredDF.forEach(row => {\n            let pw = 1;\n            let pb = 1;\n            for (let i = 1; i <= 25; i++) {\n                if (i % 2 === 1) {\n                    pw *= row[`MoveProbability${i}`] || 1;\n                } else {\n                    pb *= row[`MoveProbability${i}`] || 1;\n                }\n                row[`LineProbability(W)${i}`] = pw;\n                row[`LineProbability(B)${i}`] = pb;\n            }\n        });\n        console.log(\"filteredDF\");\n        console.log(filteredDF);\n        console.log(6);\n\n        const longDF = [];\n        filteredDF.forEach(row => {\n            for (let i = 1; i <= 25; i++) {\n                longDF.push({\n                    GameID: row.GameID,\n                    Ply: i,\n                    Line: row[`Line${i}`],\n                    EVAL: row[`EVAL${i}`],\n                    WhiteResult: row[`WhiteResult${i}`],\n                    MoveProbability: row[`MoveProbability${i}`],\n                    LineProbabilityW: row[`LineProbability(W)${i}`],\n                    LineProbabilityB: row[`LineProbability(B)${i}`],\n                    Pgn: row.Pgn\n                });\n            }\n        });\n        console.log(\"longDF\");\n        console.log(longDF);\n\n        // Add #Games column\n        const lineCounts = longDF.reduce((acc, row) => {\n            acc[row.Line] = (acc[row.Line] || 0) + 1;\n            return acc;\n        }, {});\n\n        longDF.forEach(row => {\n            row['#Games'] = lineCounts[row.Line];\n        });\n        const filteredLongDF2 = longDF.filter(row => \n            (opponentColor === 'Black' && row.LineProbabilityB > minProbability) ||\n            (opponentColor === 'White' && row.LineProbabilityW > minProbability)\n        );\n\n        //#\n        // Calculate lower limit based on precision level\n        let minGames = 1; // Default for At least 1\n        if (precisionLevel === '10% of Games') {\n            minGames = Math.ceil(totalGames / 10);\n        } else if (precisionLevel === '3% of Games') {\n            minGames = Math.ceil(totalGames / 35);\n        }\n        console.log(\"minGames\");\n        console.log(minGames);\n\n        // Filter for lines with more than minGames played\n        const filteredLongDFUnsorted = filteredLongDF2.filter(row => row.Line !== undefined && row['#Games'] > minGames);\n        console.log(\"filteredLongDFUnsorted\");\n        console.log(filteredLongDFUnsorted);\n        const filteredLongDF = filteredLongDFUnsorted.sort((a, b) => b.Ply - a.Ply);\n        console.log(\"filteredLongDF\");\n        console.log(filteredLongDF);\n\n        const sortedByLengthDF = filteredLongDFUnsorted.sort((a, b) => b.Line.length - a.Line.length);\n        console.log(\"sortedByLengthDF\");\n        console.log(sortedByLengthDF);\n\n        // Initialize a set to store lines that are not proper subsets\n        let uniqueLinesStr = \"//\";\n\n        // Filter out rows where Line is a proper subset of any other row\n        const nonSubsetLongDF = sortedByLengthDF.filter(row => {\n            if(uniqueLinesStr.includes( \"//\"+row.Line)){\n                uniqueLinesStr += row.Line;\n                uniqueLinesStr += \"//\";\n                return false;}\n            else{\n                uniqueLinesStr += row.Line;\n                uniqueLinesStr += \"//\";\n                return true;\n            }\n        });\n        console.log(7);\n\n        console.log(\"nonSubsetLongDF\");\n        console.log(nonSubsetLongDF);\n\n        const groupedByLine = nonSubsetLongDF.reduce((acc, row) => {\n            if (!acc[row.Line]) {\n                acc[row.Line] = {\n                    Line: row.Line,\n                    EVAL: !isNaN(row.EVAL) ? row.EVAL : -Infinity,\n                    Ply: row.Ply,\n                    WhiteResult: row.WhiteResult,\n                    LineProbabilityB: row.LineProbabilityB,\n                    LineProbabilityW: row.LineProbabilityW,\n                    GameID: row.GameID,\n                    GameIDs: [row.GameID]\n                };\n            } else {\n                acc[row.Line].EVAL = Math.max(acc[row.Line].EVAL, !isNaN(row.EVAL) ? row.EVAL : -Infinity);\n                acc[row.Line].Ply = Math.max(acc[row.Line].Ply, row.Ply);\n                acc[row.Line].WhiteResult = Math.max(acc[row.Line].WhiteResult, row.WhiteResult);\n                acc[row.Line].LineProbabilityB = Math.max(acc[row.Line].LineProbabilityB, row.LineProbabilityB);\n                acc[row.Line].LineProbabilityW = Math.max(acc[row.Line].LineProbabilityW, row.LineProbabilityW);\n                acc[row.Line].GameID = Math.max(acc[row.Line].GameID, row.GameID);\n                acc[row.Line].GameIDs.push(row.GameID);\n            }\n            return acc;\n        }, {});\n        \n        // Replace -Infinity back with NaN if no valid EVAL was found\n        Object.values(groupedByLine).forEach(row => {\n            if (row.EVAL === -Infinity) {\n                row.EVAL = NaN;\n            }\n        });\n        console.log(\"groupedByLine\");\n        console.log(groupedByLine);\n        \n        // Convert groupedByLine to an array and sort\n        const groupedLongDF = Object.values(groupedByLine);\n        const sortedLongDF = groupedLongDF.sort((a, b) => {\n            if (opponentColor === \"Black\") {\n                return b.EVAL - a.EVAL;\n            } else {\n                return a.EVAL - b.EVAL;\n            }\n        });\n        \n        // Consolidate LineProbability and drop irrelevant columns\n        sortedLongDF.forEach(row => {\n            if (opponentColor === \"Black\") {\n                row.LineProbability = row.LineProbabilityB;\n                delete row.LineProbabilityW;\n                delete row.LineProbabilityB;\n            } else {\n                row.LineProbability = row.LineProbabilityW;\n                delete row.LineProbabilityB;\n                delete row.LineProbabilityW;\n            }\n        });\n        \n        console.log(\"sortedLongDF\");\n        console.log(sortedLongDF);\n        \n        const categorizedLines = categorizeLines(sortedLongDF, opponentColor);\n        setFilteredData(categorizedLines);\n\n        const commonLines = findCommonLines(movesList);\n        setCommonLines(commonLines);\n\n        evaluateAndAnnotateGames(sortedLongDF, pgnList); // Pass pgnList as an argument\n    };\n\n    const sortedStats = Object.entries(openingStats).sort(([, a], [, b]) => b.numGames - a.numGames);\n\n\n    const evaluateAndAnnotateGames = async (minimalGroupedDF, pgnList) => {\n        const chess = new Chess();\n        const evaluatedGames = [];\n        const maxPly = Math.max(...minimalGroupedDF.map(row => row.Ply));\n        console.log(\"maxPly\");\n        console.log(maxPly);\n\n        const uniqueGameIDs = [...new Set(minimalGroupedDF.map(row => row.GameID))];\n        console.log(uniqueGameIDs);\n        for (let gameID = 0; gameID < pgnList.length; gameID++) {\n            if (uniqueGameIDs.includes(gameID)) {\n                const pgn = pgnList[gameID]; // Assuming all rows for the same game have the same PGN\n                chess.loadPgn(pgn);\n                const chess2 = new Chess();\n                chess2.loadPgn(pgn);\n                chess2.load(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\", { preserveHeaders: true });\n                const moves = chess.history();\n\n                for (let i = 0; i < maxPly && i < moves.length; i++) {\n                    chess2.move(moves[i]);\n                    const fen = chess2.fen();\n                    const origevaluation = await evaluatePosition(fen);\n                    const evaluation = i%2==0?String(parseFloat(origevaluation)*(-1)):String(parseFloat(origevaluation));\n\n                    chess2.setComment(evaluation);\n                }\n\n                evaluatedGames.push(chess2.pgn());\n            } else {\n                evaluatedGames.push(pgnList[gameID]);\n            }\n\n        }\n\n        processEvaluatedGames(evaluatedGames, maxPly);\n        setProcessing(false);\n    };\n\n    const processEvaluatedGames = (evaluatedPGNs, maxPly) => {\n        const chess = new Chess();\n        const movesList = [];\n        const fullValList = [];\n        const eventList = [];\n        const siteList = [];\n        const whiteList = [];\n        const blackList = [];\n        const resultList = [];\n        const dateList = [];\n        const whiteEloList = [];\n        const blackEloList = [];\n        const initialColnames = [];\n        chess.loadPgn(evaluatedPGNs[0]);\n\n\n        evaluatedPGNs.forEach((pgn, index) => {\n            console.log(\"pgn\");\n            console.log(pgn);\n            try{\n            chess.loadPgn(pgn);\n            console.log('a')\n            let moves = chess.history();\n            console.log('b')\n\n            movesList.push(moves);\n            console.log('c')\n            const commentsWithFens = chess.getComments();\n            const comments = commentsWithFens.map(item => item.comment);\n\n            const valList = [];\n            let triangle = String(moves[0]) + \"*\";\n            valList.push(triangle);\n            valList.push(parseFloat(comments[0]));\n\n            eventList.push(chess.header()[\"Event\"]);\n            siteList.push(chess.header()[\"Site\"]);\n            whiteList.push(chess.header()[\"White\"]);\n            blackList.push(chess.header()[\"Black\"]);\n            resultList.push(chess.header()[\"Result\"]);\n            dateList.push(chess.header()[\"Date\"]);\n            whiteEloList.push(chess.header()[\"WhiteElo\"]);\n            blackEloList.push(chess.header()[\"BlackElo\"]);\n\n            for (let i = 1; i < maxPly && i < moves.length; i++) {\n                triangle += String(moves[i]) + \"*\";\n                valList.push(triangle);\n                valList.push(parseFloat(comments[i]));\n            }\n            fullValList.push(valList);\n        }catch(error){\n            fullValList.push([]);\n            eventList.push(\"\");\n            siteList.push(\"\");\n            whiteList.push(\"\");\n            blackList.push(\"\");\n            resultList.push(\"\");\n            dateList.push(\"\");\n            whiteEloList.push(\"\");\n            blackEloList.push(\"\");}\n        });\n\n        console.log(\"fullValList\");\n        console.log(fullValList);\n        console.log(\"fullValList\");\n        console.log(fullValList);\n\n        for (let j = 1; j <= maxPly; j++) {\n            initialColnames.push(\"Line\" + String(j));\n            initialColnames.push(\"EVAL\" + String(j));\n        }\n\n        const dataFrame = fullValList.map((row, index) => ({\n            ...row.reduce((acc, val, i) => ({ ...acc, [initialColnames[i]]: val }), {}),\n            Event: eventList[index],\n            Site: siteList[index],\n            White: whiteList[index],\n            Black: blackList[index],\n            WhiteResult1: resultList[index] === '1-0' ? 1 : 0,\n            Date: dateList[index],\n            WhiteElo: whiteEloList[index],\n            BlackElo: blackEloList[index],\n            GameID: index\n        }));\n\n        console.log(\"dataFrame\");\n        console.log(dataFrame);\n\n        const filteredDF = dataFrame.filter(row => row[opponentColor] === opponentName);\n\n        const moveProb1 = filteredDF.reduce((acc, row) => {\n            acc[row.Line1] = (acc[row.Line1] || 0) + 1;\n            return acc;\n        }, {});\n        const totalGames = filteredDF.length;\n\n        filteredDF.forEach(row => {\n            row.MoveProbability1 = moveProb1[row.Line1] / totalGames;\n        });\n\n        for (let i = 1; i < maxPly; i++) {\n            filteredDF.forEach(row => {\n                row[`WhiteResult${i + 1}`] = row.WhiteResult1;\n            });\n\n            const moveProb = filteredDF.reduce((acc, row) => {\n                const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n                acc[key] = (acc[key] || 0) + 1;\n                return acc;\n            }, {});\n\n            const lineCount = filteredDF.reduce((acc, row) => {\n                acc[row[`Line${i}`]] = (acc[row[`Line${i}`]] || 0) + 1;\n                return acc;\n            }, {});\n\n            filteredDF.forEach(row => {\n                const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n                row[`MoveProbability${i + 1}`] = moveProb[key] / lineCount[row[`Line${i}`]];\n            });\n        }\n\n        filteredDF.forEach(row => {\n            let pw = 1;\n            let pb = 1;\n            for (let i = 1; i <= maxPly; i++) {\n                if (i % 2 === 1) {\n                    pw *= row[`MoveProbability${i}`] || 1;\n                } else {\n                    pb *= row[`MoveProbability${i}`] || 1;\n                }\n                row[`LineProbability(W)${i}`] = pw;\n                row[`LineProbability(B)${i}`] = pb;\n            }\n        });\n\n        const longDF = [];\n        filteredDF.forEach(row => {\n            for (let i = 1; i <= maxPly; i++) {\n                longDF.push({\n                    GameID: row.GameID,\n                    Ply: i,\n                    Line: row[`Line${i}`],\n                    EVAL: row[`EVAL${i}`],\n                    WhiteResult: row[`WhiteResult${i}`],\n                    MoveProbability: row[`MoveProbability${i}`],\n                    LineProbabilityW: row[`LineProbability(W)${i}`],\n                    LineProbabilityB: row[`LineProbability(B)${i}`],\n                    Pgn: row.Pgn\n                });\n            }\n        });\n\n        console.log(\"longDF\");\n        console.log(longDF);\n\n        // Add #Games column\n        const lineCounts = longDF.reduce((acc, row) => {\n            acc[row.Line] = (acc[row.Line] || 0) + 1;\n            return acc;\n        }, {});\n\n        longDF.forEach(row => {\n            row['#Games'] = lineCounts[row.Line];\n        });\n\n        // Calculate lower limit based on precision level\n        let minGames = 1; // Default for At least 1\n        if (precisionLevel === '10% of Games') {\n            minGames = Math.ceil(totalGames / 10);\n        } else if (precisionLevel === '3% of Games') {\n            minGames = Math.ceil(totalGames / 35);\n        }\n        console.log(\"minGames\");\n        console.log(minGames);\n\n        // Filter for lines with more than minGames played\n        const filteredLongDFUnsorted = longDF.filter(row => row['#Games'] > minGames);\n        console.log(\"filteredLongDFUnsorted\");\n        console.log(filteredLongDFUnsorted);\n        const filteredLongDF = filteredLongDFUnsorted.sort((a, b) => b.Ply - a.Ply);\n        console.log(\"filteredLongDF\");\n        console.log(filteredLongDF);\n\n        const groupedByLine = filteredLongDF.reduce((acc, row) => {\n            if (!acc[row.Line]) {\n                acc[row.Line] = {\n                    Line: row.Line,\n                    EVAL: !isNaN(row.EVAL) ? row.EVAL : -Infinity,\n                    Ply: row.Ply,\n                    WhiteResult: row.WhiteResult,\n                    LineProbabilityB: row.LineProbabilityB,\n                    LineProbabilityW: row.LineProbabilityW,\n                    GameIDs: [row.GameID]\n                };\n            } else {\n                acc[row.Line].EVAL = Math.max(acc[row.Line].EVAL, !isNaN(row.EVAL) ? row.EVAL : -Infinity);\n                acc[row.Line].Ply = Math.max(acc[row.Line].Ply, row.Ply);\n                acc[row.Line].WhiteResult = Math.max(acc[row.Line].WhiteResult, row.WhiteResult);\n                acc[row.Line].LineProbabilityB = Math.max(acc[row.Line].LineProbabilityB, row.LineProbabilityB);\n                acc[row.Line].LineProbabilityW = Math.max(acc[row.Line].LineProbabilityW, row.LineProbabilityW);\n                acc[row.Line].GameIDs.push(row.GameID);\n            }\n            return acc;\n        }, {});\n        \n        // Replace -Infinity back with NaN if no valid EVAL was found\n        Object.values(groupedByLine).forEach(row => {\n            if (row.EVAL === -Infinity) {\n                row.EVAL = NaN;\n            }\n        });\n        \n        console.log(\"groupedByLine\");\n        console.log(groupedByLine);\n\n        // Convert groupedByLine to an array and sort\n        const groupedLongDF = Object.values(groupedByLine);\n        const sortedLongDF = groupedLongDF.sort((a, b) => {\n            if (opponentColor === \"Black\") {\n                return b.EVAL - a.EVAL;\n            } else {\n                return a.EVAL - b.EVAL;\n            }\n        });\n\n        // Consolidate LineProbability and drop irrelevant columns\n        sortedLongDF.forEach(row => {\n            if (opponentColor === \"Black\") {\n                row.LineProbability = row.LineProbabilityB;\n                delete row.LineProbabilityW;\n                delete row.LineProbabilityB;\n            } else {\n                row.LineProbability = row.LineProbabilityW;\n                delete row.LineProbabilityB;\n                delete row.LineProbabilityW;\n            }\n        });\n\n        console.log(\"sortedLongDF\");\n        console.log(sortedLongDF);\n        \n\n    const definedDF = sortedLongDF.filter(row => row.Line !== undefined);\n    console.log(\"definedDF\");\n        console.log(definedDF);\n \n        let fullLinesStr = \"//\";\n        let partialLinesStr = \"//\";\n    const nonSubsetLongDF = definedDF.filter(row => {\n        const subsets = [];\n        const lineMoves = row.Line.split(\"*\").filter(Boolean);\n        \n// SUBSET CHECK\n        // Check if value already in partialLinesStr\n        if (partialLinesStr.includes(\"//\" + row.Line +\"//\")) {\n                return false;\n            }\n        \n\n\n        // SUPERSET CHECK\n        // Check if any subset is already in fullLinesStr\n\n        // Generate all possible subsets of the current line\n        for (let i = 1; i <= lineMoves.length; i++) {\n            const subset = lineMoves.slice(0, i).join(\"*\") + \"*\"; \n            if (fullLinesStr.includes(\"//\" + subset+ \"//\")) {\n                return false;\n            }\n            partialLinesStr += subset + \"//\";\n    };\n        fullLinesStr += row.Line+ \"//\";\n        return true;\n    });\n\n    console.log(\"nonSubsetLongDF\");\n    console.log(nonSubsetLongDF);\n    \n        const categorizedLines = categorizeLines(nonSubsetLongDF, opponentColor);\n        setFilteredData(categorizedLines);\n\n        const commonLines = findCommonLines(movesList);\n        setCommonLines(commonLines);\n        setProcessing(false); // Stop processing\n    };\n    const evaluatePosition = (fen) => {\n        return new Promise((resolve) => {\n            stockfish.postMessage(`position fen ${fen}`);\n            stockfish.postMessage(\"go depth 16\");\n\n            stockfish.onmessage = (event) => {\n                const line = event.data;\n                const depthMatch = line.match(/depth (\\d+)/);\n                const evalMatch = line.match(/score cp (-?\\d+)/);\n\n                if (depthMatch && evalMatch) {\n                    const depth = parseInt(depthMatch[1], 10);\n                    if (depth === 15) {\n                        const evaluation = (parseInt(evalMatch[1], 10) / 100).toFixed(2);\n                        resolve(evaluation);\n                    }\n                }\n            };\n        });\n    };\n    // This function handles the toggling logic\n  const handleToggle = () => {\n    setShowTable(prevShowTable => !prevShowTable);\n  };\n\n    const createPgnFromGameIDs = (gameIDs, pgnList) => {\n        return gameIDs.map(id => pgnList[id]).join('\\n\\n');\n    };\n    \n    const handleLineClick = (gameIDs) => {\n        const combinedPgn = createPgnFromGameIDs(gameIDs, thePgnList);\n    \n        // Store the combined PGN in localStorage\n        localStorage.setItem('combinedPgn', combinedPgn);\n    \n        // Clear imported games\n        localStorage.removeItem('importedGames');\n    \n        // Redirect to analysis board\n        window.location.href = '/analysis-board';\n    };\n    \n    \n\n    const categorizeLines = (finalLongDF, opponentColor) => {\n        return finalLongDF.map(row => {\n            const evalColumn = \"EVAL\";\n            const evaluation = row[evalColumn];\n\n            if (opponentColor === \"Black\") {\n                if (evaluation >= 2) {\n                    row.MistakeType = \"Fatal Blunder\";\n                } else if (evaluation >= 1.0) {\n                    row.MistakeType = \"Major Mistake\";\n                } else if (evaluation >= 0.6) {\n                    row.MistakeType = \"Slight Inaccuracy\";\n                } else {\n                    row.MistakeType = \"None\";\n                }\n            } else {\n                if (evaluation <= -1.6) {\n                    row.MistakeType = \"Fatal Blunder\";\n                } else if (evaluation <= -0.6) {\n                    row.MistakeType = \"Major Mistake\";\n                } else if (evaluation <= -0.2) {\n                    row.MistakeType = \"Slight Inaccuracy\";\n                } else {\n                    row.MistakeType = \"None\";\n                }\n            }\n\n            return row;\n        }).filter(row => row.MistakeType !== \"None\" && row.LineProbability > 0.2);\n    };\n\n    const findCommonLines = (movesList) => {\n        const lineCounts = {};\n\n        movesList.forEach(moves => {\n            moves.forEach((move, index) => {\n                const line = moves.slice(0, index + 1).join(' ');\n                if (!lineCounts[line]) {\n                    lineCounts[line] = 0;\n                }\n                lineCounts[line]++;\n            });\n        });\n\n        const sortedLines = Object.entries(lineCounts).sort((a, b) => b[1] - a[1]);\n        return sortedLines.slice(0, 5);\n    };\n\n    const toggleDropdown = (dropdown) => {\n        setActiveDropdown(activeDropdown === dropdown ? null : dropdown);\n    };\n\n     const formatMovesWithNumbers = (line) => {\n        const moves = line.Line.split(\"*\").filter(Boolean);\n        const opening = detectOpening(moves);\n        const formattedMoves = moves.map((move, index) => {\n            const moveNumber = Math.floor(index / 2) + 1;\n            return index % 2 === 0 ? `${moveNumber}. ${move}` : `${moveNumber}...${move}`;\n        }).join(\" \");\n    \n        return `${opening}: ${formattedMoves}`;\n    };\n\n    return (\n        <div className=\"weakness-finder\">\n            <header>\n                <nav>\n                                    <ul>\n                                        <li\n                                            onMouseEnter={() => setIsLogoHovered(true)}\n                                            onMouseLeave={() => setIsLogoHovered(false)}\n                                        >\n                                            <Link to=\"/\">\n                                                <img src={isLogoHovered ? logoWhite : logo} alt=\"Home\" style={{ height: '39px' }} />\n                                            </Link>\n                                        </li>\n                                        {isMobile ? (\n                                            <div className=\"navdropdown-container\">\n                                                <div\n                                                    className={`${isDropdownOpen ? 'navdropdown' : 'navdropdown'}`}\n                                                    onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n                                                >\n                                                    <li\n                                                        className=\"navdropdown-header\"\n                                                        style={{\n                                \n                                                            lineHeight: '1.78',\n                                                            padding: '10px 20px',\n                                \n                                                            fontSize: '22px',\n                                                            color: 'white',\n                                                        }}\n                                                        \n                                                    >\n                                                        ☰ Menu\n                                                    </li>\n                                                    {isDropdownOpen && (\n                                                        <ul>\n                                                            <li>\n                                                                <Link\n                                                                    to=\"/blunder-punisher\"\n                                                                    className=\"nav-link\"\n                                                                    onClick={() => setIsDropdownOpen(false)}\n                                                                >\n                                                                    Blunder Punisher\n                                                                </Link>\n                                                            </li>\n                                                            <li>\n                                                                <Link\n                                                                    to=\"/weakness-finder\"\n                                                                    className=\"nav-link\"\n                                                                    onClick={() => setIsDropdownOpen(false)}\n                                                                >\n                                                                    Weakness Finder\n                                                                </Link>\n                                                            </li>\n                                                            <li>\n                                                                <Link\n                                                                    to=\"/analysis-board\"\n                                                                    className=\"nav-link\"\n                                                                    onClick={() => setIsDropdownOpen(false)}\n                                                                >\n                                                                    Analysis Board\n                                                                </Link>\n                                                            </li>\n                                                            <li>\n                                                                <Link\n                                                                    to=\"/feedback\"\n                                                                    className=\"nav-link\"\n                                                                    onClick={() => setIsDropdownOpen(false)}\n                                                                >\n                                                                    Your Feedback\n                                                                </Link>\n                                                            </li>\n                                                        </ul>\n                                                    )}\n                                                </div>\n                                            </div>\n                                        ) : (\n                                            <ul>\n                                                <li>\n                                                    <Link to=\"/blunder-punisher\" className=\"prepare-link\">\n                                                        Blunder Punisher\n                                                    </Link>\n                                                </li>\n                                                <li>\n                                                    <Link to=\"/weakness-finder\">Weakness Finder</Link>\n                                                </li>\n                                                <li>\n                                                    <Link to=\"/analysis-board\">Analysis Board</Link>\n                                                </li>\n                                                <li>\n                                                    <Link to=\"/feedback\">Your Feedback</Link>\n                                                </li>\n                                            </ul>\n                                        )}\n                                    </ul>\n                                </nav>\n            </header>\n            <main>\n                <section className=\"hero4\">\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\n    <h1 className=\"title\" style={{ position: 'absolute', left: '50%', transform: 'translateX(-50%)' }}>Blunder Punisher</h1>\n    <p style={{ fontStyle: 'italic', fontSize: 20, marginLeft: 'auto' }}>Punish your opponent's mistakes!</p>\n</div>\n\n                    {!showAdvancedFilter ? (\n                        <div className=\"filter-container\">\n                            <button onClick={handleFilterClick} className=\"adv-filter-button\">🔍</button>\n                            \n                    <div className=\"tab-container\">\n                        <div className=\"tab\">\n                            <button className={inputMethod === 'chesscom' ? 'tablinks active' : 'tablinks'} onClick={() => setInputMethod('chesscom')}>Chess.com</button>\n                            <button className={inputMethod === 'lichess' ? 'tablinks active' : 'tablinks'} onClick={() => setInputMethod('lichess')}>Lichess</button>\n                            <button className={inputMethod === 'pgn' ? 'tablinks active' : 'tablinks'} onClick={() => setInputMethod('pgn')}>PGN</button>\n                        </div>\n\n                        <div className=\"tabcontent\" style={{ display: inputMethod === 'pgn' ? 'block' : 'none' }}>\n                            <div className=\"form-group\">\n                                <input type=\"file\" onChange={handleFileSelect} />\n                                <label htmlFor=\"opponentName\">Player Name:</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"opponentName\" \n                                    value={opponentName} \n                                    onChange={(e) => setOpponentName(e.target.value)} \n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"tabcontent\" style={{ display: inputMethod === 'lichess' ? 'block' : 'none' }}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"opponentUsername\">Player Username:</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"opponentUsername\" \n                                    value={opponentName} \n                                    onChange={(e) => setOpponentName(e.target.value)} \n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"tabcontent\" style={{ display: inputMethod === 'chesscom' ? 'block' : 'none' }}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"opponentUsername\">Player Username:</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"opponentUsername\" \n                                    value={opponentName} \n                                    onChange={(e) => setOpponentName(e.target.value)} \n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"opponentColor\">Piece Color:</label>\n                            <select \n                                id=\"opponentColor\" \n                                value={opponentColor} \n                                onChange={(e) => setOpponentColor(e.target.value)}\n                            >\n                                <option value=\"White\">White</option>\n                                <option value=\"Black\">Black</option>\n                            </select>\n                        </div>\n\n                        \n                        \n                        <button onClick={handleStart} className=\"spec-button\" style={{marginTop:6.5, marginLeft:10}}>Start</button>\n                        <button onClick={handleReset}  className=\"spec-button\" style={{marginTop:6.5, marginLeft:10}} >Reset</button>\n                    </div>\n            {processing ? (\n        // Rotating white king while games are being processed\n        <div className=\"rotating-king\">\n          <img src={\"https://upload.wikimedia.org/wikipedia/commons/4/42/Chess_klt45.svg\"} alt=\"Rotating King\" className=\"king-icon\" />\n        </div>\n      ) : (\n        // Toggle button after processing is complete\n        <div className=\"arrow-button\" onClick={handleToggle}>\n          <img  \n          src={rightArrow }\n            alt=\"Toggle View\" \n            className={`arrow-icon ${showTable ? '' : 'rotate'}`}\n          />\n        </div>\n      )}\n                    {showTable && gamesProcessed > 0 &&\n        <div className=\"table-container\">\n        <table className=\"scrollable-table\">\n          <thead>\n            <tr>\n              <th>Opening</th>\n              <th>Games</th>\n              <th>Score %</th>\n              <th>Wins</th>\n              <th>Losses</th>\n            </tr>\n          </thead>\n          <tbody>\n            {sortedStats.map(([opening, stats], index) => (\n              <tr key={index}>\n                <td>{opening}</td>\n                <td>{stats.numGames}</td>\n                <td>{((stats.score / stats.numGames) * 100).toFixed(2)}%</td>\n                <td>{stats.wins}</td>\n                <td>{stats.losses}</td>\n              </tr>\n            ))}\n          </tbody>\n\n          <tfoot>\n        <tr>\n          <td>Total</td>\n          <td>{sortedStats.reduce((total, [, stats]) => total + stats.numGames, 0)}</td>\n          <td>{((sortedStats.reduce((total, [, stats]) => total + stats.score, 0) / sortedStats.reduce((total, [, stats]) => total + stats.numGames, 0)) * 100).toFixed(2)}%</td>\n          <td>{sortedStats.reduce((total, [, stats]) => total + stats.wins, 0)}</td>\n          <td>{sortedStats.reduce((total, [, stats]) => total + stats.losses, 0)}</td>\n        </tr>\n      </tfoot>\n          \n        </table>\n        </div>\n        \n      }\n                    {showTable ? (\n                        <div className=\"common-lines\">\n                        </div>\n                    ) : (\n                        <div>\n                        <div className=\"dropdown-container\">\n                            <div className=\"dropdown\">\n                                <button onClick={() => toggleDropdown('Fatal Blunders')}>\n                                    Fatal Blunders: ({filteredData.filter(line => line.MistakeType === 'Fatal Blunder').length})\n                                </button>\n                                {activeDropdown === 'Fatal Blunders' && (\n                                    <ul>\n                                        {filteredData.filter(line => line.MistakeType === 'Fatal Blunder').map((line, index) => (\n                                            <li key={index} className='line-item' onClick={() => handleLineClick(line.GameIDs)}>\n                                            {formatMovesWithNumbers(line)}\n                                            <p>Evaluation: {Math.round(line.EVAL * 100) / 100} w/ Trap Probability: {Math.round(line.LineProbability * 100)}%</p>\n                                        </li>\n                                        ))}\n                                    </ul>\n                                )}\n                            </div>\n                            <div className=\"dropdown\">\n                                <button onClick={() => toggleDropdown('Major Mistakes')}>\n                                    Major Mistakes: ({filteredData.filter(line => line.MistakeType === 'Major Mistake').length})\n                                </button>\n                                {activeDropdown === 'Major Mistakes' && (\n                                    <ul>\n                                        {filteredData.filter(line => line.MistakeType === 'Major Mistake').map((line, index) => (\n                                           <li key={index} className='line-item' onClick={() => handleLineClick(line.GameIDs)}>\n                                           {formatMovesWithNumbers(line)}\n                                           <p>Evaluation: {Math.round(line.EVAL * 100) / 100} w/ Trap Probability: {Math.round(line.LineProbability * 100)}%</p>\n                                           </li>\n                                        ))}\n                                    </ul>\n                                )}\n                            </div>\n                            <div className=\"dropdown\">\n                                <button onClick={() => toggleDropdown('Slight Inaccuracies')}>\n                                    Slight Inaccuracies: ({filteredData.filter(line => line.MistakeType === 'Slight Inaccuracy').length})\n                                </button>\n                                {activeDropdown === 'Slight Inaccuracies' && (\n                                    <ul>\n                                        {filteredData.filter(line => line.MistakeType === 'Slight Inaccuracy').map((line, index) => (\n                                           <li key={index} className='line-item' onClick={() => handleLineClick(line.GameIDs)}>\n                                           {formatMovesWithNumbers(line)}\n                                           <p>Evaluation: {Math.round(line.EVAL * 100) / 100} w/ Trap Probability: {Math.round(line.LineProbability * 100)}%</p>\n                                           </li>\n                                        ))}\n                                    </ul>\n                                )}\n                            </div>\n                            </div>\n                            </div>\n                        )}\n                        </div>\n                    ) : (\n                        <AdvancedFilter onSave={handleSaveFilter} onCancel={handleCancelFilter} />\n                    )}\n                </section>\n            </main>\n            <footer>\n                <p>&copy; 2025 CheckmateWizard.com All rights reserved.</p>\n            </footer>\n        </div>\n    );\n};\n\nexport default BlunderPunisher;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,KAAK,QAAQ,UAAU;AAChC,OAAOC,cAAc,MAAM,kBAAkB,CAAC,CAAC;AAC/C,OAAOC,kBAAkB,MAAM,UAAU;AACzC,OAAO,cAAc;;AAGrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOC,IAAI,MAAM,mCAAmC,CAAC,CAAC;AACtD,OAAOC,SAAS,MAAM,kCAAkC,CAAC,CAAC;AAC1D,OAAOC,UAAU,MAAM,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,SAAS,GAAGC,MAAM,CAACD,SAAS;AAClC,MAAME,YAAY,GAAG;EACjBC,aAAa,EAAE,EAAE;EACjBC,UAAU,EAAE,CAAC;EACbC,cAAc,EAAC,CAAC;EAChBC,WAAW,EAAE,EAAE;EACfC,YAAY,EAAE,EAAE;EAChBC,UAAU,EAAE,EAAE;EACdC,cAAc,EAAE,EAAE;EAClBC,YAAY,EAAE,EAAE;EAChBC,aAAa,EAAE,OAAO;EACtBC,cAAc,EAAE,aAAa;EAC7BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAC,KAAK;EACfC,cAAc,EAAE,IAAI;EACpBC,WAAW,EAAE,UAAU;EACvBC,aAAa,EAAE,KAAK;EACpBC,YAAY,EAAC,CAAC;AAClB,CAAC;AACD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACkC,YAAY,EAAEC,eAAe,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACoC,YAAY,EAAEC,eAAe,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACsC,MAAM,EAAEC,SAAS,CAAC,GAAGvC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,CAAC;EAC7D,MAAM,CAAC4B,aAAa,EAAEY,gBAAgB,CAAC,GAAGxC,QAAQ,CAACa,YAAY,CAACe,aAAa,CAAC;EAC9E,MAAM,CAACd,aAAa,EAAE2B,gBAAgB,CAAC,GAAGzC,QAAQ,CAAC,MAAM0C,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,+BAA+B,CAAC,CAAC,IAAIhC,YAAY,CAACC,aAAa,CAAC;EACzJ,MAAM,CAACC,UAAU,EAAE+B,aAAa,CAAC,GAAG9C,QAAQ,CAAC,MAAM+C,MAAM,CAACH,YAAY,CAACC,OAAO,CAAC,4BAA4B,CAAC,CAAC,IAAIhC,YAAY,CAACE,UAAU,CAAC;EACzI,MAAM,CAACE,WAAW,EAAE+B,cAAc,CAAC,GAAGhD,QAAQ,CAAC,MAAM0C,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,6BAA6B,CAAC,CAAC,IAAIhC,YAAY,CAACI,WAAW,CAAC;EACjJ,MAAM,CAACC,YAAY,EAAE+B,eAAe,CAAC,GAAGjD,QAAQ,CAAC,MAAM0C,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,8BAA8B,CAAC,CAAC,IAAIhC,YAAY,CAACK,YAAY,CAAC;EACrJ,MAAM,CAACC,UAAU,EAAE+B,aAAa,CAAC,GAAGlD,QAAQ,CAAC,MAAM0C,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,4BAA4B,CAAC,CAAC,IAAIhC,YAAY,CAACM,UAAU,CAAC;EAC7I,MAAM,CAACC,cAAc,EAAE+B,iBAAiB,CAAC,GAAGnD,QAAQ,CAACa,YAAY,CAACO,cAAc,CAAC;EACjF,MAAM,CAACC,YAAY,EAAE+B,eAAe,CAAC,GAAGpD,QAAQ,CAAC,MAAM4C,YAAY,CAACC,OAAO,CAAC,8BAA8B,CAAC,IAAIhC,YAAY,CAACQ,YAAY,CAAC;EACzI,MAAM,CAACC,aAAa,EAAE+B,gBAAgB,CAAC,GAAGrD,QAAQ,CAAC,MAAM4C,YAAY,CAACC,OAAO,CAAC,+BAA+B,CAAC,IAAIhC,YAAY,CAACS,aAAa,CAAC;EAC7I,MAAM,CAACC,cAAc,EAAE+B,iBAAiB,CAAC,GAAGtD,QAAQ,CAAC,MAAM4C,YAAY,CAACC,OAAO,CAAC,gCAAgC,CAAC,IAAIhC,YAAY,CAACU,cAAc,CAAC;EACjJ,MAAM,CAACC,UAAU,EAAE+B,aAAa,CAAC,GAAGvD,QAAQ,CAAC,MAAM4C,YAAY,CAACC,OAAO,CAAC,4BAA4B,CAAC,IAAIhC,YAAY,CAACW,UAAU,CAAC;EACjI,MAAM,CAACC,SAAS,EAAE+B,YAAY,CAAC,GAAGxD,QAAQ,CAAC,MAAM4C,YAAY,CAACC,OAAO,CAAC,2BAA2B,CAAC,IAAIhC,YAAY,CAACY,SAAS,CAAC;EAC7H,MAAM,CAACC,cAAc,EAAE+B,iBAAiB,CAAC,GAAGzD,QAAQ,CAACa,YAAY,CAACa,cAAc,CAAC;EACjF,MAAM,CAACG,YAAY,EAAE6B,eAAe,CAAC,GAAG1D,QAAQ,CAAC,MAAM0C,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,8BAA8B,CAAC,CAAC,IAAIhC,YAAY,CAACgB,YAAY,CAAC,CAAC,CAAE;EACxJ,MAAM,CAACF,WAAW,EAAEgC,cAAc,CAAC,GAAG3D,QAAQ,CAAC,MAAM4C,YAAY,CAACC,OAAO,CAAC,6BAA6B,CAAC,IAAIhC,YAAY,CAACc,WAAW,CAAC;EACrI,MAAM,CAACX,cAAc,EAAE4C,iBAAiB,CAAC,GAAG5D,QAAQ,CAAC,MAAM+C,MAAM,CAACH,YAAY,CAACC,OAAO,CAAC,gCAAgC,CAAC,CAAC,IAAIhC,YAAY,CAACG,cAAc,CAAC;EACzJ,MAAM,CAAC6C,QAAQ,EAAEC,WAAW,CAAC,GAAG9D,QAAQ,CAACY,MAAM,CAACmD,UAAU,GAAG,IAAI,CAAC;EAClE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjE,QAAQ,CAAC,KAAK,CAAC;;EAGvD;;EAGAC,SAAS,CAAC,MAAM;IACZ,MAAMiE,YAAY,GAAGA,CAAA,KAAM;MACvB,MAAMC,WAAW,GAAGvD,MAAM,CAACmD,UAAU,GAAG,IAAI;MAC5CD,WAAW,CAACK,WAAW,CAAC;MAExB,IAAIA,WAAW,EAAE;QACbC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;QACpCC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;MACzC,CAAC,MAAM;QACHL,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;QACpCC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,QAAQ,CAAC;MAC5C;IACJ,CAAC;IAED9D,MAAM,CAAC+D,gBAAgB,CAAC,QAAQ,EAAET,YAAY,CAAC;IAE/CA,YAAY,CAAC,CAAC;IAEd,OAAO,MAAMtD,MAAM,CAACgE,mBAAmB,CAAC,QAAQ,EAAEV,YAAY,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAIVjE,SAAS,CAAC,MAAM;IACZ2C,YAAY,CAACiC,OAAO,CAAC,8BAA8B,EAAEnC,IAAI,CAACoC,SAAS,CAACjD,YAAY,CAAC,CAAC;EACtF,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB5B,SAAS,CAAC,MAAM;IACZ2C,YAAY,CAACiC,OAAO,CAAC,+BAA+B,EAAEnC,IAAI,CAACoC,SAAS,CAAChE,aAAa,CAAC,CAAC;EACxF,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnBb,SAAS,CAAC,MAAM;IACZ2C,YAAY,CAACiC,OAAO,CAAC,4BAA4B,EAAE9D,UAAU,CAAC;EAClE,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhBd,SAAS,CAAC,MAAM;IACZ2C,YAAY,CAACiC,OAAO,CAAC,gCAAgC,EAAE7D,cAAc,CAAC;EAC1E,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpBf,SAAS,CAAC,MAAM;IACZ2C,YAAY,CAACiC,OAAO,CAAC,6BAA6B,EAAEnC,IAAI,CAACoC,SAAS,CAAC7D,WAAW,CAAC,CAAC;EACpF,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjBhB,SAAS,CAAC,MAAM;IACZ2C,YAAY,CAACiC,OAAO,CAAC,8BAA8B,EAAEnC,IAAI,CAACoC,SAAS,CAAC5D,YAAY,CAAC,CAAC;EACtF,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElBjB,SAAS,CAAC,MAAM;IACZ2C,YAAY,CAACiC,OAAO,CAAC,4BAA4B,EAAEnC,IAAI,CAACoC,SAAS,CAAC3D,UAAU,CAAC,CAAC;EAClF,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhBlB,SAAS,CAAC,MAAM;IACZ2C,YAAY,CAACiC,OAAO,CAAC,8BAA8B,EAAExD,YAAY,CAAC;EACtE,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElBpB,SAAS,CAAC,MAAM;IACZ2C,YAAY,CAACiC,OAAO,CAAC,+BAA+B,EAAEvD,aAAa,CAAC;EACxE,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnBrB,SAAS,CAAC,MAAM;IACZ2C,YAAY,CAACiC,OAAO,CAAC,gCAAgC,EAAEtD,cAAc,CAAC;EAC1E,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpBtB,SAAS,CAAC,MAAM;IACZ2C,YAAY,CAACiC,OAAO,CAAC,6BAA6B,EAAElD,WAAW,CAAC;EACpE,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB1B,SAAS,CAAC,MAAM;IACZ2C,YAAY,CAACiC,OAAO,CAAC,2BAA2B,EAAEpD,SAAS,CAAC;EAChE,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEfxB,SAAS,CAAC,MAAM;IACZsD,aAAa,CAAC,KAAK,CAAC,CAAC,CAAE;EAC3B,CAAC,EAAE,CAAC5B,WAAW,CAAC,CAAC;EAIjB,MAAMoD,WAAW,GAAGA,CAAA,KAAM;IACtB;IACAtC,gBAAgB,CAAC5B,YAAY,CAACC,aAAa,CAAC;IAC5CgC,aAAa,CAACjC,YAAY,CAACE,UAAU,CAAC;IACtCiC,cAAc,CAACnC,YAAY,CAACI,WAAW,CAAC;IACxCgC,eAAe,CAACpC,YAAY,CAACK,YAAY,CAAC;IAC1CgC,aAAa,CAACrC,YAAY,CAACM,UAAU,CAAC;IACtCgC,iBAAiB,CAACtC,YAAY,CAACO,cAAc,CAAC;IAC9CgC,eAAe,CAACvC,YAAY,CAACQ,YAAY,CAAC;IAC1CgC,gBAAgB,CAACxC,YAAY,CAACS,aAAa,CAAC;IAC5CgC,iBAAiB,CAACzC,YAAY,CAACU,cAAc,CAAC;IAC9CgC,aAAa,CAAC1C,YAAY,CAACW,UAAU,CAAC;IACtCiC,iBAAiB,CAAC5C,YAAY,CAACa,cAAc,CAAC;IAC9CiC,cAAc,CAAC9C,YAAY,CAACc,WAAW,CAAC;IACxC+B,eAAe,CAAC7C,YAAY,CAACgB,YAAY,CAAC;IAC1C+B,iBAAiB,CAAC/C,YAAY,CAACG,cAAc,CAAC;IAC9CwC,YAAY,CAAC3C,YAAY,CAACY,SAAS,CAAC;;IAEpC;IACAmB,YAAY,CAACoC,UAAU,CAAC,+BAA+B,CAAC;IACxDpC,YAAY,CAACoC,UAAU,CAAC,4BAA4B,CAAC;IACrDpC,YAAY,CAACoC,UAAU,CAAC,6BAA6B,CAAC;IACtDpC,YAAY,CAACoC,UAAU,CAAC,8BAA8B,CAAC;IACvDpC,YAAY,CAACoC,UAAU,CAAC,4BAA4B,CAAC;IACrDpC,YAAY,CAACoC,UAAU,CAAC,8BAA8B,CAAC;IACvDpC,YAAY,CAACoC,UAAU,CAAC,+BAA+B,CAAC;IACxDpC,YAAY,CAACoC,UAAU,CAAC,gCAAgC,CAAC;IACzDpC,YAAY,CAACoC,UAAU,CAAC,6BAA6B,CAAC;IACtDpC,YAAY,CAACoC,UAAU,CAAC,6BAA6B,CAAC;IACtDpC,YAAY,CAACoC,UAAU,CAAC,gCAAgC,CAAC;IACzDpC,YAAY,CAACoC,UAAU,CAAC,4BAA4B,CAAC;IACrDpC,YAAY,CAACoC,UAAU,CAAC,2BAA2B,CAAC;IACpDpC,YAAY,CAACoC,UAAU,CAAC,8BAA8B,CAAC;EAC3D,CAAC;EAED,IAAIC,SAAS,GAAG,OAAOtE,SAAS,KAAK,UAAU,GAAGA,SAAS,CAAC,CAAC,GAAG,IAAIuE,MAAM,CAAC,cAAc,CAAC;EAC1FD,SAAS,CAACE,WAAW,CAAC,KAAK,CAAC;EAE5BlF,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAACkB,UAAU,CAAC,CAAC;EAEjC,MAAMiE,gBAAgB,GAAIC,KAAK,IAAK;IAChC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACF,IAAI,EAAE;IAEX,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;MACnB,MAAMC,OAAO,GAAGD,CAAC,CAACL,MAAM,CAACO,MAAM;MAC/B,IAAIC,QAAQ,GAAGF,OAAO,CAACG,KAAK,CAAC,WAAW,CAAC,CAAC1D,MAAM,CAAC2D,OAAO,CAAC;MACzD,IAAIC,KAAK,GAAGH,QAAQ,CAACI,GAAG,CAACC,IAAI,IAAI,QAAQ,GAAGA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MAExD5D,gBAAgB,CAACyD,KAAK,CAAC;MACvBpD,aAAa,CAACoD,KAAK,CAACI,MAAM,CAAC;IAC/B,CAAC;IACDb,MAAM,CAACc,UAAU,CAACjB,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMkB,iBAAiB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,GAAG,IAAI,EAAEC,YAAY,EAAEC,UAAU,EAAEC,UAAU,EAAEvF,aAAa,KAAK;IAChH,MAAMwF,WAAW,GAAG,EAAE;IACtB,IAAIH,YAAY,CAACI,MAAM,EAAED,WAAW,CAACE,IAAI,CAAC,QAAQ,CAAC;IACnD,IAAIL,YAAY,CAACM,KAAK,EAAEH,WAAW,CAACE,IAAI,CAAC,OAAO,CAAC;IACjD,IAAIL,YAAY,CAACO,KAAK,EAAEJ,WAAW,CAACE,IAAI,CAAC,OAAO,CAAC;IACjD,IAAIL,YAAY,CAACQ,SAAS,EAAEL,WAAW,CAACE,IAAI,CAAC,WAAW,CAAC;IAEzD,MAAMI,eAAe,GAAGN,WAAW,CAACR,MAAM,GAAG,CAAC,GAAI,aAAYQ,WAAW,CAACO,IAAI,CAAC,GAAG,CAAE,EAAC,GAAG,EAAE;IAC1F,IAAIC,gBAAgB,GAAG,EAAE;IACzB,IAAIC,iBAAiB,GAAG,CAAC;IACzB,IAAIC,WAAW,GAAG,CAAC;;IAEnB;IACA,OAAOF,gBAAgB,CAAChB,MAAM,GAAGI,QAAQ,EAAE;MACvC,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAqCjB,QAAS,6CAA4Ce,WAAY,GAAEJ,eAAgB,EAAC,CAAC;MACxJ,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;MAElC;MACA,IAAI7B,QAAQ,GAAG4B,IAAI,CAAC3B,KAAK,CAAC,WAAW,CAAC,CAAC1D,MAAM,CAAC2D,OAAO,CAAC;MACtD,IAAIF,QAAQ,CAACO,MAAM,KAAK,CAAC,EAAE;QACvB;QACA;MACJ;;MAEA;MACA,IAAIuB,aAAa,GAAG9B,QAAQ,CAACI,GAAG,CAACC,IAAI,IAAI,QAAQ,GAAGA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC/D,MAAM,CAACwF,OAAO,IAAI;QAC/E,MAAMC,SAAS,GAAGD,OAAO,CAACE,KAAK,CAAC,kCAAkC,CAAC;QACnE,MAAMC,aAAa,GAAG,CAACF,SAAS,IAAI,CAAC,CAACnB,UAAU,IAAI,IAAIsB,IAAI,CAACH,SAAS,CAAC,CAAC,CAAC,CAACI,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,IAAID,IAAI,CAACtB,UAAU,CAAC,MAChF,CAACC,UAAU,IAAI,IAAIqB,IAAI,CAACH,SAAS,CAAC,CAAC,CAAC,CAACI,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,IAAID,IAAI,CAACrB,UAAU,CAAC,CAAC;;QAExH;QACA,MAAMuB,gBAAgB,GAAGN,OAAO,CAACE,KAAK,CAAC,kBAAkB,CAAC;QAC1D,MAAMK,gBAAgB,GAAGP,OAAO,CAACE,KAAK,CAAC,kBAAkB,CAAC;QAC1D,MAAMM,cAAc,GAAIhH,aAAa,KAAK,OAAO,IAAI8G,gBAAgB,IAAIA,gBAAgB,CAAC,CAAC,CAAC,KAAK3B,QAAQ,IACjFnF,aAAa,KAAK,OAAO,IAAI+G,gBAAgB,IAAIA,gBAAgB,CAAC,CAAC,CAAC,KAAK5B,QAAS;QAE1G,OAAOwB,aAAa,IAAIK,cAAc;MAC1C,CAAC,CAAC;;MAEF;MACAhB,gBAAgB,GAAGA,gBAAgB,CAACiB,MAAM,CAACV,aAAa,CAAC;;MAEzD;MACA,IAAIP,gBAAgB,CAAChB,MAAM,IAAII,QAAQ,EAAE;QACrCY,gBAAgB,GAAGA,gBAAgB,CAACkB,KAAK,CAAC,CAAC,EAAE9B,QAAQ,CAAC,CAAC,CAAC;QACxD;MACJ;;MAEA;MACAc,WAAW,EAAE;MACbD,iBAAiB,IAAIxB,QAAQ,CAACO,MAAM;IACxC;IAEA,OAAOgB,gBAAgB;EAC3B,CAAC;EAED,MAAMmB,iBAAiB,GAAGA,CAAA,KAAM;IAC5BxG,qBAAqB,CAAC,IAAI,CAAC;EAC/B,CAAC;EACD,MAAMyG,gBAAgB,GAAIC,MAAM,IAAK;IACjCtG,eAAe,CAACsG,MAAM,CAAC;IACvB1G,qBAAqB,CAAC,KAAK,CAAC;IAC5B;EACJ,CAAC;EAED,MAAM2G,kBAAkB,GAAGA,CAAA,KAAM;IAC7B3G,qBAAqB,CAAC,KAAK,CAAC;EAChC,CAAC;EAED,MAAM4G,kBAAkB,GAAG,MAAAA,CAAOpC,QAAQ,EAAEC,QAAQ,GAAG,IAAI,EAAEC,YAAY,EAAEC,UAAU,EAAEC,UAAU,EAAEvF,aAAa,KAAK;IACjH,MAAMwH,eAAe,GAAG,MAAOC,UAAU,IAAK;MAC1C,IAAI;QACA,MAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAACqB,UAAU,CAAC;QACxC,IAAI,CAACtB,QAAQ,CAACuB,EAAE,EAAE;UACd,MAAMC,SAAS,GAAG,MAAMxB,QAAQ,CAACG,IAAI,CAAC,CAAC;UACvC,MAAM,IAAIsB,KAAK,CAAE,wBAAuBzB,QAAQ,CAAC0B,UAAW,MAAKF,SAAU,EAAC,CAAC;QACjF;QAEA,MAAMtB,IAAI,GAAG,MAAMF,QAAQ,CAAC2B,IAAI,CAAC,CAAC;QAClC,MAAMvB,aAAa,GAAGF,IAAI,CAACzB,KAAK,CAAC5D,MAAM,CAAC8D,IAAI,IAAI;UAC5C,IAAGA,IAAI,CAACiD,KAAK,IAAE,OAAO,EAAE,OAAO;;UAE/B;UAAA;UAEA,MAAMC,kBAAkB,GAAI3C,YAAY,CAACI,MAAM,IAAIX,IAAI,CAACmD,UAAU,KAAK,QAAQ,IACnD5C,YAAY,CAACM,KAAK,IAAIb,IAAI,CAACmD,UAAU,KAAK,OAAQ,IAClD5C,YAAY,CAACO,KAAK,IAAId,IAAI,CAACmD,UAAU,KAAK,OAAQ,IAClD5C,YAAY,CAACQ,SAAS,IAAIf,IAAI,CAACmD,UAAU,KAAK,WAAY;;UAEtF;UACA,MAAMjB,cAAc,GAAIhH,aAAa,KAAK,OAAO,IAAI8E,IAAI,CAACoD,KAAK,CAAC/C,QAAQ,KAAKA,QAAQ,IAC7DnF,aAAa,KAAK,OAAO,IAAI8E,IAAI,CAACqD,KAAK,CAAChD,QAAQ,KAAKA,QAAS;;UAEtF;UACA,MAAMiD,QAAQ,GAAG,IAAIxB,IAAI,CAAC9B,IAAI,CAACuD,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;UACjD,MAAMC,iBAAiB,GAAG,CAAC,CAAChD,UAAU,IAAI8C,QAAQ,IAAI,IAAIxB,IAAI,CAACtB,UAAU,CAAC,MAC/C,CAACC,UAAU,IAAI6C,QAAQ,IAAI,IAAIxB,IAAI,CAACrB,UAAU,CAAC,CAAC;UAC3E,OAAOyC,kBAAkB,IAAIhB,cAAc,IAAIsB,iBAAiB;QACpE,CAAC,CAAC;QAEF,OAAO/B,aAAa;MACxB,CAAC,CAAC,OAAOgC,KAAK,EAAE;QACZzF,OAAO,CAACyF,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACC,OAAO,CAAC;QAC3D,OAAO,EAAE,CAAC,CAAC;MACf;IACJ,CAAC;IAED,IAAI;MACA,MAAMC,gBAAgB,GAAG,MAAMrC,KAAK,CAAE,oCAAmCjB,QAAS,iBAAgB,CAAC;MACnG,IAAI,CAACsD,gBAAgB,CAACf,EAAE,EAAE;QACtB,MAAMC,SAAS,GAAG,MAAMc,gBAAgB,CAACnC,IAAI,CAAC,CAAC;QAC/C,MAAM,IAAIsB,KAAK,CAAE,4BAA2Ba,gBAAgB,CAACZ,UAAW,MAAKF,SAAU,EAAC,CAAC;MAC7F;MAEA,MAAMe,YAAY,GAAG,MAAMD,gBAAgB,CAACX,IAAI,CAAC,CAAC;MAClD,MAAMa,QAAQ,GAAGD,YAAY,CAACC,QAAQ,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;;MAElD,MAAMC,OAAO,GAAG,EAAE;MAClB,KAAK,IAAIpB,UAAU,IAAIkB,QAAQ,EAAE;QAC7B,IAAIE,OAAO,CAAC7D,MAAM,IAAII,QAAQ,EAAE;QAEhC,MAAMR,KAAK,GAAG,MAAM4C,eAAe,CAACC,UAAU,CAAC;QAC/CoB,OAAO,CAACnD,IAAI,CAAC,GAAGd,KAAK,CAAC;QAEtB,IAAIiE,OAAO,CAAC7D,MAAM,IAAII,QAAQ,EAAE;UAC5ByD,OAAO,CAAC7D,MAAM,GAAGI,QAAQ,CAAC,CAAC;UAC3B;QACJ;MACJ;MAEA,OAAOyD,OAAO;IAClB,CAAC,CAAC,OAAON,KAAK,EAAE;MACZzF,OAAO,CAACyF,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAACC,OAAO,CAAC;MACpE,MAAMD,KAAK;IACf;EACJ,CAAC;EAGD,MAAMO,eAAe,GAAGA,CAAA,KAAM;IAC1B;IACA;IACAhG,OAAO,CAACC,GAAG,CAAE,8BAA6B/B,MAAO,EAAC,CAAC;EACvD,CAAC;EAED,MAAM+H,QAAQ,GAAG;IAEZ;IACD,2BAA2B,EAAE,gDAAgD;IAC7E,2BAA2B,EAAE,oCAAoC;IACjE,iBAAiB,EAAE,6BAA6B;IAChD,qBAAqB,EAAE,yBAAyB;IAChD,qBAAqB,EAAE,mCAAmC;IAC1D,iBAAiB,EAAE,2BAA2B;IAC9C,iBAAiB,EAAE,0BAA0B;IAC7C,mBAAmB,EAAE,mCAAmC;IACxD,gBAAgB,EAAE,mCAAmC;IACrD,aAAa,EAAE,2BAA2B;IAC1C,WAAW,EAAE,6BAA6B;IAC1C,UAAU,EAAE,oCAAoC;IAChD,UAAU,EAAE,sCAAsC;IAClD,UAAU,EAAE,mCAAmC;IAC/C,OAAO,EAAE,gBAAgB;IAEzB;IACA,UAAU,EAAE,yCAAyC;IACrD,UAAU,EAAE,yCAAyC;IACrD,WAAW,EAAE,gCAAgC;IAC7C,UAAU,EAAE,2CAA2C;IACvD,gBAAgB,EAAE,sCAAsC;IACxD,2CAA2C,EAAE,uCAAuC;IACpF,wCAAwC,EAAE,sCAAsC;IAChF,+BAA+B,EAAE,qCAAqC;IACtE,+BAA+B,EAAE,yCAAyC;IAC1E,2BAA2B,EAAE,wCAAwC;IACrE,iBAAiB,EAAE,4BAA4B;IAC/C,iBAAiB,EAAE,6BAA6B;IAChD,0BAA0B,EAAE,2CAA2C;IACvE,kBAAkB,EAAE,6BAA6B;IACjD,aAAa,EAAE,8BAA8B;IAC7C,UAAU,EAAE,8BAA8B;IAC1C,OAAO,EAAE,mBAAmB;IAG5B;IACA,cAAc,EAAE,kCAAkC;IAClD,cAAc,EAAE,yBAAyB;IACzC,UAAU,EAAE,gBAAgB;IAC5B,UAAU,EAAE,cAAc;IAC1B,OAAO,EAAE,gBAAgB;IACzB,OAAO,EAAE,cAAc;IAEvB;IACA,WAAW,EAAE,8BAA8B;IAC3C,YAAY,EAAE,iCAAiC;IAC/C,OAAO,EAAE,sBAAsB;IAE/B;IACA,WAAW,EAAE,0CAA0C;IACvD,WAAW,EAAE,qCAAqC;IAClD,QAAQ,EAAE,oBAAoB;IAE9B;IACA,WAAW,EAAE,gCAAgC;IAC7C,QAAQ,EAAE,qBAAqB;IAI/B;IACA,0CAA0C,EAAE,sCAAsC;IAClF,sCAAsC,EAAE,2CAA2C;IACnF,+BAA+B,EAAE,oDAAoD;IACrF,4BAA4B,EAAE,sCAAsC;IACpE,kBAAkB,EAAE,wBAAwB;IAC5C,eAAe,EAAE,0BAA0B;IAC3C,8BAA8B,EAAE,iCAAiC;IACjE,+BAA+B,EAAE,uCAAuC;IACxE,cAAc,EAAE,4BAA4B;IAC5C,mCAAmC,EAAE,6BAA6B;IAClE,2BAA2B,EAAE,4CAA4C;IACzE,iBAAiB,EAAE,iCAAiC;IACpD,cAAc,EAAE,qCAAqC;IACrD,WAAW,EAAE,wBAAwB;IACrC,UAAU,EAAE,wCAAwC;IACpD,UAAU,EAAE,wCAAwC;IACpD,UAAU,EAAE,gDAAgD;IAC5D,UAAU,EAAE,qCAAqC;IACjD,WAAW,EAAE,0BAA0B;IACvC,UAAU,EAAE,sCAAsC;IAClD,UAAU,EAAE,oCAAoC;IAChD,OAAO,EAAE,kBAAkB;IAE3B;IACA,oBAAoB,EAAE,4BAA4B;IAClD,UAAU,EAAE,aAAa;IACzB,UAAU,EAAE,sBAAsB;IAClC,wBAAwB,EAAE,iBAAiB;IAC3C,kBAAkB,EAAE,+BAA+B;IACnD,eAAe,EAAE,iCAAiC;IAClD,WAAW,EAAE,aAAa;IAC1B,aAAa,EAAE,wBAAwB;IACvC,mBAAmB,EAAE,yCAAyC;IAC9D,mBAAmB,EAAE,gDAAgD;IACrE,eAAe,EAAE,wBAAwB;IACzC,UAAU,EAAE,eAAe;IAC3B,2DAA2D,EAAE,4CAA4C;IACzG,uDAAuD,EAAE,qCAAqC;IAC9F,0CAA0C,EAAE,mCAAmC;IAC/E,sCAAsC,EAAE,mCAAmC;IAC3E,kCAAkC,EAAE,mCAAmC;IACvE,8BAA8B,EAAE,mCAAmC;IACnE,0BAA0B,EAAE,2BAA2B;IACvD,sBAAsB,EAAE,2BAA2B;IACnD,mBAAmB,EAAE,WAAW;IAChC,uBAAuB,EAAE,4BAA4B;IACrD,uBAAuB,EAAE,qBAAqB;IAC9C,uBAAuB,EAAE,4BAA4B;IACrD,mBAAmB,EAAE,cAAc;IACnC,gCAAgC,EAAE,4BAA4B;IAC9D,4BAA4B,EAAE,4BAA4B;IAC1D,kBAAkB,EAAE,aAAa;IACjC,kBAAkB,EAAE,sBAAsB;IAC1C,eAAe,EAAE,yCAAyC;IAC1D,cAAc,EAAE,kBAAkB;IAClC,WAAW,EAAE,uBAAuB;IACpC,OAAO,EAAE,gBAAgB;IACzB,OAAO,EAAE,gBAAgB;IACzB,OAAO,EAAE,gBAAgB;IACzB,QAAQ,EAAE,oBAAoB;IAC9B,OAAO,EAAE,sBAAsB;IAC/B,OAAO,EAAE,cAAc;IACvB,OAAO,EAAE,WAAW;IACpB,IAAI,EAAE,qBAAqB;IAE3B;IACA,oDAAoD,EAAE,uEAAuE;IAC7H,mDAAmD,EAAE,sEAAsE;IAC3H,+CAA+C,EAAE,oEAAoE;IACrH,2CAA2C,EAAE,6DAA6D;IAC1G,wCAAwC,EAAE,6DAA6D;IACvG,oCAAoC,EAAE,6DAA6D;IACnG,gCAAgC,EAAE,2CAA2C;IAC7E,+BAA+B,EAAE,2CAA2C;IAC5E,oCAAoC,EAAE,sCAAsC;IAC5E,4BAA4B,EAAE,kCAAkC;IAChE,sBAAsB,EAAE,mCAAmC;IAC3D,cAAc,EAAE,uBAAuB;IAGvC;IACA,yBAAyB,EAAE,iDAAiD;IAC5E,0BAA0B,EAAE,yCAAyC;IACrE,6BAA6B,EAAE,2CAA2C;IAC1E,yBAAyB,EAAE,kCAAkC;IAC7D,0BAA0B,EAAE,uDAAuD;IACnF,sBAAsB,EAAE,iCAAiC;IACzD,kBAAkB,EAAE,sBAAsB;IAC1C,cAAc,EAAE,aAAa;IAC7B,YAAY,EAAE,sBAAsB;IACpC,QAAQ,EAAE,aAAa;IAGvB;IACA,UAAU,EAAE,eAAe;IAC3B,OAAO,EAAE,gBAAgB;IACzB,OAAO,EAAE,iBAAiB;IAC1B,OAAO,EAAE,gBAAgB;IACzB,OAAO,EAAE,oBAAoB;IAC7B,QAAQ,EAAE,kBAAkB;IAC5B,OAAO,EAAE,gBAAgB;IACzB,OAAO,EAAE,eAAe;IACxB,OAAO,EAAE,oBAAoB;IAC7B,OAAO,EAAE,eAAe;IAExB;IACA,iCAAiC,EAAE,0CAA0C;IAC7E,6BAA6B,EAAE,gCAAgC;IAC/D,yBAAyB,EAAE,gCAAgC;IAC3D,sCAAsC,EAAE,6BAA6B;IACrE,8BAA8B,EAAE,uCAAuC;IACvE,oBAAoB,EAAE,oCAAoC;IAC1D,oBAAoB,EAAE,kBAAkB;IACxC,qBAAqB,EAAE,qDAAqD;IAC5E,iBAAiB,EAAE,0CAA0C;IAC7D,4BAA4B,EAAE,2DAA2D;IACzF,6BAA6B,EAAE,sDAAsD;IACrF,yBAAyB,EAAE,2CAA2C;IACtE,qBAAqB,EAAE,yBAAyB;IAChD,eAAe,EAAE,yBAAyB;IAC1C,aAAa,EAAE,yBAAyB;IACxC,aAAa,EAAE,cAAc;IAC7B,UAAU,EAAE,gBAAgB;IAC5B,WAAW,EAAE,eAAe;IAC5B,IAAI,EAAE,sBAAsB;IAG5B;IACA,eAAe,EAAE,+BAA+B;IAChD,eAAe,EAAE,8BAA8B;IAC/C,UAAU,EAAE,mCAAmC;IAC/C,OAAO,EAAE,oCAAoC;IAC7C,QAAQ,EAAE,+BAA+B;IACzC,OAAO,EAAE,mCAAmC;IAC5C,OAAO,EAAE,wCAAwC;IACjD,IAAI,EAAE,iBAAiB;IAEvB;IACA,IAAI,EAAE,cAAc;IACpB,IAAI,EAAE,gBAAgB;IACtB,IAAI,EAAE,uBAAuB;IAC7B,KAAK,EAAE,cAAc;IACrB,KAAK,EAAE,eAAe;IACtB,IAAI,EAAE,eAAe;IACrB,KAAK,EAAE,kBAAkB;IACzB,IAAI,EAAE,mBAAmB;IACzB,IAAI,EAAE,gBAAgB;IACtB,IAAI,EAAE,iBAAiB;IACvB,IAAI,EAAE,iBAAiB;IACvB,IAAI,EAAE,qBAAqB;IAC3B,IAAI,EAAE,sBAAsB;IAC5B,OAAO,EAAE,oCAAoC;IAC7C,IAAI,EAAE,gBAAgB;IACtB,OAAO,EAAE,eAAe;IACxB,OAAO,EAAE,iCAAiC;IAC1C,IAAI,EAAE,gBAAgB;IACtB,IAAI,EAAE,2BAA2B;IACjC,IAAI,EAAE,2BAA2B;IACjC,WAAW,EAAE,oCAAoC;IACjD,QAAQ,EAAE,0BAA0B;IACpC,QAAQ,EAAE,yBAAyB;IACnC,KAAK,EAAE;EACX,CAAC;EAED,MAAMC,aAAa,GAAIC,KAAK,IAAK;IAC7B,MAAMC,aAAa,GAAGD,KAAK,CAAClD,IAAI,CAAC,GAAG,CAAC;IACrC,KAAK,MAAMoD,OAAO,IAAIJ,QAAQ,EAAE;MAC5B,IAAIG,aAAa,CAACE,UAAU,CAACD,OAAO,CAAC,EAAE;QACnC,OAAOJ,QAAQ,CAACI,OAAO,CAAC;MAC5B;IACJ;IACA,OAAO,iBAAiB,CAAC,CAAC;EAC9B,CAAC;EAED,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5BpH,aAAa,CAAC,IAAI,CAAC;IACnBC,YAAY,CAAC,KAAK,CAAC;IACnBP,eAAe,CAAC,EAAE,CAAC;IACnBS,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;IACtBE,iBAAiB,CAAC,CAAC,CAAC;IACpB,IAAIsC,KAAK,GAAG,EAAE;IACd,MAAM;MAAEQ,QAAQ;MAAEC,YAAY;MAAEC,UAAU;MAAEC;IAAW,CAAC,GAAGzE,YAAY,IAAI;MACvEsE,QAAQ,EAAE,IAAI;MACdC,YAAY,EAAE;QAAEI,MAAM,EAAE,IAAI;QAAEE,KAAK,EAAE,IAAI;QAAEC,KAAK,EAAE,IAAI;QAAEC,SAAS,EAAE;MAAK,CAAC;MACzEP,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE;IAChB,CAAC;IACD,IAAG;MAAC,IAAIlF,WAAW,KAAK,SAAS,EAAE;QAE/B,MAAMgG,IAAI,GAAG,MAAMnB,iBAAiB,CAACnF,YAAY,EAAEqF,QAAQ,EAAEC,YAAY,EAAEC,UAAU,EAAEC,UAAU,EAAEvF,aAAa,CAAC;QACjH4E,KAAK,GAAGyB,IAAI;MAChB,CAAC,MAAM,IAAIhG,WAAW,KAAK,UAAU,EAAE;QACnC,MAAMgG,IAAI,GAAG,MAAMkB,kBAAkB,CAACxH,YAAY,EAAEqF,QAAQ,EAAEC,YAAY,EAAEC,UAAU,EAAEC,UAAU,EAAEvF,aAAa,CAAC;QAClH4E,KAAK,GAAGyB,IAAI,CAACxB,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACwE,GAAG,CAAC,CAAC,CAAC;MACxC,CAAC,MAAM;QACH1E,KAAK,GAAGpF,aAAa;MACzB;MAEAgC,aAAa,CAACoD,KAAK,CAACI,MAAM,CAAC;MAC3BuE,YAAY,CAAC3E,KAAK,CAAC;IAAC,CAAC,CACrB,OAAM2D,KAAK,EAAE;MACTzF,OAAO,CAACyF,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCxJ,kBAAkB,CAAC,uBAAuB,CAAC;IAC/C;EACA,CAAC;EAKL,MAAMwK,YAAY,GAAI3E,KAAK,IAAK;IAC5B9B,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IACdd,aAAa,CAAC,IAAI,CAAC;IAEnB,MAAMuH,SAAS,GAAG,EAAE;IACpB,MAAMC,QAAQ,GAAG,EAAE;IACnB,MAAMC,SAAS,GAAG,EAAE;IACpB,MAAMC,SAAS,GAAG,EAAE;IACpB,MAAMC,UAAU,GAAG,EAAE;IACrB,MAAMC,QAAQ,GAAG,EAAE;IACnB,MAAMC,YAAY,GAAG,EAAE;IACvB,MAAMC,YAAY,GAAG,EAAE;IACvB,MAAMC,WAAW,GAAG,EAAE;IACtB,MAAMC,eAAe,GAAG,EAAE;IAC1B,MAAMC,SAAS,GAAG,EAAE;IACpB,MAAMC,OAAO,GAAG,EAAE;IAClB,MAAMC,KAAK,GAAG,IAAIvL,KAAK,CAAC,CAAC;IACzBiE,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IACd,MAAMsH,cAAc,GAAGvJ,YAAY,GAAGA,YAAY,CAACuJ,cAAc,GAAG,GAAG,CAAC,CAAC;IACzE,IAAIC,YAAY,GAAG,CAAC,CAAC;IAIrB1F,KAAK,CAAC2F,OAAO,CAAC,CAACzF,IAAI,EAAE0F,KAAK,KAAK;MAC3B,IAAI1F,IAAI,EAAC;QACTsF,KAAK,CAACK,OAAO,CAAC3F,IAAI,CAAC;QACnBsF,KAAK,CAACM,cAAc,CAAC,CAAC;QACtB,IAAIzB,KAAK,GAAGmB,KAAK,CAACO,OAAO,CAAC,CAAC;QAC3BT,SAAS,CAACxE,IAAI,CAACuD,KAAK,CAAC;QACrB,MAAME,OAAO,GAAGH,aAAa,CAACC,KAAK,CAAC;QACpC,MAAMzE,MAAM,GAAG4F,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC;QAEvC,IAAI,CAACN,YAAY,CAACnB,OAAO,CAAC,EAAE;UACxBmB,YAAY,CAACnB,OAAO,CAAC,GAAG;YAAE0B,QAAQ,EAAE,CAAC;YAAEC,IAAI,EAAE,CAAC;YAAEC,MAAM,EAAE,CAAC;YAAEC,KAAK,EAAE;UAAE,CAAC;QACvE;QACA;QACAV,YAAY,CAACnB,OAAO,CAAC,CAAC0B,QAAQ,IAAI,CAAC;QACnC,IAAKrG,MAAM,KAAK,KAAK,GAAIxE,aAAa,IAAE,OAAQ,EAAE;UAChDsK,YAAY,CAACnB,OAAO,CAAC,CAAC2B,IAAI,IAAI,CAAC;UAC/BR,YAAY,CAACnB,OAAO,CAAC,CAAC6B,KAAK,IAAI,CAAC;QACpC,CAAC,MAAM,IAAKxG,MAAM,KAAK,KAAK,GAAIxE,aAAa,IAAE,OAAQ,EAAE;UACrDsK,YAAY,CAACnB,OAAO,CAAC,CAAC4B,MAAM,IAAI,CAAC;QACrC,CAAC,MAAM,IAAKvG,MAAM,KAAK,KAAK,GAAIxE,aAAa,IAAE,OAAQ,EAAE;UACrDsK,YAAY,CAACnB,OAAO,CAAC,CAAC2B,IAAI,IAAI,CAAC;UAC/BR,YAAY,CAACnB,OAAO,CAAC,CAAC6B,KAAK,IAAI,CAAC;QACpC,CAAC,MAAM,IAAKxG,MAAM,KAAK,KAAK,GAAIxE,aAAa,IAAE,OAAQ,EAAE;UACrDsK,YAAY,CAACnB,OAAO,CAAC,CAAC4B,MAAM,IAAI,CAAC;QACrC,CAAC,MAAM,IAAIvG,MAAM,KAAK,SAAS,EAAE;UAC7B8F,YAAY,CAACnB,OAAO,CAAC,CAAC8B,KAAK,IAAI,CAAC;UAChCX,YAAY,CAACnB,OAAO,CAAC,CAAC6B,KAAK,IAAI,GAAG;QACtC;;QAGE;QACA1I,iBAAiB,CAAC4I,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;QACnC9I,eAAe,CAAC;UAAC,GAAGkI;QAAY,CAAC,CAAC;QAEpC,MAAMa,OAAO,GAAG,EAAE;QAClB,IAAIC,QAAQ,GAAGC,MAAM,CAACpC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;QACrCkC,OAAO,CAACzF,IAAI,CAAC0F,QAAQ,CAAC;QAEtBjB,OAAO,CAACzE,IAAI,CAAC0E,KAAK,CAACd,GAAG,CAAC,CAAC,CAAC;QACzBE,SAAS,CAAC9D,IAAI,CAAC0E,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACvCnB,QAAQ,CAAC/D,IAAI,CAAC0E,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACrClB,SAAS,CAAChE,IAAI,CAAC0E,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACvCjB,SAAS,CAACjE,IAAI,CAAC0E,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACvChB,UAAU,CAAClE,IAAI,CAAC0E,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QACzCf,QAAQ,CAACnE,IAAI,CAAC0E,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACrCd,YAAY,CAACpE,IAAI,CAAC0E,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;QAC7Cb,YAAY,CAACrE,IAAI,CAAC0E,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;QAE7C,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,IAAIA,CAAC,GAAGrC,KAAK,CAACjE,MAAM,EAAEsG,CAAC,EAAE,EAAE;UAC7CF,QAAQ,IAAIC,MAAM,CAACpC,KAAK,CAACqC,CAAC,CAAC,CAAC,GAAG,GAAG;UAClCH,OAAO,CAACzF,IAAI,CAAC0F,QAAQ,CAAC;QAC1B;QACApB,WAAW,CAACtE,IAAI,CAACyF,OAAO,CAAC;MAC7B;MAAC;IACL,CAAC,CAAC;IAEFjJ,YAAY,CAAC,IAAI,CAAC;IACdN,aAAa,CAACuI,OAAO,CAAC,CAAC,CAAC;;IAExB,KAAK,IAAIoB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC1BtB,eAAe,CAACvE,IAAI,CAAC,MAAM,GAAG2F,MAAM,CAACE,CAAC,CAAC,CAAC;IAC5C;IACAzI,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IAEd,MAAMyI,SAAS,GAAGxB,WAAW,CAACnF,GAAG,CAAC,CAAC4G,GAAG,EAAEjB,KAAK,MAAM;MAC/C,GAAGiB,GAAG,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,EAAEN,CAAC,MAAM;QAAE,GAAGK,GAAG;QAAE,CAAC1B,eAAe,CAACqB,CAAC,CAAC,GAAGM;MAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC3EC,KAAK,EAAErC,SAAS,CAACgB,KAAK,CAAC;MACvBsB,IAAI,EAAErC,QAAQ,CAACe,KAAK,CAAC;MACrBuB,KAAK,EAAErC,SAAS,CAACc,KAAK,CAAC;MACvBwB,KAAK,EAAErC,SAAS,CAACa,KAAK,CAAC;MACvByB,YAAY,EAAErC,UAAU,CAACY,KAAK,CAAC,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC;MACjD5D,IAAI,EAAEiD,QAAQ,CAACW,KAAK,CAAC;MACrB0B,QAAQ,EAAEpC,YAAY,CAACU,KAAK,CAAC;MAC7B2B,QAAQ,EAAEpC,YAAY,CAACS,KAAK,CAAC;MAC7B4B,GAAG,EAAEjC,OAAO,CAACK,KAAK,CAAC;MACnB6B,MAAM,EAAE7B;IACZ,CAAC,CAAC,CAAC;IACH1H,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBD,OAAO,CAACC,GAAG,CAACyI,SAAS,CAAC;IACtB1I,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IAEd,MAAMuJ,UAAU,GAAGd,SAAS,CAACxK,MAAM,CAACyK,GAAG,IAAIA,GAAG,CAACzL,aAAa,CAAC,KAAKD,YAAY,CAAC;IAE/E,MAAMwM,SAAS,GAAGD,UAAU,CAACZ,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAK;MAC9CE,GAAG,CAACF,GAAG,CAACe,KAAK,CAAC,GAAG,CAACb,GAAG,CAACF,GAAG,CAACe,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;MAC1C,OAAOb,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;IACN,MAAMc,UAAU,GAAGH,UAAU,CAACtH,MAAM;IAEpCsH,UAAU,CAAC/B,OAAO,CAACkB,GAAG,IAAI;MACtBA,GAAG,CAACiB,gBAAgB,GAAGH,SAAS,CAACd,GAAG,CAACe,KAAK,CAAC,GAAGC,UAAU;IAC5D,CAAC,CAAC;IAEF,KAAK,IAAInB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MACzBgB,UAAU,CAAC/B,OAAO,CAACkB,GAAG,IAAI;QACtBA,GAAG,CAAE,cAAaH,CAAC,GAAG,CAAE,EAAC,CAAC,GAAGG,GAAG,CAACQ,YAAY;MACjD,CAAC,CAAC;MAEF,MAAMU,QAAQ,GAAGL,UAAU,CAACZ,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAK;QAC7C,MAAMmB,GAAG,GAAI,GAAEnB,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAE,IAAGG,GAAG,CAAE,OAAMH,CAAC,GAAG,CAAE,EAAC,CAAE,EAAC;QACvDK,GAAG,CAACiB,GAAG,CAAC,GAAG,CAACjB,GAAG,CAACiB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QAC9B,OAAOjB,GAAG;MACd,CAAC,EAAE,CAAC,CAAC,CAAC;MAEN,MAAMkB,SAAS,GAAGP,UAAU,CAACZ,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAK;QAC9CE,GAAG,CAACF,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAC,CAAC,GAAG,CAACK,GAAG,CAACF,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;QACtD,OAAOK,GAAG;MACd,CAAC,EAAE,CAAC,CAAC,CAAC;MAENW,UAAU,CAAC/B,OAAO,CAACkB,GAAG,IAAI;QACtB,MAAMmB,GAAG,GAAI,GAAEnB,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAE,IAAGG,GAAG,CAAE,OAAMH,CAAC,GAAG,CAAE,EAAC,CAAE,EAAC;QACvDG,GAAG,CAAE,kBAAiBH,CAAC,GAAG,CAAE,EAAC,CAAC,GAAGqB,QAAQ,CAACC,GAAG,CAAC,GAAGC,SAAS,CAACpB,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAC,CAAC;MAC/E,CAAC,CAAC;IACN;IACAxI,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzBD,OAAO,CAACC,GAAG,CAACuJ,UAAU,CAAC;IAEvBA,UAAU,CAAC/B,OAAO,CAACkB,GAAG,IAAI;MACtB,IAAIqB,EAAE,GAAG,CAAC;MACV,IAAIC,EAAE,GAAG,CAAC;MACV,KAAK,IAAIzB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC1B,IAAIA,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;UACbwB,EAAE,IAAIrB,GAAG,CAAE,kBAAiBH,CAAE,EAAC,CAAC,IAAI,CAAC;QACzC,CAAC,MAAM;UACHyB,EAAE,IAAItB,GAAG,CAAE,kBAAiBH,CAAE,EAAC,CAAC,IAAI,CAAC;QACzC;QACAG,GAAG,CAAE,qBAAoBH,CAAE,EAAC,CAAC,GAAGwB,EAAE;QAClCrB,GAAG,CAAE,qBAAoBH,CAAE,EAAC,CAAC,GAAGyB,EAAE;MACtC;IACJ,CAAC,CAAC;IACFjK,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzBD,OAAO,CAACC,GAAG,CAACuJ,UAAU,CAAC;IACvBxJ,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IAEd,MAAMiK,MAAM,GAAG,EAAE;IACjBV,UAAU,CAAC/B,OAAO,CAACkB,GAAG,IAAI;MACtB,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC1B0B,MAAM,CAACtH,IAAI,CAAC;UACR2G,MAAM,EAAEZ,GAAG,CAACY,MAAM;UAClBY,GAAG,EAAE3B,CAAC;UACN4B,IAAI,EAAEzB,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAC;UACrB6B,IAAI,EAAE1B,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAC;UACrB8B,WAAW,EAAE3B,GAAG,CAAE,cAAaH,CAAE,EAAC,CAAC;UACnC+B,eAAe,EAAE5B,GAAG,CAAE,kBAAiBH,CAAE,EAAC,CAAC;UAC3CgC,gBAAgB,EAAE7B,GAAG,CAAE,qBAAoBH,CAAE,EAAC,CAAC;UAC/CiC,gBAAgB,EAAE9B,GAAG,CAAE,qBAAoBH,CAAE,EAAC,CAAC;UAC/Cc,GAAG,EAAEX,GAAG,CAACW;QACb,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;IACFtJ,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrBD,OAAO,CAACC,GAAG,CAACiK,MAAM,CAAC;;IAEnB;IACA,MAAMQ,UAAU,GAAGR,MAAM,CAACtB,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAK;MAC3CE,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,GAAG,CAACvB,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;MACxC,OAAOvB,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;IAENqB,MAAM,CAACzC,OAAO,CAACkB,GAAG,IAAI;MAClBA,GAAG,CAAC,QAAQ,CAAC,GAAG+B,UAAU,CAAC/B,GAAG,CAACyB,IAAI,CAAC;IACxC,CAAC,CAAC;IACF,MAAMO,eAAe,GAAGT,MAAM,CAAChM,MAAM,CAACyK,GAAG,IACpCzL,aAAa,KAAK,OAAO,IAAIyL,GAAG,CAAC8B,gBAAgB,GAAGlD,cAAc,IAClErK,aAAa,KAAK,OAAO,IAAIyL,GAAG,CAAC6B,gBAAgB,GAAGjD,cACzD,CAAC;;IAED;IACA;IACA,IAAIqD,QAAQ,GAAG,CAAC,CAAC,CAAC;IAClB,IAAIzN,cAAc,KAAK,cAAc,EAAE;MACnCyN,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACnB,UAAU,GAAG,EAAE,CAAC;IACzC,CAAC,MAAM,IAAIxM,cAAc,KAAK,aAAa,EAAE;MACzCyN,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACnB,UAAU,GAAG,EAAE,CAAC;IACzC;IACA3J,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvBD,OAAO,CAACC,GAAG,CAAC2K,QAAQ,CAAC;;IAErB;IACA,MAAMG,sBAAsB,GAAGJ,eAAe,CAACzM,MAAM,CAACyK,GAAG,IAAIA,GAAG,CAACyB,IAAI,KAAKY,SAAS,IAAIrC,GAAG,CAAC,QAAQ,CAAC,GAAGiC,QAAQ,CAAC;IAChH5K,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrCD,OAAO,CAACC,GAAG,CAAC8K,sBAAsB,CAAC;IACnC,MAAME,cAAc,GAAGF,sBAAsB,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACjB,GAAG,GAAGgB,CAAC,CAAChB,GAAG,CAAC;IAC3EnK,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BD,OAAO,CAACC,GAAG,CAACgL,cAAc,CAAC;IAE3B,MAAMI,gBAAgB,GAAGN,sBAAsB,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAChB,IAAI,CAAClI,MAAM,GAAGiJ,CAAC,CAACf,IAAI,CAAClI,MAAM,CAAC;IAC7FlC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BD,OAAO,CAACC,GAAG,CAACoL,gBAAgB,CAAC;;IAE7B;IACA,IAAIC,cAAc,GAAG,IAAI;;IAEzB;IACA,MAAMC,eAAe,GAAGF,gBAAgB,CAACnN,MAAM,CAACyK,GAAG,IAAI;MACnD,IAAG2C,cAAc,CAACE,QAAQ,CAAE,IAAI,GAAC7C,GAAG,CAACyB,IAAI,CAAC,EAAC;QACvCkB,cAAc,IAAI3C,GAAG,CAACyB,IAAI;QAC1BkB,cAAc,IAAI,IAAI;QACtB,OAAO,KAAK;MAAC,CAAC,MACd;QACAA,cAAc,IAAI3C,GAAG,CAACyB,IAAI;QAC1BkB,cAAc,IAAI,IAAI;QACtB,OAAO,IAAI;MACf;IACJ,CAAC,CAAC;IACFtL,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IAEdD,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9BD,OAAO,CAACC,GAAG,CAACsL,eAAe,CAAC;IAE5B,MAAME,aAAa,GAAGF,eAAe,CAAC3C,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAK;MACvD,IAAI,CAACE,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,EAAE;QAChBvB,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,GAAG;UACZA,IAAI,EAAEzB,GAAG,CAACyB,IAAI;UACdC,IAAI,EAAE,CAACqB,KAAK,CAAC/C,GAAG,CAAC0B,IAAI,CAAC,GAAG1B,GAAG,CAAC0B,IAAI,GAAG,CAACsB,QAAQ;UAC7CxB,GAAG,EAAExB,GAAG,CAACwB,GAAG;UACZG,WAAW,EAAE3B,GAAG,CAAC2B,WAAW;UAC5BG,gBAAgB,EAAE9B,GAAG,CAAC8B,gBAAgB;UACtCD,gBAAgB,EAAE7B,GAAG,CAAC6B,gBAAgB;UACtCjB,MAAM,EAAEZ,GAAG,CAACY,MAAM;UAClBqC,OAAO,EAAE,CAACjD,GAAG,CAACY,MAAM;QACxB,CAAC;MACL,CAAC,MAAM;QACHV,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACC,IAAI,GAAGQ,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACC,IAAI,EAAE,CAACqB,KAAK,CAAC/C,GAAG,CAAC0B,IAAI,CAAC,GAAG1B,GAAG,CAAC0B,IAAI,GAAG,CAACsB,QAAQ,CAAC;QAC1F9C,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACD,GAAG,GAAGU,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACD,GAAG,EAAExB,GAAG,CAACwB,GAAG,CAAC;QACxDtB,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACE,WAAW,GAAGO,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACE,WAAW,EAAE3B,GAAG,CAAC2B,WAAW,CAAC;QAChFzB,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACK,gBAAgB,GAAGI,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACK,gBAAgB,EAAE9B,GAAG,CAAC8B,gBAAgB,CAAC;QAC/F5B,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACI,gBAAgB,GAAGK,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACI,gBAAgB,EAAE7B,GAAG,CAAC6B,gBAAgB,CAAC;QAC/F3B,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACb,MAAM,GAAGsB,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACb,MAAM,EAAEZ,GAAG,CAACY,MAAM,CAAC;QACjEV,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACwB,OAAO,CAAChJ,IAAI,CAAC+F,GAAG,CAACY,MAAM,CAAC;MAC1C;MACA,OAAOV,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEN;IACAiD,MAAM,CAACC,MAAM,CAACN,aAAa,CAAC,CAAChE,OAAO,CAACkB,GAAG,IAAI;MACxC,IAAIA,GAAG,CAAC0B,IAAI,KAAK,CAACsB,QAAQ,EAAE;QACxBhD,GAAG,CAAC0B,IAAI,GAAG2B,GAAG;MAClB;IACJ,CAAC,CAAC;IACFhM,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5BD,OAAO,CAACC,GAAG,CAACwL,aAAa,CAAC;;IAE1B;IACA,MAAMQ,aAAa,GAAGH,MAAM,CAACC,MAAM,CAACN,aAAa,CAAC;IAClD,MAAMS,YAAY,GAAGD,aAAa,CAACf,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC9C,IAAIlO,aAAa,KAAK,OAAO,EAAE;QAC3B,OAAOkO,CAAC,CAACf,IAAI,GAAGc,CAAC,CAACd,IAAI;MAC1B,CAAC,MAAM;QACH,OAAOc,CAAC,CAACd,IAAI,GAAGe,CAAC,CAACf,IAAI;MAC1B;IACJ,CAAC,CAAC;;IAEF;IACA6B,YAAY,CAACzE,OAAO,CAACkB,GAAG,IAAI;MACxB,IAAIzL,aAAa,KAAK,OAAO,EAAE;QAC3ByL,GAAG,CAACwD,eAAe,GAAGxD,GAAG,CAAC8B,gBAAgB;QAC1C,OAAO9B,GAAG,CAAC6B,gBAAgB;QAC3B,OAAO7B,GAAG,CAAC8B,gBAAgB;MAC/B,CAAC,MAAM;QACH9B,GAAG,CAACwD,eAAe,GAAGxD,GAAG,CAAC6B,gBAAgB;QAC1C,OAAO7B,GAAG,CAAC8B,gBAAgB;QAC3B,OAAO9B,GAAG,CAAC6B,gBAAgB;MAC/B;IACJ,CAAC,CAAC;IAEFxK,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BD,OAAO,CAACC,GAAG,CAACiM,YAAY,CAAC;IAEzB,MAAME,gBAAgB,GAAGC,eAAe,CAACH,YAAY,EAAEhP,aAAa,CAAC;IACrE2B,eAAe,CAACuN,gBAAgB,CAAC;IAEjC,MAAMvP,WAAW,GAAGyP,eAAe,CAAClF,SAAS,CAAC;IAC9CxI,cAAc,CAAC/B,WAAW,CAAC;IAE3B0P,wBAAwB,CAACL,YAAY,EAAE7E,OAAO,CAAC,CAAC,CAAC;EACrD,CAAC;EAED,MAAMmF,WAAW,GAAGV,MAAM,CAACW,OAAO,CAAChP,YAAY,CAAC,CAACyN,IAAI,CAAC,CAAC,GAAGC,CAAC,CAAC,EAAE,GAAGC,CAAC,CAAC,KAAKA,CAAC,CAACrD,QAAQ,GAAGoD,CAAC,CAACpD,QAAQ,CAAC;EAGhG,MAAMwE,wBAAwB,GAAG,MAAAA,CAAOG,gBAAgB,EAAErF,OAAO,KAAK;IAClE,MAAMC,KAAK,GAAG,IAAIvL,KAAK,CAAC,CAAC;IACzB,MAAM4Q,cAAc,GAAG,EAAE;IACzB,MAAMC,MAAM,GAAG/B,IAAI,CAACgB,GAAG,CAAC,GAAGa,gBAAgB,CAAC3K,GAAG,CAAC4G,GAAG,IAAIA,GAAG,CAACwB,GAAG,CAAC,CAAC;IAChEnK,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrBD,OAAO,CAACC,GAAG,CAAC2M,MAAM,CAAC;IAEnB,MAAMC,aAAa,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACJ,gBAAgB,CAAC3K,GAAG,CAAC4G,GAAG,IAAIA,GAAG,CAACY,MAAM,CAAC,CAAC,CAAC;IAC3EvJ,OAAO,CAACC,GAAG,CAAC4M,aAAa,CAAC;IAC1B,KAAK,IAAIE,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAG1F,OAAO,CAACnF,MAAM,EAAE6K,MAAM,EAAE,EAAE;MACpD,IAAIF,aAAa,CAACrB,QAAQ,CAACuB,MAAM,CAAC,EAAE;QAChC,MAAMvG,GAAG,GAAGa,OAAO,CAAC0F,MAAM,CAAC,CAAC,CAAC;QAC7BzF,KAAK,CAACK,OAAO,CAACnB,GAAG,CAAC;QAClB,MAAMwG,MAAM,GAAG,IAAIjR,KAAK,CAAC,CAAC;QAC1BiR,MAAM,CAACrF,OAAO,CAACnB,GAAG,CAAC;QACnBwG,MAAM,CAACC,IAAI,CAAC,0DAA0D,EAAE;UAAEC,eAAe,EAAE;QAAK,CAAC,CAAC;QAClG,MAAM/G,KAAK,GAAGmB,KAAK,CAACO,OAAO,CAAC,CAAC;QAE7B,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoE,MAAM,IAAIpE,CAAC,GAAGrC,KAAK,CAACjE,MAAM,EAAEsG,CAAC,EAAE,EAAE;UACjDwE,MAAM,CAACG,IAAI,CAAChH,KAAK,CAACqC,CAAC,CAAC,CAAC;UACrB,MAAM4E,GAAG,GAAGJ,MAAM,CAACI,GAAG,CAAC,CAAC;UACxB,MAAMC,cAAc,GAAG,MAAMC,gBAAgB,CAACF,GAAG,CAAC;UAClD,MAAMG,UAAU,GAAG/E,CAAC,GAAC,CAAC,IAAE,CAAC,GAACD,MAAM,CAACiF,UAAU,CAACH,cAAc,CAAC,GAAE,CAAC,CAAE,CAAC,GAAC9E,MAAM,CAACiF,UAAU,CAACH,cAAc,CAAC,CAAC;UAEpGL,MAAM,CAACS,UAAU,CAACF,UAAU,CAAC;QACjC;QAEAZ,cAAc,CAAC/J,IAAI,CAACoK,MAAM,CAACxG,GAAG,CAAC,CAAC,CAAC;MACrC,CAAC,MAAM;QACHmG,cAAc,CAAC/J,IAAI,CAACyE,OAAO,CAAC0F,MAAM,CAAC,CAAC;MACxC;IAEJ;IAEAW,qBAAqB,CAACf,cAAc,EAAEC,MAAM,CAAC;IAC7CzN,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,MAAMuO,qBAAqB,GAAGA,CAACC,aAAa,EAAEf,MAAM,KAAK;IACrD,MAAMtF,KAAK,GAAG,IAAIvL,KAAK,CAAC,CAAC;IACzB,MAAMqL,SAAS,GAAG,EAAE;IACpB,MAAMF,WAAW,GAAG,EAAE;IACtB,MAAMR,SAAS,GAAG,EAAE;IACpB,MAAMC,QAAQ,GAAG,EAAE;IACnB,MAAMC,SAAS,GAAG,EAAE;IACpB,MAAMC,SAAS,GAAG,EAAE;IACpB,MAAMC,UAAU,GAAG,EAAE;IACrB,MAAMC,QAAQ,GAAG,EAAE;IACnB,MAAMC,YAAY,GAAG,EAAE;IACvB,MAAMC,YAAY,GAAG,EAAE;IACvB,MAAME,eAAe,GAAG,EAAE;IAC1BG,KAAK,CAACK,OAAO,CAACgG,aAAa,CAAC,CAAC,CAAC,CAAC;IAG/BA,aAAa,CAAClG,OAAO,CAAC,CAACjB,GAAG,EAAEkB,KAAK,KAAK;MAClC1H,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;MAClBD,OAAO,CAACC,GAAG,CAACuG,GAAG,CAAC;MAChB,IAAG;QACHc,KAAK,CAACK,OAAO,CAACnB,GAAG,CAAC;QAClBxG,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;QAChB,IAAIkG,KAAK,GAAGmB,KAAK,CAACO,OAAO,CAAC,CAAC;QAC3B7H,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;QAEhBmH,SAAS,CAACxE,IAAI,CAACuD,KAAK,CAAC;QACrBnG,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;QAChB,MAAM2N,gBAAgB,GAAGtG,KAAK,CAACuG,WAAW,CAAC,CAAC;QAC5C,MAAMC,QAAQ,GAAGF,gBAAgB,CAAC7L,GAAG,CAACgM,IAAI,IAAIA,IAAI,CAACC,OAAO,CAAC;QAE3D,MAAM3F,OAAO,GAAG,EAAE;QAClB,IAAIC,QAAQ,GAAGC,MAAM,CAACpC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;QACrCkC,OAAO,CAACzF,IAAI,CAAC0F,QAAQ,CAAC;QACtBD,OAAO,CAACzF,IAAI,CAAC4K,UAAU,CAACM,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAErCpH,SAAS,CAAC9D,IAAI,CAAC0E,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACvCnB,QAAQ,CAAC/D,IAAI,CAAC0E,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACrClB,SAAS,CAAChE,IAAI,CAAC0E,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACvCjB,SAAS,CAACjE,IAAI,CAAC0E,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACvChB,UAAU,CAAClE,IAAI,CAAC0E,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QACzCf,QAAQ,CAACnE,IAAI,CAAC0E,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACrCd,YAAY,CAACpE,IAAI,CAAC0E,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;QAC7Cb,YAAY,CAACrE,IAAI,CAAC0E,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;QAE7C,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoE,MAAM,IAAIpE,CAAC,GAAGrC,KAAK,CAACjE,MAAM,EAAEsG,CAAC,EAAE,EAAE;UACjDF,QAAQ,IAAIC,MAAM,CAACpC,KAAK,CAACqC,CAAC,CAAC,CAAC,GAAG,GAAG;UAClCH,OAAO,CAACzF,IAAI,CAAC0F,QAAQ,CAAC;UACtBD,OAAO,CAACzF,IAAI,CAAC4K,UAAU,CAACM,QAAQ,CAACtF,CAAC,CAAC,CAAC,CAAC;QACzC;QACAtB,WAAW,CAACtE,IAAI,CAACyF,OAAO,CAAC;MAC7B,CAAC,QAAM5C,KAAK,EAAC;QACTyB,WAAW,CAACtE,IAAI,CAAC,EAAE,CAAC;QACpB8D,SAAS,CAAC9D,IAAI,CAAC,EAAE,CAAC;QAClB+D,QAAQ,CAAC/D,IAAI,CAAC,EAAE,CAAC;QACjBgE,SAAS,CAAChE,IAAI,CAAC,EAAE,CAAC;QAClBiE,SAAS,CAACjE,IAAI,CAAC,EAAE,CAAC;QAClBkE,UAAU,CAAClE,IAAI,CAAC,EAAE,CAAC;QACnBmE,QAAQ,CAACnE,IAAI,CAAC,EAAE,CAAC;QACjBoE,YAAY,CAACpE,IAAI,CAAC,EAAE,CAAC;QACrBqE,YAAY,CAACrE,IAAI,CAAC,EAAE,CAAC;MAAC;IAC1B,CAAC,CAAC;IAEF5C,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1BD,OAAO,CAACC,GAAG,CAACiH,WAAW,CAAC;IACxBlH,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1BD,OAAO,CAACC,GAAG,CAACiH,WAAW,CAAC;IAExB,KAAK,IAAIuB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAImE,MAAM,EAAEnE,CAAC,EAAE,EAAE;MAC9BtB,eAAe,CAACvE,IAAI,CAAC,MAAM,GAAG2F,MAAM,CAACE,CAAC,CAAC,CAAC;MACxCtB,eAAe,CAACvE,IAAI,CAAC,MAAM,GAAG2F,MAAM,CAACE,CAAC,CAAC,CAAC;IAC5C;IAEA,MAAMC,SAAS,GAAGxB,WAAW,CAACnF,GAAG,CAAC,CAAC4G,GAAG,EAAEjB,KAAK,MAAM;MAC/C,GAAGiB,GAAG,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,EAAEN,CAAC,MAAM;QAAE,GAAGK,GAAG;QAAE,CAAC1B,eAAe,CAACqB,CAAC,CAAC,GAAGM;MAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC3EC,KAAK,EAAErC,SAAS,CAACgB,KAAK,CAAC;MACvBsB,IAAI,EAAErC,QAAQ,CAACe,KAAK,CAAC;MACrBuB,KAAK,EAAErC,SAAS,CAACc,KAAK,CAAC;MACvBwB,KAAK,EAAErC,SAAS,CAACa,KAAK,CAAC;MACvByB,YAAY,EAAErC,UAAU,CAACY,KAAK,CAAC,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC;MACjD5D,IAAI,EAAEiD,QAAQ,CAACW,KAAK,CAAC;MACrB0B,QAAQ,EAAEpC,YAAY,CAACU,KAAK,CAAC;MAC7B2B,QAAQ,EAAEpC,YAAY,CAACS,KAAK,CAAC;MAC7B6B,MAAM,EAAE7B;IACZ,CAAC,CAAC,CAAC;IAEH1H,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBD,OAAO,CAACC,GAAG,CAACyI,SAAS,CAAC;IAEtB,MAAMc,UAAU,GAAGd,SAAS,CAACxK,MAAM,CAACyK,GAAG,IAAIA,GAAG,CAACzL,aAAa,CAAC,KAAKD,YAAY,CAAC;IAE/E,MAAMwM,SAAS,GAAGD,UAAU,CAACZ,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAK;MAC9CE,GAAG,CAACF,GAAG,CAACe,KAAK,CAAC,GAAG,CAACb,GAAG,CAACF,GAAG,CAACe,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;MAC1C,OAAOb,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;IACN,MAAMc,UAAU,GAAGH,UAAU,CAACtH,MAAM;IAEpCsH,UAAU,CAAC/B,OAAO,CAACkB,GAAG,IAAI;MACtBA,GAAG,CAACiB,gBAAgB,GAAGH,SAAS,CAACd,GAAG,CAACe,KAAK,CAAC,GAAGC,UAAU;IAC5D,CAAC,CAAC;IAEF,KAAK,IAAInB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoE,MAAM,EAAEpE,CAAC,EAAE,EAAE;MAC7BgB,UAAU,CAAC/B,OAAO,CAACkB,GAAG,IAAI;QACtBA,GAAG,CAAE,cAAaH,CAAC,GAAG,CAAE,EAAC,CAAC,GAAGG,GAAG,CAACQ,YAAY;MACjD,CAAC,CAAC;MAEF,MAAMU,QAAQ,GAAGL,UAAU,CAACZ,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAK;QAC7C,MAAMmB,GAAG,GAAI,GAAEnB,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAE,IAAGG,GAAG,CAAE,OAAMH,CAAC,GAAG,CAAE,EAAC,CAAE,EAAC;QACvDK,GAAG,CAACiB,GAAG,CAAC,GAAG,CAACjB,GAAG,CAACiB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QAC9B,OAAOjB,GAAG;MACd,CAAC,EAAE,CAAC,CAAC,CAAC;MAEN,MAAMkB,SAAS,GAAGP,UAAU,CAACZ,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAK;QAC9CE,GAAG,CAACF,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAC,CAAC,GAAG,CAACK,GAAG,CAACF,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;QACtD,OAAOK,GAAG;MACd,CAAC,EAAE,CAAC,CAAC,CAAC;MAENW,UAAU,CAAC/B,OAAO,CAACkB,GAAG,IAAI;QACtB,MAAMmB,GAAG,GAAI,GAAEnB,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAE,IAAGG,GAAG,CAAE,OAAMH,CAAC,GAAG,CAAE,EAAC,CAAE,EAAC;QACvDG,GAAG,CAAE,kBAAiBH,CAAC,GAAG,CAAE,EAAC,CAAC,GAAGqB,QAAQ,CAACC,GAAG,CAAC,GAAGC,SAAS,CAACpB,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAC,CAAC;MAC/E,CAAC,CAAC;IACN;IAEAgB,UAAU,CAAC/B,OAAO,CAACkB,GAAG,IAAI;MACtB,IAAIqB,EAAE,GAAG,CAAC;MACV,IAAIC,EAAE,GAAG,CAAC;MACV,KAAK,IAAIzB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIoE,MAAM,EAAEpE,CAAC,EAAE,EAAE;QAC9B,IAAIA,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;UACbwB,EAAE,IAAIrB,GAAG,CAAE,kBAAiBH,CAAE,EAAC,CAAC,IAAI,CAAC;QACzC,CAAC,MAAM;UACHyB,EAAE,IAAItB,GAAG,CAAE,kBAAiBH,CAAE,EAAC,CAAC,IAAI,CAAC;QACzC;QACAG,GAAG,CAAE,qBAAoBH,CAAE,EAAC,CAAC,GAAGwB,EAAE;QAClCrB,GAAG,CAAE,qBAAoBH,CAAE,EAAC,CAAC,GAAGyB,EAAE;MACtC;IACJ,CAAC,CAAC;IAEF,MAAMC,MAAM,GAAG,EAAE;IACjBV,UAAU,CAAC/B,OAAO,CAACkB,GAAG,IAAI;MACtB,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIoE,MAAM,EAAEpE,CAAC,EAAE,EAAE;QAC9B0B,MAAM,CAACtH,IAAI,CAAC;UACR2G,MAAM,EAAEZ,GAAG,CAACY,MAAM;UAClBY,GAAG,EAAE3B,CAAC;UACN4B,IAAI,EAAEzB,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAC;UACrB6B,IAAI,EAAE1B,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAC;UACrB8B,WAAW,EAAE3B,GAAG,CAAE,cAAaH,CAAE,EAAC,CAAC;UACnC+B,eAAe,EAAE5B,GAAG,CAAE,kBAAiBH,CAAE,EAAC,CAAC;UAC3CgC,gBAAgB,EAAE7B,GAAG,CAAE,qBAAoBH,CAAE,EAAC,CAAC;UAC/CiC,gBAAgB,EAAE9B,GAAG,CAAE,qBAAoBH,CAAE,EAAC,CAAC;UAC/Cc,GAAG,EAAEX,GAAG,CAACW;QACb,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;IAEFtJ,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrBD,OAAO,CAACC,GAAG,CAACiK,MAAM,CAAC;;IAEnB;IACA,MAAMQ,UAAU,GAAGR,MAAM,CAACtB,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAK;MAC3CE,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,GAAG,CAACvB,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;MACxC,OAAOvB,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;IAENqB,MAAM,CAACzC,OAAO,CAACkB,GAAG,IAAI;MAClBA,GAAG,CAAC,QAAQ,CAAC,GAAG+B,UAAU,CAAC/B,GAAG,CAACyB,IAAI,CAAC;IACxC,CAAC,CAAC;;IAEF;IACA,IAAIQ,QAAQ,GAAG,CAAC,CAAC,CAAC;IAClB,IAAIzN,cAAc,KAAK,cAAc,EAAE;MACnCyN,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACnB,UAAU,GAAG,EAAE,CAAC;IACzC,CAAC,MAAM,IAAIxM,cAAc,KAAK,aAAa,EAAE;MACzCyN,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACnB,UAAU,GAAG,EAAE,CAAC;IACzC;IACA3J,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvBD,OAAO,CAACC,GAAG,CAAC2K,QAAQ,CAAC;;IAErB;IACA,MAAMG,sBAAsB,GAAGb,MAAM,CAAChM,MAAM,CAACyK,GAAG,IAAIA,GAAG,CAAC,QAAQ,CAAC,GAAGiC,QAAQ,CAAC;IAC7E5K,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrCD,OAAO,CAACC,GAAG,CAAC8K,sBAAsB,CAAC;IACnC,MAAME,cAAc,GAAGF,sBAAsB,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACjB,GAAG,GAAGgB,CAAC,CAAChB,GAAG,CAAC;IAC3EnK,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BD,OAAO,CAACC,GAAG,CAACgL,cAAc,CAAC;IAE3B,MAAMQ,aAAa,GAAGR,cAAc,CAACrC,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAK;MACtD,IAAI,CAACE,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,EAAE;QAChBvB,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,GAAG;UACZA,IAAI,EAAEzB,GAAG,CAACyB,IAAI;UACdC,IAAI,EAAE,CAACqB,KAAK,CAAC/C,GAAG,CAAC0B,IAAI,CAAC,GAAG1B,GAAG,CAAC0B,IAAI,GAAG,CAACsB,QAAQ;UAC7CxB,GAAG,EAAExB,GAAG,CAACwB,GAAG;UACZG,WAAW,EAAE3B,GAAG,CAAC2B,WAAW;UAC5BG,gBAAgB,EAAE9B,GAAG,CAAC8B,gBAAgB;UACtCD,gBAAgB,EAAE7B,GAAG,CAAC6B,gBAAgB;UACtCoB,OAAO,EAAE,CAACjD,GAAG,CAACY,MAAM;QACxB,CAAC;MACL,CAAC,MAAM;QACHV,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACC,IAAI,GAAGQ,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACC,IAAI,EAAE,CAACqB,KAAK,CAAC/C,GAAG,CAAC0B,IAAI,CAAC,GAAG1B,GAAG,CAAC0B,IAAI,GAAG,CAACsB,QAAQ,CAAC;QAC1F9C,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACD,GAAG,GAAGU,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACD,GAAG,EAAExB,GAAG,CAACwB,GAAG,CAAC;QACxDtB,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACE,WAAW,GAAGO,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACE,WAAW,EAAE3B,GAAG,CAAC2B,WAAW,CAAC;QAChFzB,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACK,gBAAgB,GAAGI,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACK,gBAAgB,EAAE9B,GAAG,CAAC8B,gBAAgB,CAAC;QAC/F5B,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACI,gBAAgB,GAAGK,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACI,gBAAgB,EAAE7B,GAAG,CAAC6B,gBAAgB,CAAC;QAC/F3B,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACwB,OAAO,CAAChJ,IAAI,CAAC+F,GAAG,CAACY,MAAM,CAAC;MAC1C;MACA,OAAOV,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEN;IACAiD,MAAM,CAACC,MAAM,CAACN,aAAa,CAAC,CAAChE,OAAO,CAACkB,GAAG,IAAI;MACxC,IAAIA,GAAG,CAAC0B,IAAI,KAAK,CAACsB,QAAQ,EAAE;QACxBhD,GAAG,CAAC0B,IAAI,GAAG2B,GAAG;MAClB;IACJ,CAAC,CAAC;IAEFhM,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5BD,OAAO,CAACC,GAAG,CAACwL,aAAa,CAAC;;IAE1B;IACA,MAAMQ,aAAa,GAAGH,MAAM,CAACC,MAAM,CAACN,aAAa,CAAC;IAClD,MAAMS,YAAY,GAAGD,aAAa,CAACf,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC9C,IAAIlO,aAAa,KAAK,OAAO,EAAE;QAC3B,OAAOkO,CAAC,CAACf,IAAI,GAAGc,CAAC,CAACd,IAAI;MAC1B,CAAC,MAAM;QACH,OAAOc,CAAC,CAACd,IAAI,GAAGe,CAAC,CAACf,IAAI;MAC1B;IACJ,CAAC,CAAC;;IAEF;IACA6B,YAAY,CAACzE,OAAO,CAACkB,GAAG,IAAI;MACxB,IAAIzL,aAAa,KAAK,OAAO,EAAE;QAC3ByL,GAAG,CAACwD,eAAe,GAAGxD,GAAG,CAAC8B,gBAAgB;QAC1C,OAAO9B,GAAG,CAAC6B,gBAAgB;QAC3B,OAAO7B,GAAG,CAAC8B,gBAAgB;MAC/B,CAAC,MAAM;QACH9B,GAAG,CAACwD,eAAe,GAAGxD,GAAG,CAAC6B,gBAAgB;QAC1C,OAAO7B,GAAG,CAAC8B,gBAAgB;QAC3B,OAAO9B,GAAG,CAAC6B,gBAAgB;MAC/B;IACJ,CAAC,CAAC;IAEFxK,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BD,OAAO,CAACC,GAAG,CAACiM,YAAY,CAAC;IAG7B,MAAM+B,SAAS,GAAG/B,YAAY,CAAChO,MAAM,CAACyK,GAAG,IAAIA,GAAG,CAACyB,IAAI,KAAKY,SAAS,CAAC;IACpEhL,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACpBD,OAAO,CAACC,GAAG,CAACgO,SAAS,CAAC;IAEtB,IAAIC,YAAY,GAAG,IAAI;IACvB,IAAIC,eAAe,GAAG,IAAI;IAC9B,MAAM5C,eAAe,GAAG0C,SAAS,CAAC/P,MAAM,CAACyK,GAAG,IAAI;MAC5C,MAAMyF,OAAO,GAAG,EAAE;MAClB,MAAMC,SAAS,GAAG1F,GAAG,CAACyB,IAAI,CAACxI,KAAK,CAAC,GAAG,CAAC,CAAC1D,MAAM,CAAC2D,OAAO,CAAC;;MAE7D;MACQ;MACA,IAAIsM,eAAe,CAAC3C,QAAQ,CAAC,IAAI,GAAG7C,GAAG,CAACyB,IAAI,GAAE,IAAI,CAAC,EAAE;QAC7C,OAAO,KAAK;MAChB;;MAIJ;MACA;;MAEA;MACA,KAAK,IAAI5B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI6F,SAAS,CAACnM,MAAM,EAAEsG,CAAC,EAAE,EAAE;QACxC,MAAM8F,MAAM,GAAGD,SAAS,CAACjK,KAAK,CAAC,CAAC,EAAEoE,CAAC,CAAC,CAACvF,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG;QACpD,IAAIiL,YAAY,CAAC1C,QAAQ,CAAC,IAAI,GAAG8C,MAAM,GAAE,IAAI,CAAC,EAAE;UAC5C,OAAO,KAAK;QAChB;QACAH,eAAe,IAAIG,MAAM,GAAG,IAAI;MACxC;MAAC;MACGJ,YAAY,IAAIvF,GAAG,CAACyB,IAAI,GAAE,IAAI;MAC9B,OAAO,IAAI;IACf,CAAC,CAAC;IAEFpK,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9BD,OAAO,CAACC,GAAG,CAACsL,eAAe,CAAC;IAExB,MAAMa,gBAAgB,GAAGC,eAAe,CAACd,eAAe,EAAErO,aAAa,CAAC;IACxE2B,eAAe,CAACuN,gBAAgB,CAAC;IAEjC,MAAMvP,WAAW,GAAGyP,eAAe,CAAClF,SAAS,CAAC;IAC9CxI,cAAc,CAAC/B,WAAW,CAAC;IAC3BsC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;EAC1B,CAAC;EACD,MAAMmO,gBAAgB,GAAIF,GAAG,IAAK;IAC9B,OAAO,IAAImB,OAAO,CAAEC,OAAO,IAAK;MAC5B3N,SAAS,CAACE,WAAW,CAAE,gBAAeqM,GAAI,EAAC,CAAC;MAC5CvM,SAAS,CAACE,WAAW,CAAC,aAAa,CAAC;MAEpCF,SAAS,CAAC4N,SAAS,GAAIxN,KAAK,IAAK;QAC7B,MAAMyN,IAAI,GAAGzN,KAAK,CAACsC,IAAI;QACvB,MAAMoL,UAAU,GAAGD,IAAI,CAAC9K,KAAK,CAAC,aAAa,CAAC;QAC5C,MAAMgL,SAAS,GAAGF,IAAI,CAAC9K,KAAK,CAAC,kBAAkB,CAAC;QAEhD,IAAI+K,UAAU,IAAIC,SAAS,EAAE;UACzB,MAAMC,KAAK,GAAGC,QAAQ,CAACH,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;UACzC,IAAIE,KAAK,KAAK,EAAE,EAAE;YACd,MAAMtB,UAAU,GAAG,CAACuB,QAAQ,CAACF,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,EAAEG,OAAO,CAAC,CAAC,CAAC;YAChEP,OAAO,CAACjB,UAAU,CAAC;UACvB;QACJ;MACJ,CAAC;IACL,CAAC,CAAC;EACN,CAAC;EACD;EACF,MAAMyB,YAAY,GAAGA,CAAA,KAAM;IACzB5P,YAAY,CAAC6P,aAAa,IAAI,CAACA,aAAa,CAAC;EAC/C,CAAC;EAEC,MAAMC,oBAAoB,GAAGA,CAACC,OAAO,EAAE9H,OAAO,KAAK;IAC/C,OAAO8H,OAAO,CAACpN,GAAG,CAACqN,EAAE,IAAI/H,OAAO,CAAC+H,EAAE,CAAC,CAAC,CAACnM,IAAI,CAAC,MAAM,CAAC;EACtD,CAAC;EAED,MAAMoM,eAAe,GAAIF,OAAO,IAAK;IACjC,MAAMG,WAAW,GAAGJ,oBAAoB,CAACC,OAAO,EAAEpS,UAAU,CAAC;;IAE7D;IACAyB,YAAY,CAACiC,OAAO,CAAC,aAAa,EAAE6O,WAAW,CAAC;;IAEhD;IACA9Q,YAAY,CAACoC,UAAU,CAAC,eAAe,CAAC;;IAExC;IACApE,MAAM,CAAC+S,QAAQ,CAACC,IAAI,GAAG,iBAAiB;EAC5C,CAAC;EAID,MAAMnD,eAAe,GAAGA,CAACoD,WAAW,EAAEvS,aAAa,KAAK;IACpD,OAAOuS,WAAW,CAAC1N,GAAG,CAAC4G,GAAG,IAAI;MAC1B,MAAM+G,UAAU,GAAG,MAAM;MACzB,MAAMnC,UAAU,GAAG5E,GAAG,CAAC+G,UAAU,CAAC;MAElC,IAAIxS,aAAa,KAAK,OAAO,EAAE;QAC3B,IAAIqQ,UAAU,IAAI,CAAC,EAAE;UACjB5E,GAAG,CAACgH,WAAW,GAAG,eAAe;QACrC,CAAC,MAAM,IAAIpC,UAAU,IAAI,GAAG,EAAE;UAC1B5E,GAAG,CAACgH,WAAW,GAAG,eAAe;QACrC,CAAC,MAAM,IAAIpC,UAAU,IAAI,GAAG,EAAE;UAC1B5E,GAAG,CAACgH,WAAW,GAAG,mBAAmB;QACzC,CAAC,MAAM;UACHhH,GAAG,CAACgH,WAAW,GAAG,MAAM;QAC5B;MACJ,CAAC,MAAM;QACH,IAAIpC,UAAU,IAAI,CAAC,GAAG,EAAE;UACpB5E,GAAG,CAACgH,WAAW,GAAG,eAAe;QACrC,CAAC,MAAM,IAAIpC,UAAU,IAAI,CAAC,GAAG,EAAE;UAC3B5E,GAAG,CAACgH,WAAW,GAAG,eAAe;QACrC,CAAC,MAAM,IAAIpC,UAAU,IAAI,CAAC,GAAG,EAAE;UAC3B5E,GAAG,CAACgH,WAAW,GAAG,mBAAmB;QACzC,CAAC,MAAM;UACHhH,GAAG,CAACgH,WAAW,GAAG,MAAM;QAC5B;MACJ;MAEA,OAAOhH,GAAG;IACd,CAAC,CAAC,CAACzK,MAAM,CAACyK,GAAG,IAAIA,GAAG,CAACgH,WAAW,KAAK,MAAM,IAAIhH,GAAG,CAACwD,eAAe,GAAG,GAAG,CAAC;EAC7E,CAAC;EAED,MAAMG,eAAe,GAAIlF,SAAS,IAAK;IACnC,MAAMsD,UAAU,GAAG,CAAC,CAAC;IAErBtD,SAAS,CAACK,OAAO,CAACtB,KAAK,IAAI;MACvBA,KAAK,CAACsB,OAAO,CAAC,CAAC0F,IAAI,EAAEzF,KAAK,KAAK;QAC3B,MAAMgH,IAAI,GAAGvI,KAAK,CAAC/B,KAAK,CAAC,CAAC,EAAEsD,KAAK,GAAG,CAAC,CAAC,CAACzE,IAAI,CAAC,GAAG,CAAC;QAChD,IAAI,CAACyH,UAAU,CAACgE,IAAI,CAAC,EAAE;UACnBhE,UAAU,CAACgE,IAAI,CAAC,GAAG,CAAC;QACxB;QACAhE,UAAU,CAACgE,IAAI,CAAC,EAAE;MACtB,CAAC,CAAC;IACN,CAAC,CAAC;IAEF,MAAMkB,WAAW,GAAG9D,MAAM,CAACW,OAAO,CAAC/B,UAAU,CAAC,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1E,OAAOyE,WAAW,CAACxL,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAClC,CAAC;EAED,MAAMyL,cAAc,GAAIC,QAAQ,IAAK;IACjCzQ,iBAAiB,CAAC/B,cAAc,KAAKwS,QAAQ,GAAG,IAAI,GAAGA,QAAQ,CAAC;EACpE,CAAC;EAEA,MAAMC,sBAAsB,GAAIrB,IAAI,IAAK;IACtC,MAAMvI,KAAK,GAAGuI,IAAI,CAACtE,IAAI,CAACxI,KAAK,CAAC,GAAG,CAAC,CAAC1D,MAAM,CAAC2D,OAAO,CAAC;IAClD,MAAMwE,OAAO,GAAGH,aAAa,CAACC,KAAK,CAAC;IACpC,MAAM6J,cAAc,GAAG7J,KAAK,CAACpE,GAAG,CAAC,CAACoL,IAAI,EAAEzF,KAAK,KAAK;MAC9C,MAAMuI,UAAU,GAAGpF,IAAI,CAACqF,KAAK,CAACxI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;MAC5C,OAAOA,KAAK,GAAG,CAAC,KAAK,CAAC,GAAI,GAAEuI,UAAW,KAAI9C,IAAK,EAAC,GAAI,GAAE8C,UAAW,MAAK9C,IAAK,EAAC;IACjF,CAAC,CAAC,CAAClK,IAAI,CAAC,GAAG,CAAC;IAEZ,OAAQ,GAAEoD,OAAQ,KAAI2J,cAAe,EAAC;EAC1C,CAAC;EAED,oBACI1T,OAAA;IAAK6T,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5B9T,OAAA;MAAA8T,QAAA,eACI9T,OAAA;QAAA8T,QAAA,eACoB9T,OAAA;UAAA8T,QAAA,gBACI9T,OAAA;YACI+T,YAAY,EAAEA,CAAA,KAAMjS,gBAAgB,CAAC,IAAI,CAAE;YAC3CkS,YAAY,EAAEA,CAAA,KAAMlS,gBAAgB,CAAC,KAAK,CAAE;YAAAgS,QAAA,eAE5C9T,OAAA,CAACR,IAAI;cAACyU,EAAE,EAAC,GAAG;cAAAH,QAAA,eACR9T,OAAA;gBAAKkU,GAAG,EAAEhT,aAAa,GAAGrB,SAAS,GAAGD,IAAK;gBAACuU,GAAG,EAAC,MAAM;gBAACC,KAAK,EAAE;kBAAEC,MAAM,EAAE;gBAAO;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,EACJtR,QAAQ,gBACLnD,OAAA;YAAK6T,SAAS,EAAC,uBAAuB;YAAAC,QAAA,eAClC9T,OAAA;cACI6T,SAAS,EAAG,GAAEvQ,cAAc,GAAG,aAAa,GAAG,aAAc,EAAE;cAC/DoR,OAAO,EAAEA,CAAA,KAAMnR,iBAAiB,CAAC,CAACD,cAAc,CAAE;cAAAwQ,QAAA,gBAElD9T,OAAA;gBACI6T,SAAS,EAAC,oBAAoB;gBAC9BO,KAAK,EAAE;kBAEHO,UAAU,EAAE,MAAM;kBAClBC,OAAO,EAAE,WAAW;kBAEpBC,QAAQ,EAAE,MAAM;kBAChBC,KAAK,EAAE;gBACX,CAAE;gBAAAhB,QAAA,EAEL;cAED;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACJnR,cAAc,iBACXtD,OAAA;gBAAA8T,QAAA,gBACI9T,OAAA;kBAAA8T,QAAA,eACI9T,OAAA,CAACR,IAAI;oBACDyU,EAAE,EAAC,mBAAmB;oBACtBJ,SAAS,EAAC,UAAU;oBACpBa,OAAO,EAAEA,CAAA,KAAMnR,iBAAiB,CAAC,KAAK,CAAE;oBAAAuQ,QAAA,EAC3C;kBAED;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACP,CAAC,eACLzU,OAAA;kBAAA8T,QAAA,eACI9T,OAAA,CAACR,IAAI;oBACDyU,EAAE,EAAC,kBAAkB;oBACrBJ,SAAS,EAAC,UAAU;oBACpBa,OAAO,EAAEA,CAAA,KAAMnR,iBAAiB,CAAC,KAAK,CAAE;oBAAAuQ,QAAA,EAC3C;kBAED;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACP,CAAC,eACLzU,OAAA;kBAAA8T,QAAA,eACI9T,OAAA,CAACR,IAAI;oBACDyU,EAAE,EAAC,iBAAiB;oBACpBJ,SAAS,EAAC,UAAU;oBACpBa,OAAO,EAAEA,CAAA,KAAMnR,iBAAiB,CAAC,KAAK,CAAE;oBAAAuQ,QAAA,EAC3C;kBAED;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACP,CAAC,eACLzU,OAAA;kBAAA8T,QAAA,eACI9T,OAAA,CAACR,IAAI;oBACDyU,EAAE,EAAC,WAAW;oBACdJ,SAAS,EAAC,UAAU;oBACpBa,OAAO,EAAEA,CAAA,KAAMnR,iBAAiB,CAAC,KAAK,CAAE;oBAAAuQ,QAAA,EAC3C;kBAED;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACP,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CACP;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,gBAENzU,OAAA;YAAA8T,QAAA,gBACI9T,OAAA;cAAA8T,QAAA,eACI9T,OAAA,CAACR,IAAI;gBAACyU,EAAE,EAAC,mBAAmB;gBAACJ,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAEtD;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC,eACLzU,OAAA;cAAA8T,QAAA,eACI9T,OAAA,CAACR,IAAI;gBAACyU,EAAE,EAAC,kBAAkB;gBAAAH,QAAA,EAAC;cAAe;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC,eACLzU,OAAA;cAAA8T,QAAA,eACI9T,OAAA,CAACR,IAAI;gBAACyU,EAAE,EAAC,iBAAiB;gBAAAH,QAAA,EAAC;cAAc;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC,eACLzU,OAAA;cAAA8T,QAAA,eACI9T,OAAA,CAACR,IAAI;gBAACyU,EAAE,EAAC,WAAW;gBAAAH,QAAA,EAAC;cAAa;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CACP;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACTzU,OAAA;MAAA8T,QAAA,eACI9T,OAAA;QAAS6T,SAAS,EAAC,OAAO;QAAAC,QAAA,gBAC1B9T,OAAA;UAAKoU,KAAK,EAAE;YAAEW,OAAO,EAAE,MAAM;YAAEC,cAAc,EAAE,QAAQ;YAAEC,UAAU,EAAE,QAAQ;YAAEC,QAAQ,EAAE;UAAW,CAAE;UAAApB,QAAA,gBAClH9T,OAAA;YAAI6T,SAAS,EAAC,OAAO;YAACO,KAAK,EAAE;cAAEc,QAAQ,EAAE,UAAU;cAAEC,IAAI,EAAE,KAAK;cAAEC,SAAS,EAAE;YAAmB,CAAE;YAAAtB,QAAA,EAAC;UAAgB;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxHzU,OAAA;YAAGoU,KAAK,EAAE;cAAEiB,SAAS,EAAE,QAAQ;cAAER,QAAQ,EAAE,EAAE;cAAES,UAAU,EAAE;YAAO,CAAE;YAAAxB,QAAA,EAAC;UAAgC;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxG,CAAC,EAEe,CAACnT,kBAAkB,gBAChBtB,OAAA;UAAK6T,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC7B9T,OAAA;YAAQ0U,OAAO,EAAE3M,iBAAkB;YAAC8L,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAC;UAAE;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAErFzU,OAAA;YAAK6T,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC1B9T,OAAA;cAAK6T,SAAS,EAAC,KAAK;cAAAC,QAAA,gBAChB9T,OAAA;gBAAQ6T,SAAS,EAAE5S,WAAW,KAAK,UAAU,GAAG,iBAAiB,GAAG,UAAW;gBAACyT,OAAO,EAAEA,CAAA,KAAMzR,cAAc,CAAC,UAAU,CAAE;gBAAA6Q,QAAA,EAAC;cAAS;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC7IzU,OAAA;gBAAQ6T,SAAS,EAAE5S,WAAW,KAAK,SAAS,GAAG,iBAAiB,GAAG,UAAW;gBAACyT,OAAO,EAAEA,CAAA,KAAMzR,cAAc,CAAC,SAAS,CAAE;gBAAA6Q,QAAA,EAAC;cAAO;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACzIzU,OAAA;gBAAQ6T,SAAS,EAAE5S,WAAW,KAAK,KAAK,GAAG,iBAAiB,GAAG,UAAW;gBAACyT,OAAO,EAAEA,CAAA,KAAMzR,cAAc,CAAC,KAAK,CAAE;gBAAA6Q,QAAA,EAAC;cAAG;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5H,CAAC,eAENzU,OAAA;cAAK6T,SAAS,EAAC,YAAY;cAACO,KAAK,EAAE;gBAAEW,OAAO,EAAE9T,WAAW,KAAK,KAAK,GAAG,OAAO,GAAG;cAAO,CAAE;cAAA6S,QAAA,eACrF9T,OAAA;gBAAK6T,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACvB9T,OAAA;kBAAOuV,IAAI,EAAC,MAAM;kBAACC,QAAQ,EAAE9Q;gBAAiB;kBAAA4P,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACjDzU,OAAA;kBAAOyV,OAAO,EAAC,cAAc;kBAAA3B,QAAA,EAAC;gBAAY;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAClDzU,OAAA;kBACIuV,IAAI,EAAC,MAAM;kBACXzC,EAAE,EAAC,cAAc;kBACjB4C,KAAK,EAAE/U,YAAa;kBACpB6U,QAAQ,EAAGtQ,CAAC,IAAKxC,eAAe,CAACwC,CAAC,CAACL,MAAM,CAAC6Q,KAAK;gBAAE;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpD,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAENzU,OAAA;cAAK6T,SAAS,EAAC,YAAY;cAACO,KAAK,EAAE;gBAAEW,OAAO,EAAE9T,WAAW,KAAK,SAAS,GAAG,OAAO,GAAG;cAAO,CAAE;cAAA6S,QAAA,eACzF9T,OAAA;gBAAK6T,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACvB9T,OAAA;kBAAOyV,OAAO,EAAC,kBAAkB;kBAAA3B,QAAA,EAAC;gBAAgB;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC1DzU,OAAA;kBACIuV,IAAI,EAAC,MAAM;kBACXzC,EAAE,EAAC,kBAAkB;kBACrB4C,KAAK,EAAE/U,YAAa;kBACpB6U,QAAQ,EAAGtQ,CAAC,IAAKxC,eAAe,CAACwC,CAAC,CAACL,MAAM,CAAC6Q,KAAK;gBAAE;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpD,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAENzU,OAAA;cAAK6T,SAAS,EAAC,YAAY;cAACO,KAAK,EAAE;gBAAEW,OAAO,EAAE9T,WAAW,KAAK,UAAU,GAAG,OAAO,GAAG;cAAO,CAAE;cAAA6S,QAAA,eAC1F9T,OAAA;gBAAK6T,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACvB9T,OAAA;kBAAOyV,OAAO,EAAC,kBAAkB;kBAAA3B,QAAA,EAAC;gBAAgB;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC1DzU,OAAA;kBACIuV,IAAI,EAAC,MAAM;kBACXzC,EAAE,EAAC,kBAAkB;kBACrB4C,KAAK,EAAE/U,YAAa;kBACpB6U,QAAQ,EAAGtQ,CAAC,IAAKxC,eAAe,CAACwC,CAAC,CAACL,MAAM,CAAC6Q,KAAK;gBAAE;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpD,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAENzU,OAAA;cAAK6T,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACvB9T,OAAA;gBAAOyV,OAAO,EAAC,eAAe;gBAAA3B,QAAA,EAAC;cAAY;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACnDzU,OAAA;gBACI8S,EAAE,EAAC,eAAe;gBAClB4C,KAAK,EAAE9U,aAAc;gBACrB4U,QAAQ,EAAGtQ,CAAC,IAAKvC,gBAAgB,CAACuC,CAAC,CAACL,MAAM,CAAC6Q,KAAK,CAAE;gBAAA5B,QAAA,gBAElD9T,OAAA;kBAAQ0V,KAAK,EAAC,OAAO;kBAAA5B,QAAA,EAAC;gBAAK;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACpCzU,OAAA;kBAAQ0V,KAAK,EAAC,OAAO;kBAAA5B,QAAA,EAAC;gBAAK;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC,eAINzU,OAAA;cAAQ0U,OAAO,EAAEzK,WAAY;cAAC4J,SAAS,EAAC,aAAa;cAACO,KAAK,EAAE;gBAACuB,SAAS,EAAC,GAAG;gBAAEL,UAAU,EAAC;cAAE,CAAE;cAAAxB,QAAA,EAAC;YAAK;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC3GzU,OAAA;cAAQ0U,OAAO,EAAErQ,WAAY;cAAEwP,SAAS,EAAC,aAAa;cAACO,KAAK,EAAE;gBAACuB,SAAS,EAAC,GAAG;gBAAEL,UAAU,EAAC;cAAE,CAAE;cAAAxB,QAAA,EAAE;YAAK;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5G,CAAC,EACb3T,UAAU;UAAA;UACf;UACAd,OAAA;YAAK6T,SAAS,EAAC,eAAe;YAAAC,QAAA,eAC5B9T,OAAA;cAAKkU,GAAG,EAAE,qEAAsE;cAACC,GAAG,EAAC,eAAe;cAACN,SAAS,EAAC;YAAW;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1H,CAAC;UAAA;UAEN;UACAzU,OAAA;YAAK6T,SAAS,EAAC,cAAc;YAACa,OAAO,EAAEhC,YAAa;YAAAoB,QAAA,eAClD9T,OAAA;cACAkU,GAAG,EAAEpU,UAAY;cACfqU,GAAG,EAAC,aAAa;cACjBN,SAAS,EAAG,cAAa9S,SAAS,GAAG,EAAE,GAAG,QAAS;YAAE;cAAAuT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN,EACc1T,SAAS,IAAIT,cAAc,GAAG,CAAC,iBAC5CN,OAAA;YAAK6T,SAAS,EAAC,iBAAiB;YAAAC,QAAA,eAChC9T,OAAA;cAAO6T,SAAS,EAAC,kBAAkB;cAAAC,QAAA,gBACjC9T,OAAA;gBAAA8T,QAAA,eACE9T,OAAA;kBAAA8T,QAAA,gBACE9T,OAAA;oBAAA8T,QAAA,EAAI;kBAAO;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAChBzU,OAAA;oBAAA8T,QAAA,EAAI;kBAAK;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACdzU,OAAA;oBAAA8T,QAAA,EAAI;kBAAO;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAChBzU,OAAA;oBAAA8T,QAAA,EAAI;kBAAI;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACbzU,OAAA;oBAAA8T,QAAA,EAAI;kBAAM;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACb;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACRzU,OAAA;gBAAA8T,QAAA,EACG5D,WAAW,CAACzK,GAAG,CAAC,CAAC,CAACsE,OAAO,EAAE6L,KAAK,CAAC,EAAExK,KAAK,kBACvCpL,OAAA;kBAAA8T,QAAA,gBACE9T,OAAA;oBAAA8T,QAAA,EAAK/J;kBAAO;oBAAAuK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eAClBzU,OAAA;oBAAA8T,QAAA,EAAK8B,KAAK,CAACnK;kBAAQ;oBAAA6I,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACzBzU,OAAA;oBAAA8T,QAAA,GAAK,CAAE8B,KAAK,CAAChK,KAAK,GAAGgK,KAAK,CAACnK,QAAQ,GAAI,GAAG,EAAEgH,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;kBAAA;oBAAA6B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAC7DzU,OAAA;oBAAA8T,QAAA,EAAK8B,KAAK,CAAClK;kBAAI;oBAAA4I,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACrBzU,OAAA;oBAAA8T,QAAA,EAAK8B,KAAK,CAACjK;kBAAM;oBAAA2I,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC;gBAAA,GALhBrJ,KAAK;kBAAAkJ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAMV,CACL;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG,CAAC,eAERzU,OAAA;gBAAA8T,QAAA,eACF9T,OAAA;kBAAA8T,QAAA,gBACE9T,OAAA;oBAAA8T,QAAA,EAAI;kBAAK;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACdzU,OAAA;oBAAA8T,QAAA,EAAK5D,WAAW,CAAC5D,MAAM,CAAC,CAACuJ,KAAK,EAAE,GAAGD,KAAK,CAAC,KAAKC,KAAK,GAAGD,KAAK,CAACnK,QAAQ,EAAE,CAAC;kBAAC;oBAAA6I,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eAC9EzU,OAAA;oBAAA8T,QAAA,GAAK,CAAE5D,WAAW,CAAC5D,MAAM,CAAC,CAACuJ,KAAK,EAAE,GAAGD,KAAK,CAAC,KAAKC,KAAK,GAAGD,KAAK,CAAChK,KAAK,EAAE,CAAC,CAAC,GAAGsE,WAAW,CAAC5D,MAAM,CAAC,CAACuJ,KAAK,EAAE,GAAGD,KAAK,CAAC,KAAKC,KAAK,GAAGD,KAAK,CAACnK,QAAQ,EAAE,CAAC,CAAC,GAAI,GAAG,EAAEgH,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;kBAAA;oBAAA6B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACvKzU,OAAA;oBAAA8T,QAAA,EAAK5D,WAAW,CAAC5D,MAAM,CAAC,CAACuJ,KAAK,EAAE,GAAGD,KAAK,CAAC,KAAKC,KAAK,GAAGD,KAAK,CAAClK,IAAI,EAAE,CAAC;kBAAC;oBAAA4I,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eAC1EzU,OAAA;oBAAA8T,QAAA,EAAK5D,WAAW,CAAC5D,MAAM,CAAC,CAACuJ,KAAK,EAAE,GAAGD,KAAK,CAAC,KAAKC,KAAK,GAAGD,KAAK,CAACjK,MAAM,EAAE,CAAC;kBAAC;oBAAA2I,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1E;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EAGO1T,SAAS,gBACNf,OAAA;YAAK6T,SAAS,EAAC;UAAc;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,gBAENzU,OAAA;YAAA8T,QAAA,eACA9T,OAAA;cAAK6T,SAAS,EAAC,oBAAoB;cAAAC,QAAA,gBAC/B9T,OAAA;gBAAK6T,SAAS,EAAC,UAAU;gBAAAC,QAAA,gBACrB9T,OAAA;kBAAQ0U,OAAO,EAAEA,CAAA,KAAMnB,cAAc,CAAC,gBAAgB,CAAE;kBAAAO,QAAA,GAAC,mBACpC,EAACtT,YAAY,CAACoB,MAAM,CAACwQ,IAAI,IAAIA,IAAI,CAACiB,WAAW,KAAK,eAAe,CAAC,CAACzN,MAAM,EAAC,GAC/F;gBAAA;kBAAA0O,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACRzT,cAAc,KAAK,gBAAgB,iBAChChB,OAAA;kBAAA8T,QAAA,EACKtT,YAAY,CAACoB,MAAM,CAACwQ,IAAI,IAAIA,IAAI,CAACiB,WAAW,KAAK,eAAe,CAAC,CAAC5N,GAAG,CAAC,CAAC2M,IAAI,EAAEhH,KAAK,kBAC/EpL,OAAA;oBAAgB6T,SAAS,EAAC,WAAW;oBAACa,OAAO,EAAEA,CAAA,KAAM3B,eAAe,CAACX,IAAI,CAAC9C,OAAO,CAAE;oBAAAwE,QAAA,GAClFL,sBAAsB,CAACrB,IAAI,CAAC,eAC7BpS,OAAA;sBAAA8T,QAAA,GAAG,cAAY,EAACvF,IAAI,CAACuH,KAAK,CAAC1D,IAAI,CAACrE,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,EAAC,wBAAsB,EAACQ,IAAI,CAACuH,KAAK,CAAC1D,IAAI,CAACvC,eAAe,GAAG,GAAG,CAAC,EAAC,GAAC;oBAAA;sBAAAyE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAG,CAAC;kBAAA,GAF5GrJ,KAAK;oBAAAkJ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAGd,CACH;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF,CACP;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACNzU,OAAA;gBAAK6T,SAAS,EAAC,UAAU;gBAAAC,QAAA,gBACrB9T,OAAA;kBAAQ0U,OAAO,EAAEA,CAAA,KAAMnB,cAAc,CAAC,gBAAgB,CAAE;kBAAAO,QAAA,GAAC,mBACpC,EAACtT,YAAY,CAACoB,MAAM,CAACwQ,IAAI,IAAIA,IAAI,CAACiB,WAAW,KAAK,eAAe,CAAC,CAACzN,MAAM,EAAC,GAC/F;gBAAA;kBAAA0O,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACRzT,cAAc,KAAK,gBAAgB,iBAChChB,OAAA;kBAAA8T,QAAA,EACKtT,YAAY,CAACoB,MAAM,CAACwQ,IAAI,IAAIA,IAAI,CAACiB,WAAW,KAAK,eAAe,CAAC,CAAC5N,GAAG,CAAC,CAAC2M,IAAI,EAAEhH,KAAK,kBAChFpL,OAAA;oBAAgB6T,SAAS,EAAC,WAAW;oBAACa,OAAO,EAAEA,CAAA,KAAM3B,eAAe,CAACX,IAAI,CAAC9C,OAAO,CAAE;oBAAAwE,QAAA,GAClFL,sBAAsB,CAACrB,IAAI,CAAC,eAC7BpS,OAAA;sBAAA8T,QAAA,GAAG,cAAY,EAACvF,IAAI,CAACuH,KAAK,CAAC1D,IAAI,CAACrE,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,EAAC,wBAAsB,EAACQ,IAAI,CAACuH,KAAK,CAAC1D,IAAI,CAACvC,eAAe,GAAG,GAAG,CAAC,EAAC,GAAC;oBAAA;sBAAAyE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAG,CAAC;kBAAA,GAF5GrJ,KAAK;oBAAAkJ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAGV,CACN;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF,CACP;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACNzU,OAAA;gBAAK6T,SAAS,EAAC,UAAU;gBAAAC,QAAA,gBACrB9T,OAAA;kBAAQ0U,OAAO,EAAEA,CAAA,KAAMnB,cAAc,CAAC,qBAAqB,CAAE;kBAAAO,QAAA,GAAC,wBACpC,EAACtT,YAAY,CAACoB,MAAM,CAACwQ,IAAI,IAAIA,IAAI,CAACiB,WAAW,KAAK,mBAAmB,CAAC,CAACzN,MAAM,EAAC,GACxG;gBAAA;kBAAA0O,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACRzT,cAAc,KAAK,qBAAqB,iBACrChB,OAAA;kBAAA8T,QAAA,EACKtT,YAAY,CAACoB,MAAM,CAACwQ,IAAI,IAAIA,IAAI,CAACiB,WAAW,KAAK,mBAAmB,CAAC,CAAC5N,GAAG,CAAC,CAAC2M,IAAI,EAAEhH,KAAK,kBACpFpL,OAAA;oBAAgB6T,SAAS,EAAC,WAAW;oBAACa,OAAO,EAAEA,CAAA,KAAM3B,eAAe,CAACX,IAAI,CAAC9C,OAAO,CAAE;oBAAAwE,QAAA,GAClFL,sBAAsB,CAACrB,IAAI,CAAC,eAC7BpS,OAAA;sBAAA8T,QAAA,GAAG,cAAY,EAACvF,IAAI,CAACuH,KAAK,CAAC1D,IAAI,CAACrE,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,EAAC,wBAAsB,EAACQ,IAAI,CAACuH,KAAK,CAAC1D,IAAI,CAACvC,eAAe,GAAG,GAAG,CAAC,EAAC,GAAC;oBAAA;sBAAAyE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAG,CAAC;kBAAA,GAF5GrJ,KAAK;oBAAAkJ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAGV,CACN;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF,CACP;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CACR;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,gBAENzU,OAAA,CAACN,cAAc;UAACqW,MAAM,EAAE/N,gBAAiB;UAACgO,QAAQ,EAAE9N;QAAmB;UAAAoM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAC5E;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACPzU,OAAA;MAAA8T,QAAA,eACI9T,OAAA;QAAA8T,QAAA,EAAG;MAAoD;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACpT,EAAA,CA/jDID,eAAe;AAAA6U,EAAA,GAAf7U,eAAe;AAikDrB,eAAeA,eAAe;AAAC,IAAA6U,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}