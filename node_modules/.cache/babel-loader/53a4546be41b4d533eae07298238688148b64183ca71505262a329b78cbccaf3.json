{"ast":null,"code":"var _jsxFileName = \"/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/WeaknessFinder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Chess } from 'chess.js';\nimport AdvancedFilter from './AdvancedFilter'; // Import the new component\nimport './styles.css';\n\n/*\n<div className=\"form-group\">\n<label htmlFor=\"precisionLevel\">Min Flaw Frequency:</label>\n<select\n    id=\"precisionLevel\"\n    value={precisionLevel}\n    onChange={(e) => setPrecisionLevel(e.target.value)}\n>\n    <option value=\"0.5% of Games\">0.5% of Games (5s-30s)</option>\n    <option value=\"0.3% of Games\">0.3% of Games (5s-30s)</option>\n    <option value=\"At Least 1 Game\">At Least 1 Game (5s-30s)</option>\n</select>\n</div>\n\n*/\n// Import both logo images\nimport logo from './checkmatewizard_transparent.png'; // Adjust the path as needed\nimport logoWhite from './checkmatewizard_pure_white.png'; // Adjust the path as needed\nimport rightArrow from './rarrow_white.png'; // Adjust the path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STOCKFISH = window.STOCKFISH;\nconst defaultState = {\n  importedGames: [],\n  gamesCount: 0,\n  gamesProcessed: 0,\n  commonLines: [],\n  filteredData: [],\n  thePgnList: [],\n  previousOutput: \"\",\n  gameURLs: [],\n  // Add this to track game URLs\n  opponentName: '',\n  opponentColor: 'White',\n  precisionLevel: '0.5% of Games',\n  processing: false,\n  showTable: false,\n  activeDropdown: null,\n  inputMethod: 'chesscom',\n  isLogoHovered: false,\n  openingStats: {}\n};\nconst WeaknessFinder = () => {\n  _s();\n  const [showAdvancedFilter, setShowAdvancedFilter] = useState(false);\n  const [filterParams, setFilterParams] = useState(null);\n  const [isLogoHovered, setIsLogoHovered] = useState(defaultState.isLogoHovered);\n  const [importedGames, setImportedGames] = useState(() => JSON.parse(localStorage.getItem('weaknessFinder_importedGames')) || defaultState.importedGames);\n  const [gamesCount, setGamesCount] = useState(() => Number(localStorage.getItem('weaknessFinder_gamesCount')) || defaultState.gamesCount);\n  const [commonLines, setCommonLines] = useState(() => JSON.parse(localStorage.getItem('weaknessFinder_commonLines')) || defaultState.commonLines);\n  const [filteredData, setFilteredData] = useState(() => JSON.parse(localStorage.getItem('weaknessFinder_filteredData')) || defaultState.filteredData);\n  const [thePgnList, setThePgnList] = useState(() => JSON.parse(localStorage.getItem('weaknessFinder_thePgnList')) || defaultState.thePgnList);\n  const [gameURLs, setGameURLs] = useState(() => JSON.parse(localStorage.getItem('weaknessFinder_gameURLs')) || defaultState.gameURLs);\n  const [previousOutput, setPreviousOutput] = useState(defaultState.previousOutput);\n  const [opponentName, setOpponentName] = useState(() => localStorage.getItem('weaknessFinder_opponentName') || defaultState.opponentName);\n  const [opponentColor, setOpponentColor] = useState(() => localStorage.getItem('weaknessFinder_opponentColor') || defaultState.opponentColor);\n  const [precisionLevel, setPrecisionLevel] = useState(() => localStorage.getItem('weaknessFinder_precisionLevel') || defaultState.precisionLevel);\n  const [openingStats, setOpeningStats] = useState(() => JSON.parse(localStorage.getItem('weaknessFinder_openingStats')) || defaultState.openingStats); // Holds stats for each opening\n  const [gamesProcessed, setGamesProcessed] = useState(() => Number(localStorage.getItem('weaknessFinder_gamesProcessed')) || defaultState.gamesProcessed);\n  const [processing, setProcessing] = useState(() => localStorage.getItem('weaknessFinder_processing') || defaultState.processing);\n  const [showTable, setShowTable] = useState(() => localStorage.getItem('weaknessFinder_showTable') || defaultState.showTable);\n  const [activeDropdown, setActiveDropdown] = useState(defaultState.activeDropdown);\n  const [inputMethod, setInputMethod] = useState(() => localStorage.getItem('weaknessFinder_inputMethod') || defaultState.inputMethod);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 1200);\n  // Event listener for window resize\n  useEffect(() => {\n    const handleResize = () => {\n      const isNowMobile = window.innerWidth < 1200;\n      setIsMobile(isNowMobile);\n      if (isNowMobile) {\n        console.log('Applying frozen class');\n        document.body.classList.add('frozen');\n      } else {\n        console.log('Removing frozen class');\n        document.body.classList.remove('frozen');\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('weaknessFinder_importedGames', JSON.stringify(importedGames));\n  }, [importedGames]);\n  useEffect(() => {\n    localStorage.setItem('weaknessFinder_gamesCount', gamesCount);\n  }, [gamesCount]);\n  useEffect(() => {\n    localStorage.setItem('weaknessFinder_commonLines', JSON.stringify(commonLines));\n  }, [commonLines]);\n  useEffect(() => {\n    localStorage.setItem('weaknessFinder_filteredData', JSON.stringify(filteredData));\n  }, [filteredData]);\n  useEffect(() => {\n    localStorage.setItem('weaknessFinder_thePgnList', JSON.stringify(thePgnList));\n  }, [thePgnList]);\n  useEffect(() => {\n    localStorage.setItem('weaknessFinder_opponentName', opponentName);\n  }, [opponentName]);\n  useEffect(() => {\n    localStorage.setItem('weaknessFinder_opponentColor', opponentColor);\n  }, [opponentColor]);\n  useEffect(() => {\n    localStorage.setItem('weaknessFinder_precisionLevel', precisionLevel);\n  }, [precisionLevel]);\n  useEffect(() => {\n    localStorage.setItem('weaknessFinder_inputMethod', inputMethod);\n  }, [inputMethod]);\n  useEffect(() => {\n    localStorage.setItem('gameURLs', JSON.stringify(gameURLs));\n  }, [gameURLs]);\n  useEffect(() => {\n    localStorage.setItem('weaknessFinder_showTable', showTable);\n  }, [showTable]);\n  useEffect(() => {\n    setProcessing(false); // Reset processing when toggling tabs\n  }, [inputMethod]);\n  useEffect(() => {\n    localStorage.setItem('weaknessFinder_gamesProcessed', gamesProcessed);\n  }, [gamesProcessed]);\n  useEffect(() => {\n    localStorage.setItem('weaknessFinder_openingStats', JSON.stringify(openingStats));\n  }, [openingStats]);\n  const handleReset = () => {\n    // Reset state to default values\n    setImportedGames(defaultState.importedGames);\n    setGamesCount(defaultState.gamesCount);\n    setCommonLines(defaultState.commonLines);\n    setFilteredData(defaultState.filteredData);\n    setThePgnList(defaultState.thePgnList);\n    setGameURLs(defaultState.siteList); // Store the URLs for later use\n    setPreviousOutput(defaultState.previousOutput);\n    setOpponentName(defaultState.opponentName);\n    setOpponentColor(defaultState.opponentColor);\n    setPrecisionLevel(defaultState.precisionLevel);\n    setProcessing(defaultState.processing);\n    setActiveDropdown(defaultState.activeDropdown);\n    setInputMethod(defaultState.inputMethod);\n    setOpeningStats(defaultState.openingStats);\n    setGamesProcessed(defaultState.gamesProcessed);\n    setShowTable(defaultState.showTable);\n\n    // Clear localStorage\n    localStorage.removeItem('weaknessFinder_importedGames');\n    localStorage.removeItem('weaknessFinder_gamesCount');\n    localStorage.removeItem('weaknessFinder_commonLines');\n    localStorage.removeItem('weaknessFinder_filteredData');\n    localStorage.removeItem('weaknessFinder_thePgnList');\n    localStorage.removeItem('weaknessFinder_opponentName');\n    localStorage.removeItem('weaknessFinder_opponentColor');\n    localStorage.removeItem('weaknessFinder_precisionLevel');\n    localStorage.removeItem('weaknessFinder_inputMethod');\n    localStorage.removeItem('weaknessFinder_combinedPgn');\n    localStorage.removeItem('weaknessFinder_gamesProcessed');\n    localStorage.removeItem('weaknessFinder_processing');\n    localStorage.removeItem('weaknessFinder_showTable');\n    localStorage.removeItem('weaknessFinder_openingStats');\n  };\n  let stockfish = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(\"stockfish.js\");\n  stockfish.postMessage(\"uci\");\n\n  // This function handles the toggling logic\n  const handleToggle = () => {\n    setShowTable(prevShowTable => !prevShowTable);\n  };\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const fullPgn = e.target.result;\n      let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n      let games = rawGames.map(game => '[Event' + game.trim());\n      setImportedGames(games);\n      setGamesCount(games.length);\n    };\n    reader.readAsText(file);\n  };\n  const openings = {\n    // French Defense\n    \"e4 e6 d4 d5 exd5 exd5 Nc3\": \"French Defense: Exchange, Bogolyubov Variation\",\n    \"e4 e6 d4 d5 exd5 exd5 Bd3\": \"French Defense: Exchange Variation\",\n    \"e4 e6 d4 d5 Nf3\": \"French Defense: Two Knights\",\n    \"e4 e6 d4 d5 Nc3 Bb4\": \"French Defense: Winawer\",\n    \"e4 e6 d4 d5 Nc3 Nf6\": \"French Defense: Winawer Variation\",\n    \"e4 e6 d4 d5 Nc3\": \"French Defense: Classical\",\n    \"e4 e6 d4 d5 Nd2\": \"French Defense: Tarrasch\",\n    \"e4 e6 d4 d5 e5 c5\": \"French Defense: Advance Variation\",\n    \"e4 e6 d4 d5 e5\": \"French Defense: Advance Variation\",\n    \"e4 e6 d4 d5\": \"French Defense: Main Line\",\n    \"e4 e6 Nf3\": \"French Defense: Two Knights\",\n    \"e4 e6 c4\": \"French Defense: Franco-Hiva Gambit\",\n    \"e4 e6 d3\": \"French Defense: King's Indian Attack\",\n    \"e4 e6 d4\": \"French Defense: Advance Variation\",\n    \"e4 e6\": \"French Defense\",\n    // Caro-Kann Defense\n    \"e4 c6 g3\": \"Caro-Kann Defense: Fianchetto Variation\",\n    \"e4 c6 d3\": \"Caro-Kann Defense: King's Indian Attack\",\n    \"e4 c6 Nf3\": \"Caro-Kann Defense: Two Knights\",\n    \"e4 c6 c4\": \"Caro-Kann Defense: Panov-Botvinnik Attack\",\n    \"e4 c6 d4 d5 e5\": \"Caro-Kann Defense: Advance Variation\",\n    \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nf6 Ng5 h6 Nxf7\": \"Caro-Kann Defense: Witty Alien Gambit\",\n    \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nd7 Nf3 Ngf6\": \"Caro-Kann Defense: Smyslov Variation\",\n    \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nd7\": \"Caro-Kann Defense: Karpov Variation\",\n    \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Bf5\": \"Caro-Kann Defense: Tartakower Variation\",\n    \"e4 c6 d4 d5 Nc3 dxe4 Nxe4\": \"Caro-Kann Defense: Classical Variation\",\n    \"e4 c6 d4 d5 Nc3\": \"Caro-Kann Defense: Advance\",\n    \"e4 c6 d4 d5 Nd2\": \"Caro-Kann Defense: Tarrasch\",\n    \"e4 c6 d4 d5 exd5 cxd5 c4\": \"Caro-Kann Defense: Panov-Botvinnik Attack\",\n    \"e4 c6 d4 d5 exd5\": \"Caro-Kann Defense: Exchange\",\n    \"e4 c6 d4 d5\": \"Caro-Kann Defense: Classical\",\n    \"e4 c6 d4\": \"Caro-Kann Defense: Main Line\",\n    \"e4 c6\": \"Caro-Kann Defense\",\n    // Pirc Defense and Modern Defense\n    \"e4 g6 d4 Bg7\": \"Modern Defense: Robatsch Defense\",\n    \"e4 d6 d4 Nf6\": \"Pirc Defense: Classical\",\n    \"e4 g6 d4\": \"Modern Defense\",\n    \"e4 d6 d4\": \"Pirc Defense\",\n    \"e4 g6\": \"Modern Defense\",\n    \"e4 d6\": \"Pirc Defense\",\n    // Scandinavian Defense\n    \"e4 d5 Nf3\": \"Scandinavian Defense: Gambit\",\n    \"e4 d5 exd5\": \"Scandinavian Defense: Main Line\",\n    \"e4 d5\": \"Scandinavian Defense\",\n    // Alekhine's Defense\n    \"e4 Nf6 d3\": \"Alekhine's Defense: King's Indian Attack\",\n    \"e4 Nf6 e5\": \"Alekhine's Defense: Chase Variation\",\n    \"e4 Nf6\": \"Alekhine's Defense\",\n    // Nimzowitsch Defense\n    \"e4 Nc6 d4\": \"Nimzowitsch Defense: Main Line\",\n    \"e4 Nc6\": \"Nimzowitsch Defense\",\n    // Sicilian Defense\n    \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3 a6 Bg5\": \"Sicilian Defense: Najdorf, Main Line\",\n    \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3 a6\": \"Sicilian Defense: Najdorf, English Attack\",\n    \"e4 c5 Nf3 Nc6 d4 cxd4 Nxd4 g6\": \"Sicilian Defense: Accelerated Dragon, Maroczy Bind\",\n    \"e4 c5 Nf3 Nc6 d4 cxd4 Nxd4\": \"Sicilian Defense: Accelerated Dragon\",\n    \"e4 c5 Nf3 Nc6 d4\": \"Sicilian Defense: Open\",\n    \"e4 c5 Nf3 Nc6\": \"Sicilian Defense: Closed\",\n    \"e4 c5 Nf3 e6 d4 cxd4 Nxd4 a6\": \"Sicilian Defense: Kan Variation\",\n    \"e4 c5 Nf3 e6 d4 cxd4 Nxd4 Nc6\": \"Sicilian Defense: Taimanov, Bastrikov\",\n    \"e4 c5 Nf3 e6\": \"Sicilian Defense: Taimanov\",\n    \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3\": \"Sicilian Defense: Classical\",\n    \"e4 c5 Nf3 d6 d4 cxd4 Nxd4\": \"Sicilian Defense: Najdorf Variation, 6.Bg5\",\n    \"e4 c5 Nf3 d6 d4\": \"Sicilian Defense: Open, Najdorf\",\n    \"e4 c5 Nf3 d6\": \"Sicilian Defense: Najdorf Variation\",\n    \"e4 c5 Nf3\": \"Sicilian Defense: Open\",\n    \"e4 c5 d3\": \"Sicilian Defense: King's Indian Attack\",\n    \"e4 c5 g3\": \"Sicilian Defense: Fianchetto Variation\",\n    \"e4 c5 b3\": \"Sicilian Defense: Nimzowitsch-Rossolimo Attack\",\n    \"e4 c5 f4\": \"Sicilian Defense: Grand Prix Attack\",\n    \"e4 c5 Nc3\": \"Sicilian Defense: Closed\",\n    \"e4 c5 d4\": \"Sicilian Defense: Smith-Morra Gambit\",\n    \"e4 c5 c3\": \"Sicilian Defense: Alapin Variation\",\n    \"e4 c5\": \"Sicilian Defense\",\n    // King's Pawn Openings\n    \"e4 e5 d4 exd4 Qxd4\": \"Center Game: Danish Gambit\",\n    \"e4 e5 d4\": \"Center Game\",\n    \"e4 e5 d3\": \"King's Indian Attack\",\n    \"e4 e5 Nf3 Nf6 Nxe5 Nc6\": \"Stafford Gambit\",\n    \"e4 e5 Nc3 Nf6 g3\": \"Vienna Game: Mieses Variation\",\n    \"e4 e5 Nc3 Nf6\": \"Vienna Game: Falkbeer Variation\",\n    \"e4 e5 Nc3\": \"Vienna Game\",\n    \"e4 e5 f4 d6\": \"King's Gambit Declined\",\n    \"e4 e5 f4 exf4 Bc4\": \"King's Gambit Accepted, Bishop's Gambit\",\n    \"e4 e5 f4 exf4 Nf3\": \"King's Gambit Accepted, King's Knight's Gambit\",\n    \"e4 e5 f4 exf4\": \"King's Gambit Accepted\",\n    \"e4 e5 f4\": \"King's Gambit\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1 b5 Bb3 d6 c3 O-O\": \"Ruy Lopez: Closed, Chigorin Defense, 12.d4\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1 b5 Bb3 d6 c3\": \"Ruy Lopez: Closed, Chigorin Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1\": \"Ruy Lopez: Closed, Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7\": \"Ruy Lopez: Closed, Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O\": \"Ruy Lopez: Morphy Defense, Closed\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6\": \"Ruy Lopez: Morphy Defense, Closed\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4\": \"Ruy Lopez: Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6\": \"Ruy Lopez: Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5\": \"Ruy Lopez\",\n    \"e4 e5 Nf3 Nc6 Bc4 Nd4\": \"Blackburne Shilling Gambit\",\n    \"e4 e5 Nf3 Nc6 Bc4 Nf6\": \"Two Knights Defense\",\n    \"e4 e5 Nf3 Nc6 Bc4 Bc5\": \"Italian Game: Giuoco Piano\",\n    \"e4 e5 Nf3 Nc6 Bc4\": \"Italian Game\",\n    \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4 Bc5\": \"Scotch Game: Göring Gambit\",\n    \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4\": \"Scotch Game: Scotch Gambit\",\n    \"e4 e5 Nf3 Nc6 d4\": \"Scotch Game\",\n    \"e4 e5 Nf3 Nc6 d3\": \"King's Indian Attack\",\n    \"e4 e5 Nf3 Nc6\": \"King's Knight Opening: Normal Variation\",\n    \"e4 e5 Nf3 d6\": \"Philidor Defense\",\n    \"e4 e5 Nf3\": \"King's Knight Opening\",\n    \"e4 b5\": \"Polish Defense\",\n    \"e4 b6\": \"Owen's Defense\",\n    \"e4 g6\": \"Modern Defense\",\n    \"e4 Nf6\": \"Alekhine's Defense\",\n    \"e4 d5\": \"Scandinavian Defense\",\n    \"e4 d6\": \"Pirc Defense\",\n    \"e4 e5\": \"Open Game\",\n    \"e4\": \"King's Pawn Opening\",\n    // King's Indian Defense\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O Nbd7\": \"King's Indian Defense: Orthodox Variation, Classical System, 7...Nbd7\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O Nc6\": \"King's Indian Defense: Orthodox Variation, Classical System, 7...Nc6\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O\": \"King's Indian Defense: Orthodox Variation, Classical System, 7.O-O\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2 O-O Nf3\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2 O-O\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2\": \"King's Indian Defense: Orthodox Variation\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 f3\": \"King's Indian Defense: Saemisch Variation\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O\": \"King's Indian Defense: Mar del Plata\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6\": \"King's Indian Defense: Classical\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7\": \"King's Indian Defense: Fianchetto\",\n    \"d4 Nf6 c4 g6\": \"King's Indian Defense\",\n    // Nimzo-Indian Defense\n    \"d4 Nf6 c4 e6 Nc3 Bb4 a3\": \"Nimzo-Indian Defense: Sämisch, Leningrad System\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4 Qb3\": \"Nimzo-Indian Defense: Sämisch Variation\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4 e3 O-O\": \"Nimzo-Indian Defense: Rubinstein, 4...O-O\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4 e3\": \"Nimzo-Indian Defense: Rubinstein\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4 Qc2\": \"Nimzo-Indian Defense: Classical, Capablanca Variation\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4\": \"Nimzo-Indian Defense: Classical\",\n    \"d4 Nf6 c4 e6 Nc3\": \"Nimzo-Indian Defense\",\n    \"d4 Nf6 c4 e6\": \"Indian Game\",\n    \"d4 Nf6 Nf3\": \"King's Indian Attack\",\n    \"d4 Nf6\": \"Indian Game\",\n    // Dutch Defense\n    \"d4 f5 c4\": \"Dutch Defense\",\n    \"d4 c5\": \"Benoni Defense\",\n    \"d4 e6\": \"Horwitz Defense\",\n    \"d4 e5\": \"Englund Gambit\",\n    \"d4 d6\": \"Old Indian Defense\",\n    \"d4 Nc6\": \"Chigorin Defense\",\n    \"d4 g6\": \"Modern Defense\",\n    \"d4 f5\": \"Dutch Defense\",\n    \"d4 d6\": \"Old Indian Defense\",\n    \"d4 f5\": \"Dutch Defense\",\n    // Queen's Gambit\n    \"d4 d5 c4 e6 Nc3 Nf6 Nf3 Be7 Bf4\": \"Queen's Gambit Declined: Harrwitz Attack\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Nf3 Be7\": \"Queen's Gambit Declined: 7.Be7\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Nf3\": \"Queen's Gambit Declined: 6.Nf3\",\n    \"d4 d5 c4 e6 Nc3 c5 cxd5 exd5 Nf3 Nc6\": \"Tarrasch Defense, Main Line\",\n    \"d4 d5 c4 e6 Nc3 c5 cxd5 exd5\": \"Tarrasch Defense, Classical Variation\",\n    \"d4 d5 c4 e6 Nc3 c5\": \"Tarrasch Defense, Closed Variation\",\n    \"d4 d5 c4 e6 Nf3 c5\": \"Tarrasch Defense\",\n    \"d4 d5 c4 e6 Nf3 Nf6\": \"Queen's Gambit Declined: 5.Nf3 Variation, Main Line\",\n    \"d4 d5 c4 e6 Nf3\": \"Queen's Gambit Declined: 5.Nf3 Variation\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Bg5 h6\": \"Queen's Gambit Declined: Orthodox Defense, Lasker Defense\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Bg5 Be7\": \"Queen's Gambit Declined: Orthodox Defense, Main Line\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Bg5\": \"Queen's Gambit Declined: Orthodox Defense\",\n    \"d4 d5 c4 e6 Nc3 Nf6\": \"Queen's Gambit Declined\",\n    \"d4 d5 c4 dxc4\": \"Queen's Gambit Accepted\",\n    \"d4 d5 c4 e6\": \"Queen's Gambit Declined\",\n    \"d4 d5 c4 c6\": \"Slav Defense\",\n    \"d4 d5 c4\": \"Queen's Gambit\",\n    \"d4 d5 Nf3\": \"London System\",\n    \"d4\": \"Queen's Pawn Opening\",\n    // English Opening\n    \"c4 e5 Nc3 Nc6\": \"English Opening: Four Knights\",\n    \"c4 e5 Nc3 Nf6\": \"English Opening: Two Knights\",\n    \"c4 e5 g3\": \"English Opening: Botvinnik System\",\n    \"c4 e5\": \"English Opening: Reversed Sicilian\",\n    \"c4 Nf6\": \"English Opening: Anglo-Indian\",\n    \"c4 g6\": \"English Opening: Botvinnik System\",\n    \"c4 c5\": \"English Opening: Symmetrical Variation\",\n    \"c4\": \"English Opening\",\n    // Reti and Other Openings\n    \"a4\": \"Ware Opening\",\n    \"f3\": \"Barnes Opening\",\n    \"e3\": \"Van't Kruijs Opening\",\n    \"Nh3\": \"Amar Opening\",\n    \"Na3\": \"Sodium Attack\",\n    \"g4\": \"Grob's Attack\",\n    \"Nc3\": \"Van Geet Opening\",\n    \"c3\": \"Saragossa Opening\",\n    \"d3\": \"Mieses Opening\",\n    \"h4\": \"Desprez Opening\",\n    \"h3\": \"Clemenz Opening\",\n    \"a3\": \"Anderssen's Opening\",\n    \"e3\": \"Van 't Kruijs Opening\",\n    \"b4 e5\": \"Polish Opening: Outflank Variation\",\n    \"b4\": \"Polish Opening\",\n    \"f4 e5\": \"From's Gambit\",\n    \"f4 d5\": \"Bird's Opening: Dutch Variation\",\n    \"f4\": \"Bird's Opening\",\n    \"g3\": \"King's Fianchetto Opening\",\n    \"b3\": \"Nimzowitsch-Larsen Attack\",\n    \"Nf3 c5 c4\": \"Reti Opening: King's Indian Attack\",\n    \"Nf3 c5\": \"Reti Opening: Anglo-Slav\",\n    \"Nf3 d5\": \"Reti Opening: Main Line\",\n    \"Nf3\": \"Reti Opening\"\n  };\n  const detectOpening = moves => {\n    const movesSequence = moves.join(\" \");\n    for (const opening in openings) {\n      if (movesSequence.startsWith(opening)) {\n        return openings[opening];\n      }\n    }\n    return \"Unknown Opening\"; // Fallback if the opening is not in the book\n  };\n  const fetchLichessGames = async (username, maxGames = 1000, timeControls, oldestDate, newestDate, opponentColor) => {\n    const timeClasses = [];\n    if (timeControls.bullet) timeClasses.push('bullet');\n    if (timeControls.blitz) timeClasses.push('blitz');\n    if (timeControls.rapid) timeClasses.push('rapid');\n    if (timeControls.classical) timeClasses.push('classical');\n    const timeClassFilter = timeClasses.length > 0 ? `&perfType=${timeClasses.join(',')}` : '';\n    let allFilteredGames = [];\n    let fetchedGamesCount = 0;\n    let currentPage = 1;\n\n    // Fetch games in batches until we get enough games of the correct color\n    while (allFilteredGames.length < maxGames) {\n      const response = await fetch(`https://lichess.org/api/games/user/${username}?max=1000&moves=true&pgnInJson=false&page=${currentPage}${timeClassFilter}`);\n      const data = await response.text();\n\n      // Split and process the games from the fetched data\n      let rawGames = data.split(/\\[Event/gi).filter(Boolean);\n      if (rawGames.length === 0) {\n        // No more games to fetch, break the loop\n        break;\n      }\n\n      // Filter games by color and date\n      let filteredGames = rawGames.map(game => '[Event' + game.trim()).filter(gamePgn => {\n        const dateMatch = gamePgn.match(/\\[Date \"(\\d{4}\\.\\d{2}\\.\\d{2})\"\\]/);\n        const isWithinRange = !dateMatch || (!oldestDate || new Date(dateMatch[1].replace(/\\./g, '-')) >= new Date(oldestDate)) && (!newestDate || new Date(dateMatch[1].replace(/\\./g, '-')) <= new Date(newestDate));\n\n        // Filter by color\n        const whitePlayerMatch = gamePgn.match(/\\[White \"(.*)\"\\]/);\n        const blackPlayerMatch = gamePgn.match(/\\[Black \"(.*)\"\\]/);\n        const isCorrectColor = opponentColor === 'White' && whitePlayerMatch && whitePlayerMatch[1] === username || opponentColor === 'Black' && blackPlayerMatch && blackPlayerMatch[1] === username;\n        return isWithinRange && isCorrectColor;\n      });\n\n      // Add the filtered games to the result array\n      allFilteredGames = allFilteredGames.concat(filteredGames);\n\n      // Stop if we reached or exceeded the desired number of games\n      if (allFilteredGames.length >= maxGames) {\n        allFilteredGames = allFilteredGames.slice(0, maxGames); // Trim to the exact number of games\n        break;\n      }\n\n      // Increment page and continue fetching\n      currentPage++;\n      fetchedGamesCount += rawGames.length;\n    }\n    return allFilteredGames;\n  };\n  const fetchChessComGames = async (username, maxGames = 1000, timeControls, oldestDate, newestDate, opponentColor) => {\n    const fetchGamesBatch = async archiveUrl => {\n      try {\n        const response = await fetch(archiveUrl);\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Error fetching data: ${response.statusText} - ${errorText}`);\n        }\n        const data = await response.json();\n        const filteredGames = data.games.filter(game => {\n          // Check for matching time control\n          const isCorrectTimeClass = timeControls.bullet && game.time_class === 'bullet' || timeControls.blitz && game.time_class === 'blitz' || timeControls.rapid && game.time_class === 'rapid' || timeControls.classical && game.time_class === 'classical';\n\n          // Check for matching color\n          const isCorrectColor = opponentColor === 'White' && game.white.username === username || opponentColor === 'Black' && game.black.username === username;\n\n          // Check for date range\n          const gameDate = new Date(game.end_time * 1000); // Convert Unix timestamp to JS Date\n          const isWithinDateRange = (!oldestDate || gameDate >= new Date(oldestDate)) && (!newestDate || gameDate <= new Date(newestDate));\n          return isCorrectTimeClass && isCorrectColor && isWithinDateRange;\n        });\n        return filteredGames;\n      } catch (error) {\n        console.error('Error fetching games batch:', error.message);\n        return []; // Return an empty array if there's an error\n      }\n    };\n    try {\n      const archivesResponse = await fetch(`https://api.chess.com/pub/player/${username}/games/archives`);\n      if (!archivesResponse.ok) {\n        const errorText = await archivesResponse.text();\n        throw new Error(`Error fetching archives: ${archivesResponse.statusText} - ${errorText}`);\n      }\n      const archivesData = await archivesResponse.json();\n      const archives = archivesData.archives.reverse(); // Reverse to start from the most recent\n\n      const results = [];\n      for (let archiveUrl of archives) {\n        if (results.length >= maxGames) break;\n        const games = await fetchGamesBatch(archiveUrl);\n        results.push(...games);\n        if (results.length >= maxGames) {\n          results.length = maxGames; // Trim to the maxGames limit\n          break;\n        }\n      }\n      return results;\n    } catch (error) {\n      console.error('Error fetching games from Chess.com:', error.message);\n      throw error;\n    }\n  };\n  function displayErrorBanner(message) {\n    console.log(2);\n    // Clear any existing banners first\n    const existingBanners = document.querySelectorAll('.error-banner');\n    existingBanners.forEach(banner => banner.remove());\n    console.log(3);\n    // Create and style banner\n    const banner = document.createElement('div');\n    banner.className = 'error-banner';\n    banner.style.cssText = `\n            position: fixed;\n            top: 0;\n            left: 0;\n            right: 0;\n            background: #ff4444;\n            color: white;\n            padding: 15px;\n            text-align: center;\n            z-index: 10000;\n            font-size: 16px;\n            font-weight: bold;\n            animation: slideIn 0.3s ease-out;\n        `;\n    console.log(4);\n\n    // Add keyframe animation\n    const style = document.createElement('style');\n    style.textContent = `\n            @keyframes slideIn {\n                0% { transform: translateY(-100%); }\n                100% { transform: translateY(0); }\n            }\n        `;\n    document.head.appendChild(style);\n    banner.innerHTML = `<p>${message}</p>`;\n    document.body.prepend(banner);\n\n    // Reload after 3 seconds\n    setTimeout(() => {\n      banner.remove();\n      style.remove();\n      window.location.reload();\n    }, 3000);\n  }\n  ;\n  const handleStart = async () => {\n    setProcessing(true);\n    setShowTable(false);\n    setFilteredData([]);\n    setOpeningStats({}); // Holds stats for each opening\n    setGamesProcessed(0);\n    let games = [];\n    const {\n      maxGames,\n      timeControls,\n      oldestDate,\n      newestDate\n    } = filterParams || {\n      maxGames: 1000,\n      timeControls: {\n        bullet: true,\n        blitz: true,\n        rapid: true,\n        classical: true\n      },\n      oldestDate: null,\n      newestDate: null\n    };\n    try {\n      if (inputMethod === 'lichess') {\n        const data = await fetchLichessGames(opponentName, maxGames, timeControls, oldestDate, newestDate, opponentColor);\n        games = data;\n      } else if (inputMethod === 'chesscom') {\n        const data = await fetchChessComGames(opponentName, maxGames, timeControls, oldestDate, newestDate, opponentColor);\n        games = data.map(game => game.pgn); // Map the results to PGN format\n      } else {\n        games = importedGames;\n      }\n      setGamesCount(games.length);\n      processGames(games);\n    } catch (error) {\n      console.error(\"Search error:\", error);\n      console.log(1);\n      displayErrorBanner('ERROR: Invalid Search');\n      // Remove window.location.reload() from here\n    }\n  };\n  const toggleDropdown = dropdown => {\n    setActiveDropdown(activeDropdown === dropdown ? null : dropdown);\n  };\n  const createPgnFromGameIDs = (gameIDs, pgnList) => {\n    // Ensure each PGN game is properly formatted\n    const combinedPgn = gameIDs.map(id => {\n      const gamePgn = pgnList[id];\n      if (gamePgn) {\n        // Ensure that the game has all required headers and follows the PGN structure\n        if (!gamePgn.includes('[Event')) {\n          console.error(`Missing [Event] tag for game with ID ${id}`);\n          return ''; // Skip invalid games\n        }\n        return gamePgn.trim(); // Clean up any extra spaces around the PGN\n      } else {\n        return '';\n      }\n    }).filter(Boolean).join('\\n\\n'); // Join games with a double newline separating them\n\n    return combinedPgn;\n  };\n  const handleLineClick = gameIDs => {\n    const combinedPgn = createPgnFromGameIDs(gameIDs, thePgnList);\n\n    // Store the combined PGN in localStorage\n    localStorage.setItem('combinedPgn', combinedPgn);\n\n    // Clear imported games\n    localStorage.removeItem('importedGames');\n\n    // Redirect to analysis board\n    window.location.href = '/analysis-board';\n  };\n  const handleFilterClick = () => {\n    setShowAdvancedFilter(true);\n  };\n  const handleSaveFilter = params => {\n    setFilterParams(params);\n    setShowAdvancedFilter(false);\n    // Apply the filters directly to the games list or during game fetching\n  };\n  const formatMovesWithNumbers = line => {\n    const moves = line.Line.split(\"*\").filter(Boolean);\n    const opening = detectOpening(moves);\n    const formattedMoves = moves.map((move, index) => {\n      const moveNumber = Math.floor(index / 2) + 1;\n      return index % 2 === 0 ? `${moveNumber}. ${move}` : `${moveNumber}...${move}`;\n    }).join(\" \");\n    return `${opening}: ${formattedMoves}`;\n  };\n  const categorizeLines = finalLongDF => {\n    return finalLongDF.map(row => {\n      const avgPointsColumn = \"AvgPoints\";\n      const avgPoints = row[avgPointsColumn];\n      if (avgPoints <= 0) {\n        row.MistakeType = \"Fatal Bafflement\";\n      } else if (avgPoints <= 0.2) {\n        row.MistakeType = \"Major Incompetence\";\n      } else if (avgPoints <= 0.4) {\n        row.MistakeType = \"Slight Inconsistency\";\n      } else {\n        row.MistakeType = \"None\";\n      }\n      return row;\n    }).filter(row => row.MistakeType !== \"None\");\n  };\n  const processGames = async games => {\n    setProcessing(true);\n    const eventList = [];\n    const siteList = [];\n    const whiteList = [];\n    const blackList = [];\n    const resultList = [];\n    const dateList = [];\n    const whiteEloList = [];\n    const blackEloList = [];\n    const fullValList = [];\n    const initialColnames = [];\n    const movesList = [];\n    const pgnList = [];\n    const chess = new Chess();\n    const minProbability = filterParams ? filterParams.minProbability : 0.2; // Default to 0.2\n    let updatedStats = {};\n    let totalWins = 0;\n    let totalLosses = 0;\n    let totGames = 0;\n    let totalScore = 0;\n    games.forEach((game, index) => {\n      try {\n        chess.loadPgn(game);\n        let gameURL = chess.header()['Site'];\n        chess.deleteComments();\n        let moves = chess.history();\n        movesList.push(moves);\n        const opening = detectOpening(moves);\n        const result = chess.header()[\"Result\"];\n        if (!updatedStats[opening]) {\n          updatedStats[opening] = {\n            numGames: 0,\n            wins: 0,\n            losses: 0,\n            score: 0\n          };\n        }\n        // Update stats based on game result (simplified example)\n        updatedStats[opening].numGames += 1;\n        if (result === '1-0' & opponentColor == \"White\") {\n          totalWins += 1;\n          totGames += 1;\n          totalScore += 1;\n          updatedStats[opening].wins += 1;\n          updatedStats[opening].score += 1;\n        } else if (result === '1-0' & opponentColor == \"Black\") {\n          totalLosses += 1;\n          totGames += 1;\n          updatedStats[opening].losses += 1;\n        } else if (result === '0-1' & opponentColor == \"Black\") {\n          totalWins += 1;\n          totGames += 1;\n          totalScore += 1;\n          updatedStats[opening].wins += 1;\n          updatedStats[opening].score += 1;\n        } else if (result === '0-1' & opponentColor == \"White\") {\n          totalLosses += 1;\n          totGames += 1;\n          updatedStats[opening].losses += 1;\n        } else if (result === '1/2-1/2') {\n          totGames += 1;\n          totalScore += 0.5;\n          updatedStats[opening].draws += 1;\n          updatedStats[opening].score += 0.5;\n        }\n\n        // Increment games processed counter\n        setGamesProcessed(prev => prev + 1);\n        setOpeningStats({\n          ...updatedStats\n        });\n        const valList = [];\n        let triangle = String(moves[0]) + \"*\";\n        valList.push(triangle);\n        pgnList.push(chess.pgn());\n        siteList.push(gameURL); // Store the game URL here\n        eventList.push(chess.header()[\"Event\"]);\n        siteList.push(chess.header()[\"Site\"]);\n        whiteList.push(chess.header()[\"White\"]);\n        blackList.push(chess.header()[\"Black\"]);\n        resultList.push(chess.header()[\"Result\"]);\n        dateList.push(chess.header()[\"Date\"]);\n        whiteEloList.push(chess.header()[\"WhiteElo\"]);\n        blackEloList.push(chess.header()[\"BlackElo\"]);\n        for (let i = 1; i < 25 && i < moves.length; i++) {\n          triangle += String(moves[i]) + \"*\";\n          valList.push(triangle);\n        }\n        fullValList.push(valList);\n      } catch (error) {\n        console.error(`Error processing game at index ${index}:`, error.message);\n        // Skip this game and continue with the next one\n      }\n    });\n    setShowTable(true);\n    setProcessing(false);\n    console.log(fullValList);\n    setThePgnList(pgnList); // Set the pgnList to the state variable thePgnList\n    setGameURLs(siteList); // Store the URLs for later use\n\n    for (let j = 1; j <= 25; j++) {\n      initialColnames.push(\"Line\" + String(j));\n    }\n    const dataFrame = fullValList.map((row, index) => ({\n      ...row.reduce((acc, val, i) => ({\n        ...acc,\n        [initialColnames[i]]: val\n      }), {}),\n      Event: eventList[index],\n      Site: siteList[index],\n      White: whiteList[index],\n      Black: blackList[index],\n      WhiteResult1: resultList[index] === '1-0' ? 1 : resultList[index] === '1/2-1/2' ? 0.5 : 0,\n      Date: dateList[index],\n      WhiteElo: whiteEloList[index],\n      BlackElo: blackEloList[index],\n      Pgn: pgnList[index],\n      GameID: index\n    }));\n    console.log(\"dataFrame\");\n    console.log(dataFrame);\n    const filteredDF = dataFrame.filter(row => row[opponentColor] === opponentName);\n    console.log(1);\n    console.log(filteredDF);\n    const moveProb1 = filteredDF.reduce((acc, row) => {\n      acc[row.Line1] = (acc[row.Line1] || 0) + 1;\n      return acc;\n    }, {});\n    const totalGames = filteredDF.length;\n    filteredDF.forEach(row => {\n      row.MoveProbability1 = moveProb1[row.Line1] / totalGames;\n    });\n    console.log(2);\n    console.log(filteredDF);\n    for (let i = 1; i < 25; i++) {\n      filteredDF.forEach(row => {\n        row[`WhiteResult${i + 1}`] = row.WhiteResult1;\n      });\n      const moveProb = filteredDF.reduce((acc, row) => {\n        const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n        acc[key] = (acc[key] || 0) + 1;\n        return acc;\n      }, {});\n      const lineCount = filteredDF.reduce((acc, row) => {\n        acc[row[`Line${i}`]] = (acc[row[`Line${i}`]] || 0) + 1;\n        return acc;\n      }, {});\n      filteredDF.forEach(row => {\n        const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n        row[`MoveProbability${i + 1}`] = moveProb[key] / lineCount[row[`Line${i}`]];\n      });\n    }\n    console.log(3);\n    console.log(filteredDF);\n    filteredDF.forEach(row => {\n      let pw = 1;\n      let pb = 1;\n      for (let i = 1; i <= 25; i++) {\n        if (i % 2 === 1) {\n          pw *= row[`MoveProbability${i}`] || 1;\n        } else {\n          pb *= row[`MoveProbability${i}`] || 1;\n        }\n        row[`LineProbability(W)${i}`] = pw;\n        row[`LineProbability(B)${i}`] = pb;\n      }\n    });\n    console.log(4);\n    console.log(\"filteredDF\");\n    console.log(filteredDF);\n    const longDF = [];\n    filteredDF.forEach(row => {\n      for (let i = 1; i <= 25; i++) {\n        longDF.push({\n          GameID: row.GameID,\n          Ply: i,\n          Line: row[`Line${i}`],\n          EVAL: row[`EVAL${i}`],\n          WhiteResult: row[`WhiteResult${i}`],\n          MoveProbability: row[`MoveProbability${i}`],\n          LineProbabilityW: row[`LineProbability(W)${i}`],\n          LineProbabilityB: row[`LineProbability(B)${i}`],\n          Pgn: row.Pgn\n        });\n      }\n    });\n    console.log(\"longDF\");\n    console.log(longDF);\n    // Step to create LineProbability column\n    longDF.forEach(row => {\n      // If opponentColor is 'Black', use LineProbabilityB; otherwise, use LineProbabilityW\n      row.LineProbability = opponentColor === 'Black' ? row.LineProbabilityB : row.LineProbabilityW;\n    });\n\n    // Add #Games column\n    const lineCounts = longDF.reduce((acc, row) => {\n      acc[row.Line] = (acc[row.Line] || 0) + 1;\n      return acc;\n    }, {});\n    longDF.forEach(row => {\n      row['#Games'] = lineCounts[row.Line];\n    });\n\n    // Calculate lower limit based on Min Flaw Frequency\n    let minGames = 1; // Default for At Least One Game\n    if (precisionLevel === '0.5% of Games') {\n      minGames = Math.max(1, Math.round(games.length / 200));\n    } else if (precisionLevel === '0.3% of Games') {\n      minGames = Math.max(1, Math.round(games.length / 333));\n    }\n    //These percentages are wrong since total game counter is flawed\n    //Need to update\n\n    console.log(\"minGames\");\n    console.log(minGames);\n\n    // Filter for lines which meet minimum number of games\n    const minGameFilteredDF = longDF.filter(row => row[\"#Games\"] >= minGames);\n    // Filter for lines with probability greater than 0.2\n    const filteredLongDF = minGameFilteredDF.filter(row => opponentColor === 'Black' && row.LineProbabilityB > minProbability || opponentColor === 'White' && row.LineProbabilityW > minProbability);\n    console.log(\"filteredLongDF\");\n    console.log(filteredLongDF);\n    const groupedByLine = filteredLongDF.reduce((acc, row) => {\n      if (!acc[row.Line]) {\n        acc[row.Line] = {\n          Line: row.Line,\n          TotalGames: 0,\n          TotalWhitePoints: 0,\n          TotalLosses: 0,\n          AverageWhitePoints: 0,\n          GameIDs: [],\n          TotalLineProbability: 0,\n          // Track total probability for averaging later\n          AverageLineProbability: 0 // To store the average probabil\n        };\n      }\n      acc[row.Line].TotalGames += 1;\n      acc[row.Line].TotalWhitePoints += row.WhiteResult;\n      acc[row.Line].TotalLosses += 1 - row.WhiteResult;\n      acc[row.Line].AverageWhitePoints = acc[row.Line].TotalWhitePoints / acc[row.Line].TotalGames;\n      acc[row.Line].GameIDs.push(row.GameID);\n      acc[row.Line].TotalLineProbability += row.LineProbability; // Sum the probabilities for the line\n      acc[row.Line].AverageLineProbability = acc[row.Line].TotalLineProbability / acc[row.Line].TotalGames; // Calculate average LineProbability\n      return acc;\n    }, {});\n    Object.values(groupedByLine).forEach(row => {\n      row['AvgPoints'] = opponentColor === \"White\" ? row.AverageWhitePoints : 1 - row.AverageWhitePoints;\n    });\n    console.log(\"groupedByLine\");\n    console.log(groupedByLine);\n\n    // Convert groupedByLine to an array and sort by WinPercentage\n    const groupedLongDF = Object.values(groupedByLine);\n    const sortedLongDF = groupedLongDF.sort((a, b) => {\n      return a.AvgPoints - b.AvgPoints;\n    });\n    console.log(\"sortedLongDF\");\n    console.log(sortedLongDF);\n    const definedDF = sortedLongDF.filter(row => row.Line !== undefined);\n    console.log(\"definedDF\");\n    console.log(definedDF);\n    let fullLinesStr = \"//\";\n    let partialLinesStr = \"//\";\n    const nonSubsetLongDF = definedDF.filter(row => {\n      const subsets = [];\n      const lineMoves = row.Line.split(\"*\").filter(Boolean);\n\n      // SUBSET CHECK\n      // Check if value already in partialLinesStr\n      if (partialLinesStr.includes(\"//\" + row.Line + \"//\")) {\n        return false;\n      }\n\n      // SUPERSET CHECK\n      // Check if any subset is already in fullLinesStr\n\n      // Generate all possible subsets of the current line\n      for (let i = 1; i <= lineMoves.length; i++) {\n        const subset = lineMoves.slice(0, i).join(\"*\") + \"*\";\n        if (fullLinesStr.includes(\"//\" + subset + \"//\")) {\n          return false;\n        }\n        partialLinesStr += subset + \"//\";\n      }\n      ;\n      fullLinesStr += row.Line + \"//\";\n      return true;\n    });\n    console.log(\"nonSubsetLongDF\");\n    console.log(nonSubsetLongDF);\n    const categorizedLines = categorizeLines(nonSubsetLongDF);\n    setFilteredData(categorizedLines);\n    console.log(\"filteredData\");\n    console.log(filteredData);\n    const commonLines = findCommonLines(movesList);\n    setCommonLines(commonLines);\n    setProcessing(false); // Stop processing\n  };\n  const findCommonLines = movesList => {\n    const lineCounts = {};\n    movesList.forEach(moves => {\n      moves.forEach((move, index) => {\n        const line = moves.slice(0, index + 1).join(' ');\n        if (!lineCounts[line]) {\n          lineCounts[line] = 0;\n        }\n        lineCounts[line]++;\n      });\n    });\n    const sortedLines = Object.entries(lineCounts).sort((a, b) => b[1] - a[1]);\n    return sortedLines.slice(0, 5);\n  };\n  const handleCancelFilter = () => {\n    setShowAdvancedFilter(false);\n  };\n  const sortedStats = Object.entries(openingStats).sort(([, a], [, b]) => b.numGames - a.numGames);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weakness-finder\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onMouseEnter: () => setIsLogoHovered(true),\n            onMouseLeave: () => setIsLogoHovered(false),\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: isLogoHovered ? logoWhite : logo,\n                alt: \"Home\",\n                style: {\n                  height: '39px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1122,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1121,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1117,\n            columnNumber: 25\n          }, this), isMobile ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navdropdown-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${isDropdownOpen ? 'navdropdown' : 'navdropdown'}`,\n              onClick: () => setIsDropdownOpen(!isDropdownOpen),\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"navdropdown-header\",\n                style: {\n                  lineHeight: '1.78',\n                  padding: '10px 20px',\n                  fontSize: '22px',\n                  color: 'white'\n                },\n                children: \"\\u2630 Menu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1131,\n                columnNumber: 37\n              }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/blunder-punisher\",\n                    className: \"nav-link\",\n                    onClick: () => setIsDropdownOpen(false),\n                    children: \"Blunder Punisher\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1148,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1147,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/weakness-finder\",\n                    className: \"nav-link\",\n                    onClick: () => setIsDropdownOpen(false),\n                    children: \"Weakness Finder\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1157,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1156,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/analysis-board\",\n                    className: \"nav-link\",\n                    onClick: () => setIsDropdownOpen(false),\n                    children: \"Analysis Board\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1166,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1165,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/feedback\",\n                    className: \"nav-link\",\n                    onClick: () => setIsDropdownOpen(false),\n                    children: \"Your Feedback\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1175,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1174,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1146,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1127,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1126,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/blunder-punisher\",\n                className: \"prepare-link\",\n                children: \"Blunder Punisher\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1190,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1189,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/weakness-finder\",\n                children: \"Weakness Finder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1195,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1194,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/analysis-board\",\n                children: \"Analysis Board\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1198,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1197,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/feedback\",\n                children: \"Your Feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1201,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1200,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1188,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"hero3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            style: {\n              position: 'absolute',\n              left: '50%',\n              transform: 'translateX(-50%)'\n            },\n            children: \"Weakness Finder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1211,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontStyle: 'italic',\n              fontSize: 20,\n              marginLeft: 'auto'\n            },\n            children: \"Punish your opponent's strategic flaws!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1212,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1210,\n          columnNumber: 17\n        }, this), !showAdvancedFilter ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFilterClick,\n            className: \"adv-filter-button\",\n            children: \"\\uD83D\\uDD0D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1216,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tab-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tab\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: inputMethod === 'chesscom' ? 'tablinks active' : 'tablinks',\n                onClick: () => setInputMethod('chesscom'),\n                children: \"Chess.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1219,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: inputMethod === 'lichess' ? 'tablinks active' : 'tablinks',\n                onClick: () => setInputMethod('lichess'),\n                children: \"Lichess\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1220,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: inputMethod === 'pgn' ? 'tablinks active' : 'tablinks',\n                onClick: () => setInputMethod('pgn'),\n                children: \"PGN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1221,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1218,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tabcontent\",\n              style: {\n                display: inputMethod === 'pgn' ? 'block' : 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  onChange: handleFileSelect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1225,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"opponentName\",\n                  children: \"Player Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1226,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"opponentName\",\n                  value: opponentName,\n                  onChange: e => setOpponentName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1227,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1224,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1223,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tabcontent\",\n              style: {\n                display: inputMethod === 'lichess' ? 'block' : 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"opponentUsername\",\n                  children: \"Player Username:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1237,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"opponentUsername\",\n                  value: opponentName,\n                  onChange: e => setOpponentName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1238,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1236,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1235,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tabcontent\",\n              style: {\n                display: inputMethod === 'chesscom' ? 'block' : 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"opponentUsername\",\n                  children: \"Player Username:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1248,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"opponentUsername\",\n                  value: opponentName,\n                  onChange: e => setOpponentName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1249,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1247,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1246,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"opponentColor\",\n                children: \"Piece Color:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1258,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"opponentColor\",\n                value: opponentColor,\n                onChange: e => setOpponentColor(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"White\",\n                  children: \"White\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1264,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Black\",\n                  children: \"Black\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1265,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1259,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1257,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleStart,\n              className: \"spec-button\",\n              style: {\n                marginTop: 6.5,\n                marginLeft: 10\n              },\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1268,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleReset,\n              className: \"spec-button\",\n              style: {\n                marginTop: 6.5,\n                marginLeft: 10\n              },\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1269,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1217,\n            columnNumber: 29\n          }, this), processing ?\n          /*#__PURE__*/\n          // Rotating white king while games are being processed\n          _jsxDEV(\"div\", {\n            className: \"rotating-king\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://upload.wikimedia.org/wikipedia/commons/4/42/Chess_klt45.svg\",\n              alt: \"Rotating King\",\n              className: \"king-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1275,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1274,\n            columnNumber: 9\n          }, this) :\n          /*#__PURE__*/\n          // Toggle button after processing is complete\n          _jsxDEV(\"div\", {\n            className: \"arrow-button\",\n            onClick: handleToggle,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: rightArrow,\n              alt: \"Toggle View\",\n              className: `arrow-icon ${showTable ? '' : 'rotate'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1280,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1279,\n            columnNumber: 9\n          }, this), showTable && gamesProcessed > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-container\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"scrollable-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Opening\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1292,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Games\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1293,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Score %\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1294,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Wins\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1295,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Losses\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1296,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1291,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1290,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: sortedStats.map(([opening, stats], index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: opening\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1302,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: stats.numGames\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1303,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [(stats.score / stats.numGames * 100).toFixed(2), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1304,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: stats.wins\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1305,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: stats.losses\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1306,\n                    columnNumber: 17\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1301,\n                  columnNumber: 15\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1299,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1312,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: sortedStats.reduce((total, [, stats]) => total + stats.numGames, 0)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1313,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [(sortedStats.reduce((total, [, stats]) => total + stats.score, 0) / sortedStats.reduce((total, [, stats]) => total + stats.numGames, 0) * 100).toFixed(2), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1314,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: sortedStats.reduce((total, [, stats]) => total + stats.wins, 0)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1315,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: sortedStats.reduce((total, [, stats]) => total + stats.losses, 0)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1316,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1311,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1310,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1289,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1288,\n            columnNumber: 9\n          }, this), showTable ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"common-lines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1326,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleDropdown('Fatal Bafflements'),\n                  children: [\"Fatal Bafflements: (\", filteredData.filter(line => line.MistakeType === 'Fatal Bafflement').length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1332,\n                  columnNumber: 41\n                }, this), activeDropdown === 'Fatal Bafflements' && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: filteredData.filter(line => line.MistakeType === 'Fatal Bafflement').map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"line-item\",\n                    onClick: () => handleLineClick(line.GameIDs),\n                    children: [formatMovesWithNumbers(line), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Score: \", Math.round(line.AvgPoints * 100), \"% w/ Trap Probability: \", Math.round(line.AverageLineProbability * 100), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1340,\n                      columnNumber: 57\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1338,\n                    columnNumber: 53\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1336,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1331,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleDropdown('Major Incompetencies'),\n                  children: [\"Major Incompetencies: (\", filteredData.filter(line => line.MistakeType === 'Major Incompetence').length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1347,\n                  columnNumber: 41\n                }, this), activeDropdown === 'Major Incompetencies' && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: filteredData.filter(line => line.MistakeType === 'Major Incompetence').map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"line-item\",\n                    onClick: () => handleLineClick(line.GameIDs),\n                    children: [formatMovesWithNumbers(line), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Score: \", Math.round(line.AvgPoints * 100), \"% w/ Trap Probability: \", Math.round(line.AverageLineProbability * 100), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1355,\n                      columnNumber: 57\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1353,\n                    columnNumber: 53\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1351,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1346,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleDropdown('Slight Inconsistencies'),\n                  children: [\"Slight Inconsistencies: (\", filteredData.filter(line => line.MistakeType === 'Slight Inconsistency').length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1362,\n                  columnNumber: 41\n                }, this), activeDropdown === 'Slight Inconsistencies' && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: filteredData.filter(line => line.MistakeType === 'Slight Inconsistency').map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"line-item\",\n                    onClick: () => handleLineClick(line.GameIDs),\n                    children: [formatMovesWithNumbers(line), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Score: \", Math.round(line.AvgPoints * 100), \"% w/ Trap Probability: \", Math.round(line.AverageLineProbability * 100), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1370,\n                      columnNumber: 57\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1368,\n                    columnNumber: 53\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1366,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1361,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1330,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1329,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1215,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(AdvancedFilter, {\n          onSave: handleSaveFilter,\n          onCancel: handleCancelFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1381,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1209,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1208,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2025 CheckmateWizard.com All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1386,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1385,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1113,\n    columnNumber: 9\n  }, this);\n};\n_s(WeaknessFinder, \"ggJUT9GqrMa/Jg4sQLm0D/Jk3Wg=\");\n_c = WeaknessFinder;\nexport default WeaknessFinder;\nvar _c;\n$RefreshReg$(_c, \"WeaknessFinder\");","map":{"version":3,"names":["React","useState","useEffect","Link","Chess","AdvancedFilter","logo","logoWhite","rightArrow","jsxDEV","_jsxDEV","STOCKFISH","window","defaultState","importedGames","gamesCount","gamesProcessed","commonLines","filteredData","thePgnList","previousOutput","gameURLs","opponentName","opponentColor","precisionLevel","processing","showTable","activeDropdown","inputMethod","isLogoHovered","openingStats","WeaknessFinder","_s","showAdvancedFilter","setShowAdvancedFilter","filterParams","setFilterParams","setIsLogoHovered","setImportedGames","JSON","parse","localStorage","getItem","setGamesCount","Number","setCommonLines","setFilteredData","setThePgnList","setGameURLs","setPreviousOutput","setOpponentName","setOpponentColor","setPrecisionLevel","setOpeningStats","setGamesProcessed","setProcessing","setShowTable","setActiveDropdown","setInputMethod","isDropdownOpen","setIsDropdownOpen","isMobile","setIsMobile","innerWidth","handleResize","isNowMobile","console","log","document","body","classList","add","remove","addEventListener","removeEventListener","setItem","stringify","handleReset","siteList","removeItem","stockfish","Worker","postMessage","handleToggle","prevShowTable","handleFileSelect","event","file","target","files","reader","FileReader","onload","e","fullPgn","result","rawGames","split","filter","Boolean","games","map","game","trim","length","readAsText","openings","detectOpening","moves","movesSequence","join","opening","startsWith","fetchLichessGames","username","maxGames","timeControls","oldestDate","newestDate","timeClasses","bullet","push","blitz","rapid","classical","timeClassFilter","allFilteredGames","fetchedGamesCount","currentPage","response","fetch","data","text","filteredGames","gamePgn","dateMatch","match","isWithinRange","Date","replace","whitePlayerMatch","blackPlayerMatch","isCorrectColor","concat","slice","fetchChessComGames","fetchGamesBatch","archiveUrl","ok","errorText","Error","statusText","json","isCorrectTimeClass","time_class","white","black","gameDate","end_time","isWithinDateRange","error","message","archivesResponse","archivesData","archives","reverse","results","displayErrorBanner","existingBanners","querySelectorAll","forEach","banner","createElement","className","style","cssText","textContent","head","appendChild","innerHTML","prepend","setTimeout","location","reload","handleStart","pgn","processGames","toggleDropdown","dropdown","createPgnFromGameIDs","gameIDs","pgnList","combinedPgn","id","includes","handleLineClick","href","handleFilterClick","handleSaveFilter","params","formatMovesWithNumbers","line","Line","formattedMoves","move","index","moveNumber","Math","floor","categorizeLines","finalLongDF","row","avgPointsColumn","avgPoints","MistakeType","eventList","whiteList","blackList","resultList","dateList","whiteEloList","blackEloList","fullValList","initialColnames","movesList","chess","minProbability","updatedStats","totalWins","totalLosses","totGames","totalScore","loadPgn","gameURL","header","deleteComments","history","numGames","wins","losses","score","draws","prev","valList","triangle","String","i","j","dataFrame","reduce","acc","val","Event","Site","White","Black","WhiteResult1","WhiteElo","BlackElo","Pgn","GameID","filteredDF","moveProb1","Line1","totalGames","MoveProbability1","moveProb","key","lineCount","pw","pb","longDF","Ply","EVAL","WhiteResult","MoveProbability","LineProbabilityW","LineProbabilityB","LineProbability","lineCounts","minGames","max","round","minGameFilteredDF","filteredLongDF","groupedByLine","TotalGames","TotalWhitePoints","TotalLosses","AverageWhitePoints","GameIDs","TotalLineProbability","AverageLineProbability","Object","values","groupedLongDF","sortedLongDF","sort","a","b","AvgPoints","definedDF","undefined","fullLinesStr","partialLinesStr","nonSubsetLongDF","subsets","lineMoves","subset","categorizedLines","findCommonLines","sortedLines","entries","handleCancelFilter","sortedStats","children","onMouseEnter","onMouseLeave","to","src","alt","height","fileName","_jsxFileName","lineNumber","columnNumber","onClick","lineHeight","padding","fontSize","color","display","justifyContent","alignItems","position","left","transform","fontStyle","marginLeft","type","onChange","htmlFor","value","marginTop","stats","toFixed","total","onSave","onCancel","_c","$RefreshReg$"],"sources":["/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/WeaknessFinder.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Chess } from 'chess.js';\nimport AdvancedFilter from './AdvancedFilter'; // Import the new component\nimport './styles.css';\n\n/*\n<div className=\"form-group\">\n<label htmlFor=\"precisionLevel\">Min Flaw Frequency:</label>\n<select\n    id=\"precisionLevel\"\n    value={precisionLevel}\n    onChange={(e) => setPrecisionLevel(e.target.value)}\n>\n    <option value=\"0.5% of Games\">0.5% of Games (5s-30s)</option>\n    <option value=\"0.3% of Games\">0.3% of Games (5s-30s)</option>\n    <option value=\"At Least 1 Game\">At Least 1 Game (5s-30s)</option>\n</select>\n</div>\n\n*/\n// Import both logo images\nimport logo from './checkmatewizard_transparent.png'; // Adjust the path as needed\nimport logoWhite from './checkmatewizard_pure_white.png'; // Adjust the path as needed\nimport rightArrow from './rarrow_white.png'; // Adjust the path as needed\n\n\nconst STOCKFISH = window.STOCKFISH;\n\nconst defaultState = {\n    importedGames: [],\n    gamesCount: 0,\n    gamesProcessed:0,\n    commonLines: [],\n    filteredData: [],\n    thePgnList: [],\n    previousOutput: \"\",\n    gameURLs: [],  // Add this to track game URLs\n    opponentName: '',\n    opponentColor: 'White',\n    precisionLevel: '0.5% of Games',\n    processing: false,\n    showTable:false,\n    activeDropdown: null,\n    inputMethod: 'chesscom',\n    isLogoHovered: false,\n    openingStats:{}\n};\n\nconst WeaknessFinder = () => {\n    const [showAdvancedFilter, setShowAdvancedFilter] = useState(false);\n    const [filterParams, setFilterParams] = useState(null);\n    const [isLogoHovered, setIsLogoHovered] = useState(defaultState.isLogoHovered);\n    const [importedGames, setImportedGames] = useState(() => JSON.parse(localStorage.getItem('weaknessFinder_importedGames')) || defaultState.importedGames);\n    const [gamesCount, setGamesCount] = useState(() => Number(localStorage.getItem('weaknessFinder_gamesCount')) || defaultState.gamesCount);\n    const [commonLines, setCommonLines] = useState(() => JSON.parse(localStorage.getItem('weaknessFinder_commonLines')) || defaultState.commonLines);\n    const [filteredData, setFilteredData] = useState(() => JSON.parse(localStorage.getItem('weaknessFinder_filteredData')) || defaultState.filteredData);\n    const [thePgnList, setThePgnList] = useState(() => JSON.parse(localStorage.getItem('weaknessFinder_thePgnList')) || defaultState.thePgnList);\n    const [gameURLs, setGameURLs] = useState(() => JSON.parse(localStorage.getItem('weaknessFinder_gameURLs')) || defaultState.gameURLs);\n    const [previousOutput, setPreviousOutput] = useState(defaultState.previousOutput);\n    const [opponentName, setOpponentName] = useState(() => localStorage.getItem('weaknessFinder_opponentName') || defaultState.opponentName);\n    const [opponentColor, setOpponentColor] = useState(() => localStorage.getItem('weaknessFinder_opponentColor') || defaultState.opponentColor);\n    const [precisionLevel, setPrecisionLevel] = useState(() => localStorage.getItem('weaknessFinder_precisionLevel') || defaultState.precisionLevel);\n    const [openingStats, setOpeningStats] = useState(() => JSON.parse(localStorage.getItem('weaknessFinder_openingStats')) || defaultState.openingStats);  // Holds stats for each opening\n    const [gamesProcessed, setGamesProcessed] = useState(() => Number(localStorage.getItem('weaknessFinder_gamesProcessed')) || defaultState.gamesProcessed);\n  const [processing, setProcessing] = useState(() => localStorage.getItem('weaknessFinder_processing') || defaultState.processing);\n  const [showTable, setShowTable] = useState(() => localStorage.getItem('weaknessFinder_showTable') || defaultState.showTable);\n    const [activeDropdown, setActiveDropdown] = useState(defaultState.activeDropdown);\n    const [inputMethod, setInputMethod] = useState(() => localStorage.getItem('weaknessFinder_inputMethod') || defaultState.inputMethod);\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n    const [isMobile, setIsMobile] = useState(window.innerWidth < 1200);\n    // Event listener for window resize\n    useEffect(() => {\n                const handleResize = () => {\n                    const isNowMobile = window.innerWidth < 1200;\n                    setIsMobile(isNowMobile);\n            \n                    if (isNowMobile) {\n                        console.log('Applying frozen class');\n                        document.body.classList.add('frozen');\n                    } else {\n                        console.log('Removing frozen class');\n                        document.body.classList.remove('frozen');\n                    }\n                };\n            \n                window.addEventListener('resize', handleResize);\n            \n                handleResize();\n            \n                return () => window.removeEventListener('resize', handleResize);\n            }, []);\n            \n    useEffect(() => {\n        localStorage.setItem('weaknessFinder_importedGames', JSON.stringify(importedGames));\n    }, [importedGames]);\n\n    useEffect(() => {\n        localStorage.setItem('weaknessFinder_gamesCount', gamesCount);\n    }, [gamesCount]);\n\n    useEffect(() => {\n        localStorage.setItem('weaknessFinder_commonLines', JSON.stringify(commonLines));\n    }, [commonLines]);\n\n    useEffect(() => {\n        localStorage.setItem('weaknessFinder_filteredData', JSON.stringify(filteredData));\n    }, [filteredData]);\n\n    useEffect(() => {\n        localStorage.setItem('weaknessFinder_thePgnList', JSON.stringify(thePgnList));\n    }, [thePgnList]);\n\n    useEffect(() => {\n        localStorage.setItem('weaknessFinder_opponentName', opponentName);\n    }, [opponentName]);\n\n    useEffect(() => {\n        localStorage.setItem('weaknessFinder_opponentColor', opponentColor);\n    }, [opponentColor]);\n\n    useEffect(() => {\n        localStorage.setItem('weaknessFinder_precisionLevel', precisionLevel);\n    }, [precisionLevel]);\n\n    useEffect(() => {\n        localStorage.setItem('weaknessFinder_inputMethod', inputMethod);\n    }, [inputMethod]);\n\n    useEffect(() => {\n        localStorage.setItem('gameURLs', JSON.stringify(gameURLs));\n    }, [gameURLs]);\n\n    useEffect(() => {\n        localStorage.setItem('weaknessFinder_showTable', showTable);\n    }, [showTable]);\n\n    useEffect(() => {\n        setProcessing(false);  // Reset processing when toggling tabs\n    }, [inputMethod]);\n\n\n    useEffect(() => {\n        localStorage.setItem('weaknessFinder_gamesProcessed', gamesProcessed);\n    }, [gamesProcessed]);\n\n\n    useEffect(() => {\n        localStorage.setItem('weaknessFinder_openingStats', JSON.stringify(openingStats));\n    }, [openingStats]);\n\n\n\n\n    const handleReset = () => {\n        // Reset state to default values\n        setImportedGames(defaultState.importedGames);\n        setGamesCount(defaultState.gamesCount);\n        setCommonLines(defaultState.commonLines);\n        setFilteredData(defaultState.filteredData);\n        setThePgnList(defaultState.thePgnList);\n        setGameURLs(defaultState.siteList);  // Store the URLs for later use\n        setPreviousOutput(defaultState.previousOutput);\n        setOpponentName(defaultState.opponentName);\n        setOpponentColor(defaultState.opponentColor);\n        setPrecisionLevel(defaultState.precisionLevel);\n        setProcessing(defaultState.processing);\n        setActiveDropdown(defaultState.activeDropdown);\n        setInputMethod(defaultState.inputMethod);\n        setOpeningStats(defaultState.openingStats);\n        setGamesProcessed(defaultState.gamesProcessed);\n        setShowTable(defaultState.showTable);\n\n        // Clear localStorage\n        localStorage.removeItem('weaknessFinder_importedGames');\n        localStorage.removeItem('weaknessFinder_gamesCount');\n        localStorage.removeItem('weaknessFinder_commonLines');\n        localStorage.removeItem('weaknessFinder_filteredData');\n        localStorage.removeItem('weaknessFinder_thePgnList');\n        localStorage.removeItem('weaknessFinder_opponentName');\n        localStorage.removeItem('weaknessFinder_opponentColor');\n        localStorage.removeItem('weaknessFinder_precisionLevel');\n        localStorage.removeItem('weaknessFinder_inputMethod');\n        localStorage.removeItem('weaknessFinder_combinedPgn');\n        localStorage.removeItem('weaknessFinder_gamesProcessed');\n        localStorage.removeItem('weaknessFinder_processing');\n        localStorage.removeItem('weaknessFinder_showTable');\n        localStorage.removeItem('weaknessFinder_openingStats');\n    };\n\n    let stockfish = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(\"stockfish.js\");\n    stockfish.postMessage(\"uci\");\n    \n  // This function handles the toggling logic\n  const handleToggle = () => {\n    setShowTable(prevShowTable => !prevShowTable);\n  };\n    \n\n    const handleFileSelect = (event) => {\n        const file = event.target.files[0];\n        if (!file) return;\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const fullPgn = e.target.result;\n            let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n            let games = rawGames.map(game => '[Event' + game.trim());\n\n            setImportedGames(games);\n            setGamesCount(games.length);\n        };\n        reader.readAsText(file);\n    };\n\n    const openings = {\n        \n        // French Defense\n       \"e4 e6 d4 d5 exd5 exd5 Nc3\": \"French Defense: Exchange, Bogolyubov Variation\",\n       \"e4 e6 d4 d5 exd5 exd5 Bd3\": \"French Defense: Exchange Variation\",\n       \"e4 e6 d4 d5 Nf3\": \"French Defense: Two Knights\",\n       \"e4 e6 d4 d5 Nc3 Bb4\": \"French Defense: Winawer\",\n       \"e4 e6 d4 d5 Nc3 Nf6\": \"French Defense: Winawer Variation\",\n       \"e4 e6 d4 d5 Nc3\": \"French Defense: Classical\",\n       \"e4 e6 d4 d5 Nd2\": \"French Defense: Tarrasch\",\n       \"e4 e6 d4 d5 e5 c5\": \"French Defense: Advance Variation\",\n       \"e4 e6 d4 d5 e5\": \"French Defense: Advance Variation\",\n       \"e4 e6 d4 d5\": \"French Defense: Main Line\",\n       \"e4 e6 Nf3\": \"French Defense: Two Knights\",\n       \"e4 e6 c4\": \"French Defense: Franco-Hiva Gambit\",\n       \"e4 e6 d3\": \"French Defense: King's Indian Attack\",\n       \"e4 e6 d4\": \"French Defense: Advance Variation\",\n       \"e4 e6\": \"French Defense\",\n       \n       // Caro-Kann Defense\n       \"e4 c6 g3\": \"Caro-Kann Defense: Fianchetto Variation\",\n       \"e4 c6 d3\": \"Caro-Kann Defense: King's Indian Attack\",\n       \"e4 c6 Nf3\": \"Caro-Kann Defense: Two Knights\",\n       \"e4 c6 c4\": \"Caro-Kann Defense: Panov-Botvinnik Attack\",\n       \"e4 c6 d4 d5 e5\": \"Caro-Kann Defense: Advance Variation\",\n       \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nf6 Ng5 h6 Nxf7\": \"Caro-Kann Defense: Witty Alien Gambit\",\n       \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nd7 Nf3 Ngf6\": \"Caro-Kann Defense: Smyslov Variation\",\n       \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nd7\": \"Caro-Kann Defense: Karpov Variation\",\n       \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Bf5\": \"Caro-Kann Defense: Tartakower Variation\",\n       \"e4 c6 d4 d5 Nc3 dxe4 Nxe4\": \"Caro-Kann Defense: Classical Variation\",\n       \"e4 c6 d4 d5 Nc3\": \"Caro-Kann Defense: Advance\",\n       \"e4 c6 d4 d5 Nd2\": \"Caro-Kann Defense: Tarrasch\",\n       \"e4 c6 d4 d5 exd5 cxd5 c4\": \"Caro-Kann Defense: Panov-Botvinnik Attack\",\n       \"e4 c6 d4 d5 exd5\": \"Caro-Kann Defense: Exchange\",\n       \"e4 c6 d4 d5\": \"Caro-Kann Defense: Classical\",\n       \"e4 c6 d4\": \"Caro-Kann Defense: Main Line\",\n       \"e4 c6\": \"Caro-Kann Defense\",\n       \n       \n       // Pirc Defense and Modern Defense\n       \"e4 g6 d4 Bg7\": \"Modern Defense: Robatsch Defense\",\n       \"e4 d6 d4 Nf6\": \"Pirc Defense: Classical\",\n       \"e4 g6 d4\": \"Modern Defense\",\n       \"e4 d6 d4\": \"Pirc Defense\",\n       \"e4 g6\": \"Modern Defense\",\n       \"e4 d6\": \"Pirc Defense\",\n       \n       // Scandinavian Defense\n       \"e4 d5 Nf3\": \"Scandinavian Defense: Gambit\",\n       \"e4 d5 exd5\": \"Scandinavian Defense: Main Line\",\n       \"e4 d5\": \"Scandinavian Defense\",\n       \n       // Alekhine's Defense\n       \"e4 Nf6 d3\": \"Alekhine's Defense: King's Indian Attack\",\n       \"e4 Nf6 e5\": \"Alekhine's Defense: Chase Variation\",\n       \"e4 Nf6\": \"Alekhine's Defense\",\n       \n       // Nimzowitsch Defense\n       \"e4 Nc6 d4\": \"Nimzowitsch Defense: Main Line\",\n       \"e4 Nc6\": \"Nimzowitsch Defense\",\n       \n       \n       \n       // Sicilian Defense\n       \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3 a6 Bg5\": \"Sicilian Defense: Najdorf, Main Line\",\n       \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3 a6\": \"Sicilian Defense: Najdorf, English Attack\",\n       \"e4 c5 Nf3 Nc6 d4 cxd4 Nxd4 g6\": \"Sicilian Defense: Accelerated Dragon, Maroczy Bind\",\n       \"e4 c5 Nf3 Nc6 d4 cxd4 Nxd4\": \"Sicilian Defense: Accelerated Dragon\",\n       \"e4 c5 Nf3 Nc6 d4\": \"Sicilian Defense: Open\",\n       \"e4 c5 Nf3 Nc6\": \"Sicilian Defense: Closed\",\n       \"e4 c5 Nf3 e6 d4 cxd4 Nxd4 a6\": \"Sicilian Defense: Kan Variation\",\n       \"e4 c5 Nf3 e6 d4 cxd4 Nxd4 Nc6\": \"Sicilian Defense: Taimanov, Bastrikov\",\n       \"e4 c5 Nf3 e6\": \"Sicilian Defense: Taimanov\",\n       \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3\": \"Sicilian Defense: Classical\",\n       \"e4 c5 Nf3 d6 d4 cxd4 Nxd4\": \"Sicilian Defense: Najdorf Variation, 6.Bg5\",\n       \"e4 c5 Nf3 d6 d4\": \"Sicilian Defense: Open, Najdorf\",\n       \"e4 c5 Nf3 d6\": \"Sicilian Defense: Najdorf Variation\",\n       \"e4 c5 Nf3\": \"Sicilian Defense: Open\",\n       \"e4 c5 d3\": \"Sicilian Defense: King's Indian Attack\",\n       \"e4 c5 g3\": \"Sicilian Defense: Fianchetto Variation\",\n       \"e4 c5 b3\": \"Sicilian Defense: Nimzowitsch-Rossolimo Attack\",\n       \"e4 c5 f4\": \"Sicilian Defense: Grand Prix Attack\",\n       \"e4 c5 Nc3\": \"Sicilian Defense: Closed\",\n       \"e4 c5 d4\": \"Sicilian Defense: Smith-Morra Gambit\",\n       \"e4 c5 c3\": \"Sicilian Defense: Alapin Variation\",\n       \"e4 c5\": \"Sicilian Defense\",\n       \n       // King's Pawn Openings\n       \"e4 e5 d4 exd4 Qxd4\": \"Center Game: Danish Gambit\",\n       \"e4 e5 d4\": \"Center Game\",\n       \"e4 e5 d3\": \"King's Indian Attack\",\n       \"e4 e5 Nf3 Nf6 Nxe5 Nc6\": \"Stafford Gambit\",\n       \"e4 e5 Nc3 Nf6 g3\": \"Vienna Game: Mieses Variation\",\n       \"e4 e5 Nc3 Nf6\": \"Vienna Game: Falkbeer Variation\",\n       \"e4 e5 Nc3\": \"Vienna Game\",\n       \"e4 e5 f4 d6\": \"King's Gambit Declined\",\n       \"e4 e5 f4 exf4 Bc4\": \"King's Gambit Accepted, Bishop's Gambit\",\n       \"e4 e5 f4 exf4 Nf3\": \"King's Gambit Accepted, King's Knight's Gambit\",\n       \"e4 e5 f4 exf4\": \"King's Gambit Accepted\",\n       \"e4 e5 f4\": \"King's Gambit\",\n       \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1 b5 Bb3 d6 c3 O-O\": \"Ruy Lopez: Closed, Chigorin Defense, 12.d4\",\n       \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1 b5 Bb3 d6 c3\": \"Ruy Lopez: Closed, Chigorin Defense\",\n       \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1\": \"Ruy Lopez: Closed, Morphy Defense\",\n       \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7\": \"Ruy Lopez: Closed, Morphy Defense\",\n       \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O\": \"Ruy Lopez: Morphy Defense, Closed\",\n       \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6\": \"Ruy Lopez: Morphy Defense, Closed\",\n       \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4\": \"Ruy Lopez: Morphy Defense\",\n       \"e4 e5 Nf3 Nc6 Bb5 a6\": \"Ruy Lopez: Morphy Defense\",\n       \"e4 e5 Nf3 Nc6 Bb5\": \"Ruy Lopez\",\n       \"e4 e5 Nf3 Nc6 Bc4 Nd4\": \"Blackburne Shilling Gambit\",\n       \"e4 e5 Nf3 Nc6 Bc4 Nf6\": \"Two Knights Defense\",\n       \"e4 e5 Nf3 Nc6 Bc4 Bc5\": \"Italian Game: Giuoco Piano\",\n       \"e4 e5 Nf3 Nc6 Bc4\": \"Italian Game\",\n       \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4 Bc5\": \"Scotch Game: Göring Gambit\",\n       \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4\": \"Scotch Game: Scotch Gambit\",\n       \"e4 e5 Nf3 Nc6 d4\": \"Scotch Game\",\n       \"e4 e5 Nf3 Nc6 d3\": \"King's Indian Attack\",\n       \"e4 e5 Nf3 Nc6\": \"King's Knight Opening: Normal Variation\",\n       \"e4 e5 Nf3 d6\": \"Philidor Defense\",\n       \"e4 e5 Nf3\": \"King's Knight Opening\",\n       \"e4 b5\": \"Polish Defense\",\n       \"e4 b6\": \"Owen's Defense\",\n       \"e4 g6\": \"Modern Defense\",\n       \"e4 Nf6\": \"Alekhine's Defense\",\n       \"e4 d5\": \"Scandinavian Defense\",\n       \"e4 d6\": \"Pirc Defense\",\n       \"e4 e5\": \"Open Game\",\n       \"e4\": \"King's Pawn Opening\",\n       \n       // King's Indian Defense\n       \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O Nbd7\": \"King's Indian Defense: Orthodox Variation, Classical System, 7...Nbd7\",\n       \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O Nc6\": \"King's Indian Defense: Orthodox Variation, Classical System, 7...Nc6\",\n       \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O\": \"King's Indian Defense: Orthodox Variation, Classical System, 7.O-O\",\n       \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n       \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2 O-O Nf3\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n       \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2 O-O\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n       \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2\": \"King's Indian Defense: Orthodox Variation\",\n       \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 f3\": \"King's Indian Defense: Saemisch Variation\",\n       \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O\": \"King's Indian Defense: Mar del Plata\",\n       \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6\": \"King's Indian Defense: Classical\",\n       \"d4 Nf6 c4 g6 Nc3 Bg7\": \"King's Indian Defense: Fianchetto\",\n       \"d4 Nf6 c4 g6\": \"King's Indian Defense\",\n       \n       \n       // Nimzo-Indian Defense\n       \"d4 Nf6 c4 e6 Nc3 Bb4 a3\": \"Nimzo-Indian Defense: Sämisch, Leningrad System\",\n       \"d4 Nf6 c4 e6 Nc3 Bb4 Qb3\": \"Nimzo-Indian Defense: Sämisch Variation\",\n       \"d4 Nf6 c4 e6 Nc3 Bb4 e3 O-O\": \"Nimzo-Indian Defense: Rubinstein, 4...O-O\",\n       \"d4 Nf6 c4 e6 Nc3 Bb4 e3\": \"Nimzo-Indian Defense: Rubinstein\",\n       \"d4 Nf6 c4 e6 Nc3 Bb4 Qc2\": \"Nimzo-Indian Defense: Classical, Capablanca Variation\",\n       \"d4 Nf6 c4 e6 Nc3 Bb4\": \"Nimzo-Indian Defense: Classical\",\n       \"d4 Nf6 c4 e6 Nc3\": \"Nimzo-Indian Defense\",\n       \"d4 Nf6 c4 e6\": \"Indian Game\",\n       \"d4 Nf6 Nf3\": \"King's Indian Attack\",\n       \"d4 Nf6\": \"Indian Game\",\n       \n       \n       // Dutch Defense\n       \"d4 f5 c4\": \"Dutch Defense\",\n       \"d4 c5\": \"Benoni Defense\",\n       \"d4 e6\": \"Horwitz Defense\",\n       \"d4 e5\": \"Englund Gambit\",\n       \"d4 d6\": \"Old Indian Defense\",\n       \"d4 Nc6\": \"Chigorin Defense\",\n       \"d4 g6\": \"Modern Defense\",\n       \"d4 f5\": \"Dutch Defense\",\n       \"d4 d6\": \"Old Indian Defense\",\n       \"d4 f5\": \"Dutch Defense\",\n       \n       // Queen's Gambit\n       \"d4 d5 c4 e6 Nc3 Nf6 Nf3 Be7 Bf4\": \"Queen's Gambit Declined: Harrwitz Attack\",\n       \"d4 d5 c4 e6 Nc3 Nf6 Nf3 Be7\": \"Queen's Gambit Declined: 7.Be7\",\n       \"d4 d5 c4 e6 Nc3 Nf6 Nf3\": \"Queen's Gambit Declined: 6.Nf3\",\n       \"d4 d5 c4 e6 Nc3 c5 cxd5 exd5 Nf3 Nc6\": \"Tarrasch Defense, Main Line\",\n       \"d4 d5 c4 e6 Nc3 c5 cxd5 exd5\": \"Tarrasch Defense, Classical Variation\",\n       \"d4 d5 c4 e6 Nc3 c5\": \"Tarrasch Defense, Closed Variation\",\n       \"d4 d5 c4 e6 Nf3 c5\": \"Tarrasch Defense\",\n       \"d4 d5 c4 e6 Nf3 Nf6\": \"Queen's Gambit Declined: 5.Nf3 Variation, Main Line\",\n       \"d4 d5 c4 e6 Nf3\": \"Queen's Gambit Declined: 5.Nf3 Variation\",\n       \"d4 d5 c4 e6 Nc3 Nf6 Bg5 h6\": \"Queen's Gambit Declined: Orthodox Defense, Lasker Defense\",\n       \"d4 d5 c4 e6 Nc3 Nf6 Bg5 Be7\": \"Queen's Gambit Declined: Orthodox Defense, Main Line\",\n       \"d4 d5 c4 e6 Nc3 Nf6 Bg5\": \"Queen's Gambit Declined: Orthodox Defense\",\n       \"d4 d5 c4 e6 Nc3 Nf6\": \"Queen's Gambit Declined\",\n       \"d4 d5 c4 dxc4\": \"Queen's Gambit Accepted\",\n       \"d4 d5 c4 e6\": \"Queen's Gambit Declined\",\n       \"d4 d5 c4 c6\": \"Slav Defense\",\n       \"d4 d5 c4\": \"Queen's Gambit\",\n       \"d4 d5 Nf3\": \"London System\",\n       \"d4\": \"Queen's Pawn Opening\",\n       \n       \n       // English Opening\n       \"c4 e5 Nc3 Nc6\": \"English Opening: Four Knights\",\n       \"c4 e5 Nc3 Nf6\": \"English Opening: Two Knights\",\n       \"c4 e5 g3\": \"English Opening: Botvinnik System\",\n       \"c4 e5\": \"English Opening: Reversed Sicilian\",\n       \"c4 Nf6\": \"English Opening: Anglo-Indian\",\n       \"c4 g6\": \"English Opening: Botvinnik System\",\n       \"c4 c5\": \"English Opening: Symmetrical Variation\",\n       \"c4\": \"English Opening\",\n   \n       // Reti and Other Openings\n       \"a4\": \"Ware Opening\",\n       \"f3\": \"Barnes Opening\",\n       \"e3\": \"Van't Kruijs Opening\",\n       \"Nh3\": \"Amar Opening\",\n       \"Na3\": \"Sodium Attack\",\n       \"g4\": \"Grob's Attack\",\n       \"Nc3\": \"Van Geet Opening\",\n       \"c3\": \"Saragossa Opening\",\n       \"d3\": \"Mieses Opening\",\n       \"h4\": \"Desprez Opening\",\n       \"h3\": \"Clemenz Opening\",\n       \"a3\": \"Anderssen's Opening\",\n       \"e3\": \"Van 't Kruijs Opening\",\n       \"b4 e5\": \"Polish Opening: Outflank Variation\",\n       \"b4\": \"Polish Opening\",\n       \"f4 e5\": \"From's Gambit\",\n       \"f4 d5\": \"Bird's Opening: Dutch Variation\",\n       \"f4\": \"Bird's Opening\",\n       \"g3\": \"King's Fianchetto Opening\",\n       \"b3\": \"Nimzowitsch-Larsen Attack\",\n       \"Nf3 c5 c4\": \"Reti Opening: King's Indian Attack\",\n       \"Nf3 c5\": \"Reti Opening: Anglo-Slav\",\n       \"Nf3 d5\": \"Reti Opening: Main Line\",\n       \"Nf3\": \"Reti Opening\"\n   };\n\n    \n\n    const detectOpening = (moves) => {\n        const movesSequence = moves.join(\" \");\n        for (const opening in openings) {\n            if (movesSequence.startsWith(opening)) {\n                return openings[opening];\n            }\n        }\n        return \"Unknown Opening\"; // Fallback if the opening is not in the book\n    };\n\n    const fetchLichessGames = async (username, maxGames = 1000, timeControls, oldestDate, newestDate, opponentColor) => {\n        const timeClasses = [];\n        if (timeControls.bullet) timeClasses.push('bullet');\n        if (timeControls.blitz) timeClasses.push('blitz');\n        if (timeControls.rapid) timeClasses.push('rapid');\n        if (timeControls.classical) timeClasses.push('classical');\n    \n        const timeClassFilter = timeClasses.length > 0 ? `&perfType=${timeClasses.join(',')}` : '';\n        let allFilteredGames = [];\n        let fetchedGamesCount = 0;\n        let currentPage = 1;\n    \n        // Fetch games in batches until we get enough games of the correct color\n        while (allFilteredGames.length < maxGames) {\n            const response = await fetch(`https://lichess.org/api/games/user/${username}?max=1000&moves=true&pgnInJson=false&page=${currentPage}${timeClassFilter}`);\n            const data = await response.text();\n    \n            // Split and process the games from the fetched data\n            let rawGames = data.split(/\\[Event/gi).filter(Boolean);\n            if (rawGames.length === 0) {\n                // No more games to fetch, break the loop\n                break;\n            }\n    \n            // Filter games by color and date\n            let filteredGames = rawGames.map(game => '[Event' + game.trim()).filter(gamePgn => {\n                const dateMatch = gamePgn.match(/\\[Date \"(\\d{4}\\.\\d{2}\\.\\d{2})\"\\]/);\n                const isWithinRange = !dateMatch || (!oldestDate || new Date(dateMatch[1].replace(/\\./g, '-')) >= new Date(oldestDate)) && \n                                                     (!newestDate || new Date(dateMatch[1].replace(/\\./g, '-')) <= new Date(newestDate));\n    \n                // Filter by color\n                const whitePlayerMatch = gamePgn.match(/\\[White \"(.*)\"\\]/);\n                const blackPlayerMatch = gamePgn.match(/\\[Black \"(.*)\"\\]/);\n                const isCorrectColor = (opponentColor === 'White' && whitePlayerMatch && whitePlayerMatch[1] === username) ||\n                                       (opponentColor === 'Black' && blackPlayerMatch && blackPlayerMatch[1] === username);\n                                       \n                return isWithinRange && isCorrectColor;\n            });\n    \n            // Add the filtered games to the result array\n            allFilteredGames = allFilteredGames.concat(filteredGames);\n    \n            // Stop if we reached or exceeded the desired number of games\n            if (allFilteredGames.length >= maxGames) {\n                allFilteredGames = allFilteredGames.slice(0, maxGames); // Trim to the exact number of games\n                break;\n            }\n    \n            // Increment page and continue fetching\n            currentPage++;\n            fetchedGamesCount += rawGames.length;\n        }\n    \n        return allFilteredGames;\n    };\n    \n    \n    \n    const fetchChessComGames = async (username, maxGames = 1000, timeControls, oldestDate, newestDate, opponentColor) => {\n        const fetchGamesBatch = async (archiveUrl) => {\n            try {\n                const response = await fetch(archiveUrl);\n                if (!response.ok) {\n                    const errorText = await response.text();\n                    throw new Error(`Error fetching data: ${response.statusText} - ${errorText}`);\n                }\n    \n                const data = await response.json();\n                const filteredGames = data.games.filter(game => {\n                    // Check for matching time control\n                    const isCorrectTimeClass = (timeControls.bullet && game.time_class === 'bullet') ||\n                                               (timeControls.blitz && game.time_class === 'blitz') ||\n                                               (timeControls.rapid && game.time_class === 'rapid') ||\n                                               (timeControls.classical && game.time_class === 'classical');\n    \n                    // Check for matching color\n                    const isCorrectColor = (opponentColor === 'White' && game.white.username === username) ||\n                                           (opponentColor === 'Black' && game.black.username === username);\n    \n                    // Check for date range\n                    const gameDate = new Date(game.end_time * 1000); // Convert Unix timestamp to JS Date\n                    const isWithinDateRange = (!oldestDate || gameDate >= new Date(oldestDate)) &&\n                                              (!newestDate || gameDate <= new Date(newestDate));\n    \n                    return isCorrectTimeClass && isCorrectColor && isWithinDateRange;\n                });\n    \n                return filteredGames;\n            } catch (error) {\n                console.error('Error fetching games batch:', error.message);\n                return []; // Return an empty array if there's an error\n            }\n        };\n    \n        try {\n            const archivesResponse = await fetch(`https://api.chess.com/pub/player/${username}/games/archives`);\n            if (!archivesResponse.ok) {\n                const errorText = await archivesResponse.text();\n                throw new Error(`Error fetching archives: ${archivesResponse.statusText} - ${errorText}`);\n            }\n    \n            const archivesData = await archivesResponse.json();\n            const archives = archivesData.archives.reverse(); // Reverse to start from the most recent\n    \n            const results = [];\n            for (let archiveUrl of archives) {\n                if (results.length >= maxGames) break;\n    \n                const games = await fetchGamesBatch(archiveUrl);\n                results.push(...games);\n    \n                if (results.length >= maxGames) {\n                    results.length = maxGames; // Trim to the maxGames limit\n                    break;\n                }\n            }\n    \n            return results;\n        } catch (error) {\n            console.error('Error fetching games from Chess.com:', error.message);\n            throw error;\n        }\n    };\n    \n    \n    function displayErrorBanner(message) {\n        console.log(2);\n        // Clear any existing banners first\n        const existingBanners = document.querySelectorAll('.error-banner');\n        existingBanners.forEach(banner => banner.remove());\n        console.log(3);\n        // Create and style banner\n        const banner = document.createElement('div');\n        banner.className = 'error-banner';\n        banner.style.cssText = `\n            position: fixed;\n            top: 0;\n            left: 0;\n            right: 0;\n            background: #ff4444;\n            color: white;\n            padding: 15px;\n            text-align: center;\n            z-index: 10000;\n            font-size: 16px;\n            font-weight: bold;\n            animation: slideIn 0.3s ease-out;\n        `;\n        console.log(4);\n      \n        // Add keyframe animation\n        const style = document.createElement('style');\n        style.textContent = `\n            @keyframes slideIn {\n                0% { transform: translateY(-100%); }\n                100% { transform: translateY(0); }\n            }\n        `;\n        document.head.appendChild(style);\n      \n        banner.innerHTML = `<p>${message}</p>`;\n        document.body.prepend(banner);\n      \n        // Reload after 3 seconds\n        setTimeout(() => {\n            banner.remove();\n            style.remove();\n            window.location.reload();\n        }, 3000);\n      };\n\n    \n    \n    \n\n    \n    const handleStart = async () => {\n        setProcessing(true);\n        setShowTable(false);\n        setFilteredData([]);\n        setOpeningStats({});  // Holds stats for each opening\n        setGamesProcessed(0);\n        let games = [];\n        const { maxGames, timeControls, oldestDate, newestDate } = filterParams || {\n            maxGames: 1000,\n            timeControls: { bullet: true, blitz: true, rapid: true, classical: true },\n            oldestDate: null,\n            newestDate: null,\n        };\n        try{\n        if (inputMethod === 'lichess') {\n            const data = await fetchLichessGames(opponentName, maxGames, timeControls, oldestDate, newestDate, opponentColor);\n            games = data;\n        } else if (inputMethod === 'chesscom') {\n            const data = await fetchChessComGames(opponentName, maxGames, timeControls, oldestDate, newestDate, opponentColor);\n            games = data.map(game => game.pgn); // Map the results to PGN format\n        } else {\n            games = importedGames;\n        }\n    \n        setGamesCount(games.length);\n        processGames(games);}\n     catch(error) {\n        console.error(\"Search error:\", error);\n        console.log(1);\n        displayErrorBanner('ERROR: Invalid Search');\n        // Remove window.location.reload() from here\n    }\n    };\n    \n    \n    \n\n    const toggleDropdown = (dropdown) => {\n        setActiveDropdown(activeDropdown === dropdown ? null : dropdown);\n    };\n\n    const createPgnFromGameIDs = (gameIDs, pgnList) => {\n        // Ensure each PGN game is properly formatted\n        const combinedPgn = gameIDs.map(id => {\n            const gamePgn = pgnList[id];\n            if (gamePgn){\n    \n            // Ensure that the game has all required headers and follows the PGN structure\n            if (!gamePgn.includes('[Event')) {\n                console.error(`Missing [Event] tag for game with ID ${id}`);\n                return ''; // Skip invalid games\n            }\n            return gamePgn.trim(); // Clean up any extra spaces around the PGN\n        }\n        else{return '';}\n    \n        }).filter(Boolean).join('\\n\\n'); // Join games with a double newline separating them\n    \n        return combinedPgn;\n    };\n    \n    \n    const handleLineClick = (gameIDs) => {\n        const combinedPgn = createPgnFromGameIDs(gameIDs, thePgnList);\n    \n        // Store the combined PGN in localStorage\n        localStorage.setItem('combinedPgn', combinedPgn);\n    \n        // Clear imported games\n        localStorage.removeItem('importedGames');\n    \n        // Redirect to analysis board\n        window.location.href = '/analysis-board';\n    };\n    \n    const handleFilterClick = () => {\n        setShowAdvancedFilter(true);\n    };\n    const handleSaveFilter = (params) => {\n        setFilterParams(params);\n        setShowAdvancedFilter(false);\n        // Apply the filters directly to the games list or during game fetching\n    };\n    \n    const formatMovesWithNumbers = (line) => {\n        const moves = line.Line.split(\"*\").filter(Boolean);\n        const opening = detectOpening(moves);\n        const formattedMoves = moves.map((move, index) => {\n            const moveNumber = Math.floor(index / 2) + 1;\n            return index % 2 === 0 ? `${moveNumber}. ${move}` : `${moveNumber}...${move}`;\n        }).join(\" \");\n    \n        return `${opening}: ${formattedMoves}`;\n    };\n\n    const categorizeLines = (finalLongDF) => {\n        return finalLongDF.map(row => {\n            const avgPointsColumn = \"AvgPoints\";\n            const avgPoints = row[avgPointsColumn];\n    \n                if (avgPoints <= 0) {\n                    row.MistakeType = \"Fatal Bafflement\";\n                } else if (avgPoints <= 0.2) {\n                    row.MistakeType = \"Major Incompetence\";\n                } else if (avgPoints <= 0.4) {\n                    row.MistakeType = \"Slight Inconsistency\";\n                } else {\n                    row.MistakeType = \"None\";\n                }\n            \n            return row;\n        }).filter(row => row.MistakeType !== \"None\");\n    };\n\n    const processGames = async (games) => {\n        setProcessing(true);\n        const eventList = [];\n        const siteList = [];\n        const whiteList = [];\n        const blackList = [];\n        const resultList = [];\n        const dateList = [];\n        const whiteEloList = [];\n        const blackEloList = [];\n        const fullValList = [];\n        const initialColnames = [];\n        const movesList = [];\n        const pgnList = [];\n        const chess = new Chess();\n        const minProbability = filterParams ? filterParams.minProbability : 0.2; // Default to 0.2\n        let updatedStats = {};\n        let totalWins = 0;\n        let totalLosses = 0;\n        let totGames = 0;\n        let totalScore = 0;\n        \n\n\n    \n        games.forEach((game, index) => {\n            try {\n                chess.loadPgn(game);\n                let gameURL = chess.header()['Site']; \n                chess.deleteComments();\n                let moves = chess.history();\n                movesList.push(moves);\n                const opening = detectOpening(moves);\n                const result = chess.header()[\"Result\"];\n\n\n                if (!updatedStats[opening]) {\n                    updatedStats[opening] = { numGames: 0, wins: 0, losses: 0, score: 0 };\n                  }\n                  // Update stats based on game result (simplified example)\n                  updatedStats[opening].numGames += 1;\n                  if ((result === '1-0' )&(opponentColor==\"White\")) {\n                    totalWins += 1;\n                    totGames  +=1;\n                    totalScore +=1;\n                    updatedStats[opening].wins += 1;\n                    updatedStats[opening].score += 1;\n                } else if ((result === '1-0' )&(opponentColor==\"Black\")) {\n                    totalLosses += 1;\n                    totGames  +=1;\n                    updatedStats[opening].losses += 1;\n                } else if ((result === '0-1' )&(opponentColor==\"Black\")) {\n                    totalWins += 1;\n                    totGames  +=1;\n                    totalScore +=1;\n                    updatedStats[opening].wins += 1;\n                    updatedStats[opening].score += 1;\n                } else if ((result === '0-1' )&(opponentColor==\"White\")) {\n                    totalLosses += 1;\n                    totGames +=1;\n                    updatedStats[opening].losses += 1;\n                } else if (result === '1/2-1/2') {\n                    totGames  +=1;\n                    totalScore +=0.5;\n                    updatedStats[opening].draws += 1;\n                    updatedStats[opening].score += 0.5;\n                }\n\n            \n                  // Increment games processed counter\n                  setGamesProcessed(prev => prev + 1);\n                  setOpeningStats({...updatedStats});\n                \n    \n                const valList = [];\n                let triangle = String(moves[0]) + \"*\";\n                valList.push(triangle);\n    \n                pgnList.push(chess.pgn());\n                siteList.push(gameURL); // Store the game URL here\n                eventList.push(chess.header()[\"Event\"]);\n                siteList.push(chess.header()[\"Site\"]);\n                whiteList.push(chess.header()[\"White\"]);\n                blackList.push(chess.header()[\"Black\"]);\n                resultList.push(chess.header()[\"Result\"]);\n                dateList.push(chess.header()[\"Date\"]);\n                whiteEloList.push(chess.header()[\"WhiteElo\"]);\n                blackEloList.push(chess.header()[\"BlackElo\"]);\n    \n                for (let i = 1; i < 25 && i < moves.length; i++) {\n                    triangle += String(moves[i]) + \"*\";\n                    valList.push(triangle);\n                }\n                fullValList.push(valList);\n\n                \n                \n            } catch (error) {\n                console.error(`Error processing game at index ${index}:`, error.message);\n                // Skip this game and continue with the next one\n            }\n            \n        });\n        setShowTable(true);\n        setProcessing(false);\n    \n        console.log(fullValList);\n\n        setThePgnList(pgnList); // Set the pgnList to the state variable thePgnList\n        setGameURLs(siteList);  // Store the URLs for later use\n        \n\n\n        for (let j = 1; j <= 25; j++) {\n            initialColnames.push(\"Line\" + String(j));\n        }\n\n        const dataFrame = fullValList.map((row, index) => ({\n            ...row.reduce((acc, val, i) => ({ ...acc, [initialColnames[i]]: val }), {}),\n            Event: eventList[index],\n            Site: siteList[index],\n            White: whiteList[index],\n            Black: blackList[index],\n            WhiteResult1: resultList[index] === '1-0' ? 1 : (resultList[index] === '1/2-1/2' ? 0.5 : 0),\n            Date: dateList[index],\n            WhiteElo: whiteEloList[index],\n            BlackElo: blackEloList[index],\n            Pgn: pgnList[index],\n            GameID: index\n        }));\n        console.log(\"dataFrame\");\n        console.log(dataFrame);\n\n        const filteredDF = dataFrame.filter(row => row[opponentColor] === opponentName);\n        console.log(1);\n        console.log(filteredDF);\n\n        const moveProb1 = filteredDF.reduce((acc, row) => {\n            acc[row.Line1] = (acc[row.Line1] || 0) + 1;\n            return acc;\n        }, {});\n        const totalGames = filteredDF.length;\n\n        filteredDF.forEach(row => {\n            row.MoveProbability1 = moveProb1[row.Line1] / totalGames;\n        });\n        console.log(2);\n        console.log(filteredDF);\n\n        for (let i = 1; i < 25; i++) {\n            filteredDF.forEach(row => {\n                row[`WhiteResult${i + 1}`] = row.WhiteResult1;\n            });\n\n            const moveProb = filteredDF.reduce((acc, row) => {\n                const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n                acc[key] = (acc[key] || 0) + 1;\n                return acc;\n            }, {});\n\n            const lineCount = filteredDF.reduce((acc, row) => {\n                acc[row[`Line${i}`]] = (acc[row[`Line${i}`]] || 0) + 1;\n                return acc;\n            }, {});\n\n            filteredDF.forEach(row => {\n                const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n                row[`MoveProbability${i + 1}`] = moveProb[key] / lineCount[row[`Line${i}`]];\n            });\n        }\n        console.log(3);\n        console.log(filteredDF);\n\n        filteredDF.forEach(row => {\n            let pw = 1;\n            let pb = 1;\n            for (let i = 1; i <= 25; i++) {\n                if (i % 2 === 1) {\n                    pw *= row[`MoveProbability${i}`] || 1;\n                } else {\n                    pb *= row[`MoveProbability${i}`] || 1;\n                }\n                row[`LineProbability(W)${i}`] = pw;\n                row[`LineProbability(B)${i}`] = pb;\n            }\n        });\n        console.log(4);\n        console.log(\"filteredDF\");\n        console.log(filteredDF);\n\n        const longDF = [];\n        filteredDF.forEach(row => {\n            for (let i = 1; i <= 25; i++) {\n                longDF.push({\n                    GameID: row.GameID,\n                    Ply: i,\n                    Line: row[`Line${i}`],\n                    EVAL: row[`EVAL${i}`],\n                    WhiteResult: row[`WhiteResult${i}`],\n                    MoveProbability: row[`MoveProbability${i}`],\n                    LineProbabilityW: row[`LineProbability(W)${i}`],\n                    LineProbabilityB: row[`LineProbability(B)${i}`],\n                    Pgn: row.Pgn\n                });\n            }\n        });\n        console.log(\"longDF\");\n        console.log(longDF);\n        // Step to create LineProbability column\n        longDF.forEach(row => {\n    // If opponentColor is 'Black', use LineProbabilityB; otherwise, use LineProbabilityW\n    row.LineProbability = opponentColor === 'Black' ? row.LineProbabilityB : row.LineProbabilityW;\n});\n\n\n        // Add #Games column\n        const lineCounts = longDF.reduce((acc, row) => {\n            acc[row.Line] = (acc[row.Line] || 0) + 1;\n            return acc;\n        }, {});\n\n        longDF.forEach(row => {\n            row['#Games'] = lineCounts[row.Line];\n        });\n\n        // Calculate lower limit based on Min Flaw Frequency\n        let minGames = 1; // Default for At Least One Game\n        if (precisionLevel === '0.5% of Games') {\n            minGames = Math.max(1,Math.round(games.length/200));\n        } else if (precisionLevel === '0.3% of Games') {\n            minGames = Math.max(1,Math.round(games.length/333));\n        }\n        //These percentages are wrong since total game counter is flawed\n        //Need to update\n\n        console.log(\"minGames\");\n        console.log(minGames);\n\n         // Filter for lines which meet minimum number of games\n         const minGameFilteredDF = longDF.filter(row => \n            (row[\"#Games\"] >= minGames)\n        );\n        // Filter for lines with probability greater than 0.2\n        const filteredLongDF = minGameFilteredDF.filter(row => \n            (opponentColor === 'Black' && row.LineProbabilityB > minProbability) ||\n            (opponentColor === 'White' && row.LineProbabilityW > minProbability)\n        );\n        console.log(\"filteredLongDF\");\n        console.log(filteredLongDF);\n\n        const groupedByLine = filteredLongDF.reduce((acc, row) => {\n            if (!acc[row.Line]) {\n                acc[row.Line] = {\n                    Line: row.Line,\n                    TotalGames: 0,\n                    TotalWhitePoints: 0,\n                    TotalLosses: 0,\n                    AverageWhitePoints: 0,\n                    GameIDs: [],\n                    TotalLineProbability: 0, // Track total probability for averaging later\n            AverageLineProbability: 0 // To store the average probabil\n                };\n            }\n            acc[row.Line].TotalGames += 1;\n            acc[row.Line].TotalWhitePoints += row.WhiteResult;\n            acc[row.Line].TotalLosses += (1 - row.WhiteResult);\n            acc[row.Line].AverageWhitePoints = acc[row.Line].TotalWhitePoints / acc[row.Line].TotalGames;\n            acc[row.Line].GameIDs.push(row.GameID);\n            acc[row.Line].TotalLineProbability += row.LineProbability; // Sum the probabilities for the line\n            acc[row.Line].AverageLineProbability = acc[row.Line].TotalLineProbability / acc[row.Line].TotalGames; // Calculate average LineProbability\n            return acc;\n        }, {});\n\n        \n\n      \n\n        Object.values(groupedByLine).forEach(row => {\n            row['AvgPoints'] = opponentColor === \"White\" ? row.AverageWhitePoints : 1 - row.AverageWhitePoints;\n        });\n\n        console.log(\"groupedByLine\");\n        console.log(groupedByLine);\n        \n\n\n        // Convert groupedByLine to an array and sort by WinPercentage\n        const groupedLongDF = Object.values(groupedByLine);\n        const sortedLongDF = groupedLongDF.sort((a, b) => {\n        return a.AvgPoints - b.AvgPoints;\n    });\n        \n\n        console.log(\"sortedLongDF\");\n        console.log(sortedLongDF);\n        \n\n    const definedDF = sortedLongDF.filter(row => row.Line !== undefined);\n    console.log(\"definedDF\");\n        console.log(definedDF);\n \n        let fullLinesStr = \"//\";\n        let partialLinesStr = \"//\";\n    const nonSubsetLongDF = definedDF.filter(row => {\n        const subsets = [];\n        const lineMoves = row.Line.split(\"*\").filter(Boolean);\n        \n// SUBSET CHECK\n        // Check if value already in partialLinesStr\n        if (partialLinesStr.includes(\"//\" + row.Line +\"//\")) {\n                return false;\n            }\n        \n\n\n        // SUPERSET CHECK\n        // Check if any subset is already in fullLinesStr\n\n        // Generate all possible subsets of the current line\n        for (let i = 1; i <= lineMoves.length; i++) {\n            const subset = lineMoves.slice(0, i).join(\"*\") + \"*\"; \n            if (fullLinesStr.includes(\"//\" + subset+ \"//\")) {\n                return false;\n            }\n            partialLinesStr += subset + \"//\";\n    };\n        fullLinesStr += row.Line+ \"//\";\n        return true;\n    });\n\n    console.log(\"nonSubsetLongDF\");\n    console.log(nonSubsetLongDF);\n        const categorizedLines = categorizeLines(nonSubsetLongDF);\n        setFilteredData(categorizedLines);\n        console.log(\"filteredData\");\n    console.log(filteredData);\n\n        const commonLines = findCommonLines(movesList);\n        setCommonLines(commonLines);\n\n        setProcessing(false); // Stop processing\n    };\n\n    const findCommonLines = (movesList) => {\n        const lineCounts = {};\n\n        movesList.forEach(moves => {\n            moves.forEach((move, index) => {\n                const line = moves.slice(0, index + 1).join(' ');\n                if (!lineCounts[line]) {\n                    lineCounts[line] = 0;\n                }\n                lineCounts[line]++;\n            });\n        });\n\n        const sortedLines = Object.entries(lineCounts).sort((a, b) => b[1] - a[1]);\n        return sortedLines.slice(0, 5);\n    };\n    const handleCancelFilter = () => {\n        setShowAdvancedFilter(false);\n    };\n    \n    const sortedStats = Object.entries(openingStats).sort(([, a], [, b]) => b.numGames - a.numGames);\n\n\n    return (\n        <div className=\"weakness-finder\">\n            <header>\n                <nav>\n                    <ul>\n                        <li\n                            onMouseEnter={() => setIsLogoHovered(true)}\n                            onMouseLeave={() => setIsLogoHovered(false)}\n                        >\n                            <Link to=\"/\">\n                                <img src={isLogoHovered ? logoWhite : logo} alt=\"Home\" style={{ height: '39px' }} />\n                            </Link>\n                        </li>\n                        {isMobile ? (\n                            <div className=\"navdropdown-container\">\n                                <div\n                                    className={`${isDropdownOpen ? 'navdropdown' : 'navdropdown'}`}\n                                    onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n                                >\n                                    <li\n                                        className=\"navdropdown-header\"\n                                        style={{\n                \n                                            lineHeight: '1.78',\n                                            padding: '10px 20px',\n                \n                                            fontSize: '22px',\n                                            color: 'white',\n                                        }}\n                                        \n                                    >\n                                        ☰ Menu\n                                    </li>\n                                    {isDropdownOpen && (\n                                        <ul>\n                                            <li>\n                                                <Link\n                                                    to=\"/blunder-punisher\"\n                                                    className=\"nav-link\"\n                                                    onClick={() => setIsDropdownOpen(false)}\n                                                >\n                                                    Blunder Punisher\n                                                </Link>\n                                            </li>\n                                            <li>\n                                                <Link\n                                                    to=\"/weakness-finder\"\n                                                    className=\"nav-link\"\n                                                    onClick={() => setIsDropdownOpen(false)}\n                                                >\n                                                    Weakness Finder\n                                                </Link>\n                                            </li>\n                                            <li>\n                                                <Link\n                                                    to=\"/analysis-board\"\n                                                    className=\"nav-link\"\n                                                    onClick={() => setIsDropdownOpen(false)}\n                                                >\n                                                    Analysis Board\n                                                </Link>\n                                            </li>\n                                            <li>\n                                                <Link\n                                                    to=\"/feedback\"\n                                                    className=\"nav-link\"\n                                                    onClick={() => setIsDropdownOpen(false)}\n                                                >\n                                                    Your Feedback\n                                                </Link>\n                                            </li>\n                                        </ul>\n                                    )}\n                                </div>\n                            </div>\n                        ) : (\n                            <ul>\n                                <li>\n                                    <Link to=\"/blunder-punisher\" className=\"prepare-link\">\n                                        Blunder Punisher\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to=\"/weakness-finder\">Weakness Finder</Link>\n                                </li>\n                                <li>\n                                    <Link to=\"/analysis-board\">Analysis Board</Link>\n                                </li>\n                                <li>\n                                    <Link to=\"/feedback\">Your Feedback</Link>\n                                </li>\n                            </ul>\n                        )}\n                    </ul>\n                </nav>\n            </header>\n            <main>\n                <section className=\"hero3\">\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\n    <h1 className=\"title\" style={{ position: 'absolute', left: '50%', transform: 'translateX(-50%)' }}>Weakness Finder</h1>\n    <p style={{ fontStyle: 'italic', fontSize: 20, marginLeft: 'auto' }}>Punish your opponent's strategic flaws!</p>\n</div>\n                    {!showAdvancedFilter ? (\n                        <div className=\"filter-container\">\n                            <button onClick={handleFilterClick} className=\"adv-filter-button\">🔍</button>\n                            <div className=\"tab-container\">\n                                <div className=\"tab\">\n                                    <button className={inputMethod === 'chesscom' ? 'tablinks active' : 'tablinks'} onClick={() => setInputMethod('chesscom')}>Chess.com</button>\n                                    <button className={inputMethod === 'lichess' ? 'tablinks active' : 'tablinks'} onClick={() => setInputMethod('lichess')}>Lichess</button>\n                                    <button className={inputMethod === 'pgn' ? 'tablinks active' : 'tablinks'} onClick={() => setInputMethod('pgn')}>PGN</button>\n                                </div>\n                                <div className=\"tabcontent\" style={{ display: inputMethod === 'pgn' ? 'block' : 'none' }}>\n                                    <div className=\"form-group\">\n                                        <input type=\"file\" onChange={handleFileSelect} />\n                                        <label htmlFor=\"opponentName\">Player Name:</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"opponentName\"\n                                            value={opponentName}\n                                            onChange={(e) => setOpponentName(e.target.value)}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"tabcontent\" style={{ display: inputMethod === 'lichess' ? 'block' : 'none' }}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"opponentUsername\">Player Username:</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"opponentUsername\"\n                                            value={opponentName}\n                                            onChange={(e) => setOpponentName(e.target.value)}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"tabcontent\" style={{ display: inputMethod === 'chesscom' ? 'block' : 'none' }}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"opponentUsername\">Player Username:</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"opponentUsername\"\n                                            value={opponentName}\n                                            onChange={(e) => setOpponentName(e.target.value)}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"opponentColor\">Piece Color:</label>\n                                    <select\n                                        id=\"opponentColor\"\n                                        value={opponentColor}\n                                        onChange={(e) => setOpponentColor(e.target.value)}\n                                    >\n                                        <option value=\"White\">White</option>\n                                        <option value=\"Black\">Black</option>\n                                    </select>\n                                </div>\n                                <button onClick={handleStart} className=\"spec-button\" style={{ marginTop: 6.5, marginLeft: 10 }}>Start</button>\n                                <button onClick={handleReset} className=\"spec-button\" style={{ marginTop: 6.5, marginLeft: 10 }}>Reset</button>\n                            </div>\n                            \n                            {processing ? (\n        // Rotating white king while games are being processed\n        <div className=\"rotating-king\">\n          <img src={\"https://upload.wikimedia.org/wikipedia/commons/4/42/Chess_klt45.svg\"} alt=\"Rotating King\" className=\"king-icon\" />\n        </div>\n      ) : (\n        // Toggle button after processing is complete\n        <div className=\"arrow-button\" onClick={handleToggle}>\n          <img  \n          src={rightArrow }\n            alt=\"Toggle View\" \n            className={`arrow-icon ${showTable ? '' : 'rotate'}`}\n          />\n        </div>\n      )}\n        {showTable && gamesProcessed > 0 &&\n        <div className=\"table-container\">\n        <table className=\"scrollable-table\">\n          <thead>\n            <tr>\n              <th>Opening</th>\n              <th>Games</th>\n              <th>Score %</th>\n              <th>Wins</th>\n              <th>Losses</th>\n            </tr>\n          </thead>\n          <tbody>\n            {sortedStats.map(([opening, stats], index) => (\n              <tr key={index}>\n                <td>{opening}</td>\n                <td>{stats.numGames}</td>\n                <td>{((stats.score / stats.numGames) * 100).toFixed(2)}%</td>\n                <td>{stats.wins}</td>\n                <td>{stats.losses}</td>\n              </tr>\n            ))}\n          </tbody>\n          <tfoot>\n        <tr>\n          <td>Total</td>\n          <td>{sortedStats.reduce((total, [, stats]) => total + stats.numGames, 0)}</td>\n          <td>{((sortedStats.reduce((total, [, stats]) => total + stats.score, 0) / sortedStats.reduce((total, [, stats]) => total + stats.numGames, 0)) * 100).toFixed(2)}%</td>\n          <td>{sortedStats.reduce((total, [, stats]) => total + stats.wins, 0)}</td>\n          <td>{sortedStats.reduce((total, [, stats]) => total + stats.losses, 0)}</td>\n        </tr>\n      </tfoot>\n          \n        </table>\n        </div>\n        \n      }\n                            \n                            {showTable ? (\n                                <div className=\"common-lines\">\n                                </div>\n                            ) : (\n                                <div>\n                                <div className=\"dropdown-container\">\n                                    <div className=\"dropdown\">\n                                        <button onClick={() => toggleDropdown('Fatal Bafflements')}>\n                                            Fatal Bafflements: ({filteredData.filter(line => line.MistakeType === 'Fatal Bafflement').length})\n                                        </button>\n                                        {activeDropdown === 'Fatal Bafflements' && (\n                                            <ul>\n                                                {filteredData.filter(line => line.MistakeType === 'Fatal Bafflement').map((line, index) => (\n                                                    <li key={index} className='line-item' onClick={() => handleLineClick(line.GameIDs)}>\n                                                        {formatMovesWithNumbers(line)}\n                                                        <p>Score: {Math.round(line.AvgPoints * 100)}% w/ Trap Probability: {Math.round(line.AverageLineProbability * 100)}%</p>\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        )}\n                                    </div>\n                                    <div className=\"dropdown\">\n                                        <button onClick={() => toggleDropdown('Major Incompetencies')}>\n                                            Major Incompetencies: ({filteredData.filter(line => line.MistakeType === 'Major Incompetence').length})\n                                        </button>\n                                        {activeDropdown === 'Major Incompetencies' && (\n                                            <ul>\n                                                {filteredData.filter(line => line.MistakeType === 'Major Incompetence').map((line, index) => (\n                                                    <li key={index} className='line-item' onClick={() => handleLineClick(line.GameIDs)}>\n                                                        {formatMovesWithNumbers(line)}\n                                                        <p>Score: {Math.round(line.AvgPoints * 100)}% w/ Trap Probability: {Math.round(line.AverageLineProbability * 100)}%</p>\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        )}\n                                    </div>\n                                    <div className=\"dropdown\">\n                                        <button onClick={() => toggleDropdown('Slight Inconsistencies')}>\n                                            Slight Inconsistencies: ({filteredData.filter(line => line.MistakeType === 'Slight Inconsistency').length})\n                                        </button>\n                                        {activeDropdown === 'Slight Inconsistencies' && (\n                                            <ul>\n                                                {filteredData.filter(line => line.MistakeType === 'Slight Inconsistency').map((line, index) => (\n                                                    <li key={index} className='line-item' onClick={() => handleLineClick(line.GameIDs)}>\n                                                        {formatMovesWithNumbers(line)}\n                                                        <p>Score: {Math.round(line.AvgPoints * 100)}% w/ Trap Probability: {Math.round(line.AverageLineProbability * 100)}%</p>\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        )}\n                                    </div>\n                                </div>\n                                </div>\n                            )}\n                        </div>\n                    ) : (\n                        <AdvancedFilter onSave={handleSaveFilter} onCancel={handleCancelFilter} />\n                    )}\n                </section>\n            </main>\n            <footer>\n            <p>&copy; 2025 CheckmateWizard.com All rights reserved.</p>\n            </footer>\n        </div>\n    );\n};\n\nexport default WeaknessFinder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}