{"ast":null,"code":"var _jsxFileName = \"/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/AnalysisBoard.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport PropTypes from \"prop-types\";\nimport { Chess } from \"chess.js\";\nimport Chessboard from \"chessboardjsx\";\nimport EditBoard from \"./EditBoard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STOCKFISH = window.STOCKFISH;\nconst game = new Chess();\nclass AnalysisBoard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orientation: \"white\",\n      evaluation: \"\",\n      bestLine: \"\",\n      currentPly: 1,\n      future: [],\n      showEvaluation: false,\n      moveHistory: [],\n      fullGame: [],\n      importedGames: [],\n      showDropdown: false,\n      selectedGame: null,\n      gamesDetails: [],\n      showEditBoard: false,\n      // Add this line\n      fen: this.props.fen || 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1' // Set initial FEN\n    };\n    this.handleGameSelect = pgn => {\n      game.reset();\n      const tmp = new Chess();\n      tmp.loadPgn(pgn);\n      this.setState({\n        fen: this.props.fen || \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"\n      });\n      this.future = tmp.history();\n      this.moveHistory = tmp.history();\n      this.fullGame = this.moveHistory;\n      this.engineGame().prepareMove();\n    };\n    this.handleFileSelect = async event => {\n      const file = event.target.files[0];\n      if (!file) {\n        return;\n      }\n      const reader = new FileReader();\n      reader.onload = e => {\n        const fullPgn = e.target.result;\n        let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n        let games = rawGames.map((game, index) => {\n          return ('[Event' + game).trim();\n        });\n        const details = games.map(pgn => {\n          const chess = new Chess();\n          chess.loadPgn(pgn);\n          const headers = chess.header();\n          return {\n            pgn: pgn,\n            details: `${headers.White} vs ${headers.Black}, ${headers.Result}, ${headers.Date}`\n          };\n        });\n        this.setState({\n          importedGames: details,\n          selectedGame: null\n        });\n      };\n      reader.readAsText(file);\n    };\n    this.displayGameDetails = pgn => {\n      const chess = new Chess();\n      chess.loadPgn(pgn);\n      const headers = chess.header();\n      return `${headers.White} vs ${headers.Black}, ${headers.Result}, ${headers.Date}`;\n    };\n    this.handleFlipBoard = () => {\n      this.setState(({\n        orientation\n      }) => ({\n        orientation: orientation === 'white' ? 'black' : 'white'\n      }));\n    };\n    this.handleResetBoard = () => {\n      game.reset();\n      this.setState({\n        fen: game.fen()\n      });\n      this.future = [];\n      this.moveHistory = [];\n      this.fullGame = [];\n      this.engineGame().prepareMove();\n    };\n    this.toggleStockfishEvaluation = () => {\n      this.setState(prevState => ({\n        showEvaluation: !prevState.showEvaluation\n      }));\n    };\n    this.goToEnd = () => {\n      const moves = game.history();\n      const tmp = new Chess();\n      const previous = moves.length + this.future.length - 1;\n      if (previous >= 0) {\n        if (moves.length > 0) {\n          for (var i = 0; i < moves.length; i += 1) {\n            tmp.move(moves[i]);\n          }\n        }\n        if (this.future.length - 1 >= 0) {\n          for (var i = 0; i < this.future.length; i += 1) {\n            tmp.move(this.future[i]);\n          }\n          const previous_fen = tmp.fen();\n          const previous_pgn = tmp.pgn();\n          this.future = [];\n          game.load(previous_fen);\n          game.loadPgn(previous_pgn);\n          this.setState({\n            fen: previous_fen\n          });\n          this.moveHistory = game.history();\n          this.setState({\n            currentPly: this.moveHistory.length\n          });\n          if (!game.isGameOver()) {\n            this.engineGame().prepareMove();\n          }\n        } else {\n          return;\n        }\n      } else {\n        return;\n      }\n    };\n    this.goToNextMove = () => {\n      if (this.future.length > 0) {\n        game.move(this.future[0]);\n        this.setState({\n          fen: game.fen()\n        });\n        this.future.shift();\n        this.moveHistory = game.history();\n        this.setState({\n          currentPly: this.moveHistory.length\n        });\n        if (!game.isGameOver()) {\n          this.engineGame().prepareMove();\n        }\n      }\n      return;\n    };\n    this.goToPreviousMove = () => {\n      const moves = game.history();\n      const tmp = new Chess();\n      const previous = moves.length - 1;\n      if (previous >= 0) {\n        for (var i = 0; i < previous; i += 1) {\n          tmp.move(moves[i]);\n        }\n        const previous_fen = tmp.fen();\n        const previous_pgn = tmp.pgn();\n        this.future.unshift(moves[previous]);\n        tmp.move(moves[previous]);\n        game.load(previous_fen);\n        game.loadPgn(previous_pgn);\n        this.setState({\n          fen: previous_fen\n        });\n        this.moveHistory = game.history();\n        this.setState({\n          currentPly: this.moveHistory.length\n        });\n        if (!game.isGameOver()) {\n          this.engineGame().prepareMove();\n        }\n      }\n      return;\n    };\n    this.goToStart = () => {\n      const moves = game.history();\n      const tmp = new Chess();\n      const previous_fen = tmp.fen();\n      const previous_pgn = tmp.pgn();\n      const previous = moves.length - 1;\n      if (previous >= 0) {\n        for (var i = 0; i < previous; i += 1) {\n          tmp.move(moves[i]);\n        }\n        this.future.unshift(...moves);\n        game.load(previous_fen);\n        game.loadPgn(previous_pgn);\n        this.setState({\n          fen: previous_fen\n        });\n        this.moveHistory = [];\n        this.setState({\n          currentPly: this.moveHistory.length\n        });\n        if (!game.isGameOver()) {\n          this.engineGame().prepareMove();\n        }\n      }\n      return;\n    };\n    this.goToMove = moveIndex => {\n      const moves = this.fullGame;\n      const tmp = new Chess();\n      for (let i = 0; i <= moveIndex; i++) {\n        tmp.move(moves[i]);\n      }\n      const previous_fen = tmp.fen();\n      const previous_pgn = tmp.pgn();\n      game.loadPgn(previous_pgn);\n      this.setState({\n        fen: previous_fen\n      });\n      const newMoveHistory = tmp.history();\n      this.moveHistory = newMoveHistory;\n      this.future = moves.slice(moveIndex + 1);\n      this.setState({\n        currentPly: this.moveHistory.length\n      });\n      if (!game.isGameOver()) {\n        this.engineGame().prepareMove();\n      }\n    };\n    this.engineGame = options => {\n      options = options || {};\n      let engine = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(options.stockfishjs || \"stockfish.js\");\n      engine.postMessage(\"uci\");\n      engine.onmessage = event => {\n        const {\n          currentPly\n        } = this.state;\n        let line;\n        if (event && typeof event === \"object\") {\n          line = event.data;\n          const evaluation = this.extractEvaluation(line);\n          const bestLine = this.extractBestLine(line);\n          this.setState({\n            evaluation,\n            bestLine\n          });\n        } else {\n          line = event;\n        }\n        const bestLine = this.extractBestLine(line);\n        this.setState({\n          previousOutput: bestLine\n        });\n      };\n      return {\n        prepareMove: function () {\n          engine.postMessage(\"position fen \" + game.fen());\n          engine.postMessage(\"go depth 15\");\n        }\n      };\n    };\n    this.handleEditBoard = () => {\n      this.setState(prevState => ({\n        showEditBoard: !prevState.showEditBoard\n      }));\n    };\n    this.updateFenAndCloseEdit = newFen => {\n      game.reset();\n      this.setState({\n        fen: newFen,\n        showEditBoard: false\n      });\n      this.setState({\n        currentPly: 1,\n        future: []\n      });\n      this.moveHistory = [];\n      this.engineGame().prepareMove();\n    };\n    this.onDrop = ({\n      sourceSquare,\n      targetSquare\n    }) => {\n      const legalMoves = game.moves({\n        verbose: true\n      });\n      const move = legalMoves.find(move => move.from === sourceSquare && move.to === targetSquare);\n      if (!move) {\n        console.log(\"Illegal move\");\n        return;\n      }\n      if (move.san === this.future[0]) {\n        this.future.shift();\n      } else {\n        this.future = [];\n      }\n      game.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: \"q\"\n      });\n      this.moveHistory = game.history();\n      this.setState({\n        currentPly: this.moveHistory.length\n      });\n      this.fullGame = this.moveHistory.concat(this.future);\n      this.setState(prevState => ({\n        fen: game.fen()\n      }));\n      if (!game.isGameOver()) {\n        this.engineGame().prepareMove();\n      }\n    };\n    this.extractEvaluation = line => {\n      const mateEvalMatch = line.match(/score mate (.+)/);\n      const evalMatch = line.match(/score cp (-?\\d+)/);\n      if (evalMatch) {\n        const evaluation = Math.round(parseInt(evalMatch[1]) * 0.01 * 100) / 100;\n        if (evaluation >= 0) {\n          if (game.turn() === \"b\") {\n            return -evaluation;\n          }\n          return \"+\" + evaluation;\n        }\n        if (game.turn() === \"w\") {\n          return evaluation;\n        }\n        return \"+\" + -evaluation;\n      } else {\n        if (mateEvalMatch) {\n          const evaluation = parseInt(mateEvalMatch[1]);\n          if (evaluation >= 0) {\n            if (game.turn() === \"b\") {\n              return \"Black Mate in \" + evaluation;\n            }\n            return \"White Mate in \" + evaluation;\n          }\n          if (game.turn() === \"w\") {\n            return \"Black Mate in \" + -evaluation;\n          }\n          return \"White Mate in \" + -evaluation;\n        }\n      }\n      return null;\n    };\n    this.extractBestLine = line => {\n      const currentPly = game.history().length + 1;\n      const bestLineMatch = line.match(/pvSan (.*) bmc/);\n      if (bestLineMatch) {\n        const moves = bestLineMatch[1].split(\" \");\n        const sanMoves = [];\n        if (moves.length !== 1) {\n          for (let i = 0; i < Math.min(2 * Math.floor(moves.length / 2), 14); i += 1) {\n            const moveNumber = i + currentPly;\n            const sanMove = moveNumber % 2 === 1 ? `${Math.floor((moveNumber + 1) / 2)}.${moves[i]}` : `${Math.floor((moveNumber + 1) / 2)}...${moves[i]}`;\n            sanMoves.push(sanMove);\n          }\n          return sanMoves.join(\" \");\n        } else {\n          const sanMove = currentPly % 2 === 1 ? `${Math.floor((currentPly + 1) / 2)}.${moves[0]}` : `${Math.floor((currentPly + 1) / 2)}...${moves[0]}`;\n          return sanMove;\n        }\n      }\n      return this.state.previousOutput;\n    };\n  }\n  componentDidMount() {\n    if (this.props.pgn) {\n      game.loadPgn(this.props.pgn);\n      this.future = [];\n      this.moveHistory = game.history();\n      this.fullGame = this.moveHistory.concat(this.future);\n      this.importedGames = [];\n    } else {\n      game.reset();\n      this.future = [];\n      this.moveHistory = [];\n      this.fullGame = [];\n      this.importedGames = [];\n      this.setState({\n        fen: this.props.fen\n      });\n    }\n    this.engineGame().prepareMove();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.selectedGame !== this.state.selectedGame && this.state.selectedGame) {\n      const chess = new Chess();\n      chess.loadPgn(this.state.selectedGame);\n      this.setState({\n        fen: chess.fen()\n      });\n    }\n    if (prevProps.pgn !== this.props.pgn && this.props.pgn) {\n      game.reset();\n      game.loadPgn(this.props.pgn);\n      this.setState({\n        fen: game.fen(),\n        currentPly: 1,\n        future: []\n      });\n      this.moveHistory = game.history();\n      this.engineGame().prepareMove();\n    }\n  }\n  render() {\n    const {\n      fen,\n      orientation,\n      evaluation,\n      bestLine,\n      currentPly,\n      future,\n      showEvaluation,\n      moveHistory,\n      fullGame,\n      importedGames,\n      showDropdown,\n      showEditBoard\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analysis-toolkit\",\n        id: \"EditingOff\",\n        style: {\n          display: showEditBoard ? \"none\" : \"block\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => this.setState({\n            showDropdown: !this.state.showDropdown\n          }),\n          children: [\"Games Imported From PGN Database: \", importedGames.length, showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"games-list\",\n            children: importedGames.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Click Below to Import games\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: importedGames.map((game, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"game-item\",\n                onClick: () => this.handleGameSelect(game.pgn),\n                children: game.details\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"file-button\",\n          type: \"file\",\n          onChange: this.handleFileSelect,\n          style: {\n            position: 'absolute',\n            bottom: 130,\n            left: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: boardsContainer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"analysis-board-container\",\n            style: {\n              display: \"block\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Chessboard, {\n              position: fen,\n              width: 520,\n              onDrop: this.onDrop,\n              orientation: orientation,\n              boardStyle: boardStyle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"move-history\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Move History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: this.fullGame && this.fullGame.map((move, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: index === currentPly - 1 ? 'selected' : '',\n              onClick: () => this.goToMove(index),\n              children: [index % 2 === 0 ? `${index / 2 + 1}. ` : `${(index - 1) / 2 + 1}...`, move]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleEditBoard,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleFlipBoard,\n            children: \"Flip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleResetBoard,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.toggleStockfishEvaluation,\n            children: \"\\uD83D\\uDC1F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.goToStart,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.goToPreviousMove,\n            children: \"\\u21E6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.goToNextMove,\n            children: \"\\u21E8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.goToEnd,\n            children: \"End\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this), showEvaluation && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stockfish-evaluation\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Stockfish Eval: \", evaluation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: bestLine\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), showEditBoard && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-board-container\",\n        id: \"EditingOn\",\n        style: {\n          display: \"block\"\n        },\n        children: /*#__PURE__*/_jsxDEV(EditBoard, {\n          in_fen: fen,\n          updateFenAndClose: this.updateFenAndCloseEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this);\n  }\n}\nAnalysisBoard.propTypes = {\n  children: PropTypes.func,\n  fen: PropTypes.string,\n  pgn: PropTypes.string\n};\nexport default AnalysisBoard;\nconst boardStyle = {\n  borderRadius: \"5px\",\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\n};\nconst boardsContainer = {\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  alignItems: \"center\"\n};","map":{"version":3,"names":["React","Component","axios","PropTypes","Chess","Chessboard","EditBoard","jsxDEV","_jsxDEV","STOCKFISH","window","game","AnalysisBoard","constructor","args","state","orientation","evaluation","bestLine","currentPly","future","showEvaluation","moveHistory","fullGame","importedGames","showDropdown","selectedGame","gamesDetails","showEditBoard","fen","props","handleGameSelect","pgn","reset","tmp","loadPgn","setState","history","engineGame","prepareMove","handleFileSelect","event","file","target","files","reader","FileReader","onload","e","fullPgn","result","rawGames","split","filter","Boolean","games","map","index","trim","details","chess","headers","header","White","Black","Result","Date","readAsText","displayGameDetails","handleFlipBoard","handleResetBoard","toggleStockfishEvaluation","prevState","goToEnd","moves","previous","length","i","move","previous_fen","previous_pgn","load","isGameOver","goToNextMove","shift","goToPreviousMove","unshift","goToStart","goToMove","moveIndex","newMoveHistory","slice","options","engine","Worker","stockfishjs","postMessage","onmessage","line","data","extractEvaluation","extractBestLine","previousOutput","handleEditBoard","updateFenAndCloseEdit","newFen","onDrop","sourceSquare","targetSquare","legalMoves","verbose","find","from","to","console","log","san","promotion","concat","mateEvalMatch","match","evalMatch","Math","round","parseInt","turn","bestLineMatch","sanMoves","min","floor","moveNumber","sanMove","push","join","componentDidMount","componentDidUpdate","prevProps","render","children","className","id","style","display","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","position","bottom","left","boardsContainer","width","boardStyle","in_fen","updateFenAndClose","propTypes","func","string","borderRadius","boxShadow","justifyContent","alignItems"],"sources":["/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/AnalysisBoard.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\nimport PropTypes from \"prop-types\";\nimport { Chess } from \"chess.js\";\nimport Chessboard from \"chessboardjsx\";\nimport EditBoard from \"./EditBoard\";\n\nconst STOCKFISH = window.STOCKFISH;\nconst game = new Chess();\n\nclass AnalysisBoard extends Component {\n  static propTypes = {\n    children: PropTypes.func,\n    fen: PropTypes.string,\n    pgn: PropTypes.string,\n  };\n  \n  state = {\n    orientation: \"white\",\n    evaluation: \"\",\n    bestLine: \"\",\n    currentPly: 1,\n    future: [],\n    showEvaluation: false,\n    moveHistory: [],\n    fullGame: [],\n    importedGames: [],\n    showDropdown: false,\n    selectedGame: null,\n    gamesDetails: [],\n    showEditBoard: false, // Add this line\n    fen: this.props.fen || 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1' // Set initial FEN\n  };\n\n  componentDidMount() {\n    if (this.props.pgn) {\n      game.loadPgn(this.props.pgn);\n      this.future = [];\n      this.moveHistory = game.history();\n      this.fullGame = this.moveHistory.concat(this.future);\n      this.importedGames = [];\n    } else {\n      game.reset();\n      this.future = [];\n      this.moveHistory = [];\n      this.fullGame = [];\n      this.importedGames = [];\n      this.setState({ fen: this.props.fen });\n    }\n    this.engineGame().prepareMove();\n  }\n\n  handleGameSelect = (pgn) => {\n    game.reset();\n    const tmp = new Chess();\n    tmp.loadPgn(pgn);\n    this.setState({ fen: this.props.fen || \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\" });\n    this.future = tmp.history();\n    this.moveHistory = tmp.history();\n    this.fullGame = this.moveHistory;\n    this.engineGame().prepareMove();\n  };\n\n  handleFileSelect = async (event) => {\n    const file = event.target.files[0];\n    if (!file) {\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const fullPgn = e.target.result;\n      let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n      let games = rawGames.map((game, index) => {\n        return ('[Event' + game).trim();\n      });\n      const details = games.map(pgn => {\n        const chess = new Chess();\n        chess.loadPgn(pgn);\n        const headers = chess.header();\n        return {\n          pgn: pgn,\n          details: `${headers.White} vs ${headers.Black}, ${headers.Result}, ${headers.Date}`\n        };\n      });\n\n      this.setState({\n        importedGames: details,\n        selectedGame: null\n      });\n    };\n    reader.readAsText(file);\n  };\n\n  displayGameDetails = (pgn) => {\n    const chess = new Chess();\n    chess.loadPgn(pgn);\n    const headers = chess.header();\n    return `${headers.White} vs ${headers.Black}, ${headers.Result}, ${headers.Date}`;\n  };\n\n  handleFlipBoard = () => {\n    this.setState(({ orientation }) => ({\n      orientation: orientation === 'white' ? 'black' : 'white',\n    }));\n  };\n\n  handleResetBoard = () => {\n    game.reset();\n    this.setState(({ fen: game.fen() }));\n    this.future = [];\n    this.moveHistory = [];\n    this.fullGame = [];\n    this.engineGame().prepareMove();\n  };\n\n  toggleStockfishEvaluation = () => {\n    this.setState(prevState => ({\n      showEvaluation: !prevState.showEvaluation\n    }));\n  };\n\n  goToEnd = () => {\n    const moves = game.history();\n    const tmp = new Chess();\n    const previous = moves.length + this.future.length - 1;\n    if (previous >= 0) {\n      if (moves.length > 0) {\n        for (var i = 0; i < moves.length; i += 1) {\n          tmp.move(moves[i]);\n        }\n      }\n\n      if (this.future.length - 1 >= 0) {\n        for (var i = 0; i < this.future.length; i += 1) {\n          tmp.move(this.future[i]);\n        }\n        const previous_fen = tmp.fen();\n        const previous_pgn = tmp.pgn();\n        this.future = [];\n        game.load(previous_fen);\n        game.loadPgn(previous_pgn);\n        this.setState({ fen: previous_fen });\n        this.moveHistory = game.history();\n        this.setState({ currentPly: this.moveHistory.length });\n        if (!game.isGameOver()) {\n          this.engineGame().prepareMove();\n        }\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  };\n\n  goToNextMove = () => {\n    if (this.future.length > 0) {\n      game.move(this.future[0]);\n      this.setState({ fen: game.fen() });\n      this.future.shift();\n      this.moveHistory = game.history();\n      this.setState({ currentPly: this.moveHistory.length });\n      if (!game.isGameOver()) {\n        this.engineGame().prepareMove();\n      }\n    }\n    return;\n  };\n\n  goToPreviousMove = () => {\n    const moves = game.history();\n    const tmp = new Chess();\n    const previous = moves.length - 1;\n    if (previous >= 0) {\n      for (var i = 0; i < previous; i += 1) {\n        tmp.move(moves[i]);\n      }\n      const previous_fen = tmp.fen();\n      const previous_pgn = tmp.pgn();\n      this.future.unshift(moves[previous]);\n      tmp.move(moves[previous]);\n      game.load(previous_fen);\n      game.loadPgn(previous_pgn);\n      this.setState({ fen: previous_fen });\n      this.moveHistory = game.history();\n      this.setState({ currentPly: this.moveHistory.length });\n      if (!game.isGameOver()) {\n        this.engineGame().prepareMove();\n      }\n    }\n    return;\n  };\n\n  goToStart = () => {\n    const moves = game.history();\n    const tmp = new Chess();\n    const previous_fen = tmp.fen();\n    const previous_pgn = tmp.pgn();\n    const previous = moves.length - 1;\n    if (previous >= 0) {\n      for (var i = 0; i < previous; i += 1) {\n        tmp.move(moves[i]);\n      }\n      this.future.unshift(...moves);\n      game.load(previous_fen);\n      game.loadPgn(previous_pgn);\n      this.setState({ fen: previous_fen });\n      this.moveHistory = [];\n      this.setState({ currentPly: this.moveHistory.length });\n      if (!game.isGameOver()) {\n        this.engineGame().prepareMove();\n      }\n    }\n    return;\n  };\n\n  goToMove = (moveIndex) => {\n    const moves = this.fullGame;\n    const tmp = new Chess();\n\n    for (let i = 0; i <= moveIndex; i++) {\n      tmp.move(moves[i]);\n    }\n\n    const previous_fen = tmp.fen();\n    const previous_pgn = tmp.pgn();\n    game.loadPgn(previous_pgn);\n    this.setState({ fen: previous_fen });\n\n    const newMoveHistory = tmp.history();\n    this.moveHistory = newMoveHistory;\n    this.future = moves.slice(moveIndex + 1);\n    this.setState({ currentPly: this.moveHistory.length });\n\n    if (!game.isGameOver()) {\n      this.engineGame().prepareMove();\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.selectedGame !== this.state.selectedGame && this.state.selectedGame) {\n      const chess = new Chess();\n      chess.loadPgn(this.state.selectedGame);\n      this.setState({ fen: chess.fen() });\n    }\n    if (prevProps.pgn !== this.props.pgn && this.props.pgn) {\n      game.reset();\n      game.loadPgn(this.props.pgn);\n      this.setState({ fen: game.fen(), currentPly: 1, future: [] });\n      this.moveHistory = game.history();\n      this.engineGame().prepareMove();\n    }\n  }\n\n  engineGame = (options) => {\n    options = options || {};\n\n    let engine =\n      typeof STOCKFISH === \"function\"\n        ? STOCKFISH()\n        : new Worker(options.stockfishjs || \"stockfish.js\");\n\n    engine.postMessage(\"uci\");\n\n    engine.onmessage = (event) => {\n      const { currentPly } = this.state;\n      let line;\n\n      if (event && typeof event === \"object\") {\n        line = event.data;\n        const evaluation = this.extractEvaluation(line);\n        const bestLine = this.extractBestLine(line);\n        this.setState({ evaluation, bestLine });\n      } else {\n        line = event;\n      }\n\n      const bestLine = this.extractBestLine(line);\n      this.setState({ previousOutput: bestLine });\n    };\n\n    return {\n      prepareMove: function () {\n        engine.postMessage(\"position fen \" + game.fen());\n        engine.postMessage(\"go depth 15\");\n      },\n    };\n  };\n\n  handleEditBoard = () => {\n    this.setState(prevState => ({\n      showEditBoard: !prevState.showEditBoard\n    }));\n  };\n\n  updateFenAndCloseEdit = (newFen) => {\n    game.reset();\n    this.setState({ fen: newFen, showEditBoard: false });\n    this.setState({ currentPly: 1, future: [] });\n    this.moveHistory = [];\n    this.engineGame().prepareMove();\n  };\n\n  onDrop = ({ sourceSquare, targetSquare }) => {\n    const legalMoves = game.moves({ verbose: true });\n    const move = legalMoves.find(\n      (move) => move.from === sourceSquare && move.to === targetSquare\n    );\n\n    if (!move) {\n      console.log(\"Illegal move\");\n      return;\n    }\n\n    if (move.san === this.future[0]) {\n      this.future.shift();\n    } else {\n      this.future = [];\n    }\n\n    game.move({ from: sourceSquare, to: targetSquare, promotion: \"q\" });\n    this.moveHistory = game.history();\n    this.setState({ currentPly: this.moveHistory.length });\n    this.fullGame = this.moveHistory.concat(this.future);\n\n    this.setState((prevState) => ({\n      fen: game.fen()\n    }));\n    if (!game.isGameOver()) {\n      this.engineGame().prepareMove();\n    }\n  };\n\n  extractEvaluation = (line) => {\n    const mateEvalMatch = line.match(/score mate (.+)/);\n    const evalMatch = line.match(/score cp (-?\\d+)/);\n    if (evalMatch) {\n      const evaluation = (Math.round(parseInt(evalMatch[1]) * 0.01 * 100)) / 100;\n      if (evaluation >= 0) {\n        if (game.turn() === \"b\") {\n          return (-evaluation);\n        }\n        return \"+\" + (evaluation);\n      }\n      if (game.turn() === \"w\") {\n        return (evaluation);\n      }\n      return \"+\" + (-evaluation);\n    } else {\n      if (mateEvalMatch) {\n        const evaluation = (parseInt(mateEvalMatch[1]));\n        if (evaluation >= 0) {\n          if (game.turn() === \"b\") {\n            return (\"Black Mate in \" + (evaluation));\n          } return (\"White Mate in \" + (evaluation));\n        }\n        if (game.turn() === \"w\") {\n          return (\"Black Mate in \" + (-evaluation));\n        } return (\"White Mate in \" + (-evaluation));\n      }\n    } return null;\n  };\n\n  extractBestLine = (line) => {\n    const currentPly = game.history().length + 1;\n    const bestLineMatch = line.match(/pvSan (.*) bmc/);\n    if (bestLineMatch) {\n      const moves = bestLineMatch[1].split(\" \");\n      const sanMoves = [];\n      if (moves.length !== 1) {\n        for (let i = 0; i < Math.min(2 * Math.floor(moves.length / 2), 14); i += 1) {\n          const moveNumber = i + currentPly;\n          const sanMove = moveNumber % 2 === 1 ? `${Math.floor((moveNumber + 1) / 2)}.${moves[i]}` : `${Math.floor((moveNumber + 1) / 2)}...${moves[i]}`;\n          sanMoves.push(sanMove);\n        }\n        return sanMoves.join(\" \");\n      } else {\n        const sanMove = currentPly % 2 === 1 ? `${Math.floor((currentPly + 1) / 2)}.${moves[0]}` : `${Math.floor((currentPly + 1) / 2)}...${moves[0]}`;\n        return sanMove;\n      }\n    }\n    return this.state.previousOutput;\n  };\n\n  render() {\n    const { fen, orientation, evaluation, bestLine, currentPly, future, showEvaluation, moveHistory, fullGame, importedGames, showDropdown, showEditBoard } = this.state;\n    return (\n      <div>\n        <div className=\"analysis-toolkit\" id=\"EditingOff\" style={{ display: showEditBoard ? \"none\" : \"block\" }}>\n          <div onClick={() => this.setState({ showDropdown: !this.state.showDropdown })}>\n            Games Imported From PGN Database: {importedGames.length}\n            {showDropdown && (\n              <div className=\"games-list\">\n                {importedGames.length === 0 ? (\n                  <p>Click Below to Import games</p>\n                ) : (\n                  <ul>\n                    {importedGames.map((game, index) => (\n                      <li className=\"game-item\" key={index} onClick={() => this.handleGameSelect(game.pgn)}>\n                        {game.details}\n                      </li>\n                    ))}\n                  </ul>\n                )}\n              </div>\n            )}\n          </div>\n          <input className=\"file-button\" type=\"file\" onChange={this.handleFileSelect} style={{ position: 'absolute', bottom: 130, left: 10 }} />\n\n          <div style={boardsContainer}>\n            <div className=\"analysis-board-container\" style={{ display: \"block\" }}>\n              <Chessboard\n                position={fen}\n                width={520}\n                onDrop={this.onDrop}\n                orientation={orientation}\n                boardStyle={boardStyle}\n              />\n            </div>\n          </div>\n\n          <div className=\"move-history\">\n            <h3>Move History</h3>\n            <ul>\n              {this.fullGame && this.fullGame.map((move, index) => (\n                <li\n                  key={index}\n                  className={index === currentPly - 1 ? 'selected' : ''}\n                  onClick={() => this.goToMove(index)}\n                >\n                  {index % 2 === 0 ? `${index / 2 + 1}. ` : `${(index - 1) / 2 + 1}...`}{move}\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"control-panel\">\n            <button onClick={this.handleEditBoard}>Edit</button>\n            <button onClick={this.handleFlipBoard}>Flip</button>\n            <button onClick={this.handleResetBoard}>Reset</button>\n            <button onClick={this.toggleStockfishEvaluation}>🐟</button>\n            <button onClick={this.goToStart}>Start</button>\n            <button onClick={this.goToPreviousMove}>⇦</button>\n            <button onClick={this.goToNextMove}>⇨</button>\n            <button onClick={this.goToEnd}>End</button>\n            {showEvaluation && (\n              <div className=\"stockfish-evaluation\">\n                <div>Stockfish Eval: {evaluation}</div>\n                <div>{bestLine}</div>\n              </div>\n            )}\n          </div>\n        </div>\n        {showEditBoard && (\n          <div className=\"edit-board-container\" id=\"EditingOn\" style={{ display: \"block\" }}>\n            <EditBoard in_fen={fen} updateFenAndClose={this.updateFenAndCloseEdit} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default AnalysisBoard;\n\nconst boardStyle = {\n  borderRadius: \"5px\",\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\n};\n\nconst boardsContainer = {\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  alignItems: \"center\"\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}