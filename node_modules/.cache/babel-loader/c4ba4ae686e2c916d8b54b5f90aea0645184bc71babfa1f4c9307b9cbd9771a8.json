{"ast":null,"code":"// CustomErrorHandler.js\nimport React from 'react';\nclass CustomErrorHandler extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.handleGlobalError = (message, source, lineno, colno, error) => {\n      console.error('Global error caught:', message, source, lineno, colno, error);\n      // Set an error flag in localStorage\n      localStorage.setItem('hasError', 'true');\n      // Attempt to reload the page\n      window.location.reload();\n    };\n    this.handleUnhandledRejection = event => {\n      console.error('Unhandled promise rejection:', event);\n      // Set an error flag in localStorage\n      localStorage.setItem('hasError', 'true');\n      // Attempt to reload the page\n      window.location.reload();\n    };\n  }\n  componentDidMount() {\n    window.onerror = this.handleGlobalError;\n    window.onunhandledrejection = this.handleUnhandledRejection;\n  }\n  render() {\n    return this.props.children;\n  }\n}\nexport default CustomErrorHandler;","map":{"version":3,"names":["React","CustomErrorHandler","Component","constructor","args","handleGlobalError","message","source","lineno","colno","error","console","localStorage","setItem","window","location","reload","handleUnhandledRejection","event","componentDidMount","onerror","onunhandledrejection","render","props","children"],"sources":["/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/CustomErrorHandler.js"],"sourcesContent":["// CustomErrorHandler.js\nimport React from 'react';\n\nclass CustomErrorHandler extends React.Component {\n  componentDidMount() {\n    window.onerror = this.handleGlobalError;\n    window.onunhandledrejection = this.handleUnhandledRejection;\n  }\n\n  handleGlobalError = (message, source, lineno, colno, error) => {\n    console.error('Global error caught:', message, source, lineno, colno, error);\n    // Set an error flag in localStorage\n    localStorage.setItem('hasError', 'true');\n    // Attempt to reload the page\n    window.location.reload();\n  };\n\n  handleUnhandledRejection = (event) => {\n    console.error('Unhandled promise rejection:', event);\n    // Set an error flag in localStorage\n    localStorage.setItem('hasError', 'true');\n    // Attempt to reload the page\n    window.location.reload();\n  };\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default CustomErrorHandler;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,kBAAkB,SAASD,KAAK,CAACE,SAAS,CAAC;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAM/CC,iBAAiB,GAAG,CAACC,OAAO,EAAEC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,KAAK;MAC7DC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEJ,OAAO,EAAEC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,CAAC;MAC5E;MACAE,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC;MACxC;MACAC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAAA,KAEDC,wBAAwB,GAAIC,KAAK,IAAK;MACpCP,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEQ,KAAK,CAAC;MACpD;MACAN,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC;MACxC;MACAC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B,CAAC;EAAA;EAnBDG,iBAAiBA,CAAA,EAAG;IAClBL,MAAM,CAACM,OAAO,GAAG,IAAI,CAACf,iBAAiB;IACvCS,MAAM,CAACO,oBAAoB,GAAG,IAAI,CAACJ,wBAAwB;EAC7D;EAkBAK,MAAMA,CAAA,EAAG;IACP,OAAO,IAAI,CAACC,KAAK,CAACC,QAAQ;EAC5B;AACF;AAEA,eAAevB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}