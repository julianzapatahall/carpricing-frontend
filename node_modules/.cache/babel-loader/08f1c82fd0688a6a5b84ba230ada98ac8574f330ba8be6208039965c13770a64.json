{"ast":null,"code":"var _jsxFileName = \"/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/AnalysisBoard.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport PropTypes from \"prop-types\";\nimport { Chess } from \"chess.js\";\nimport Chessboard from \"chessboardjsx\";\nimport EditBoard from \"./EditBoard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STOCKFISH = window.STOCKFISH;\nconst game = new Chess();\nclass AnalysisBoard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orientation: \"white\",\n      evaluation: \"\",\n      bestLine: \"\",\n      currentPly: 1,\n      future: [],\n      showEvaluation: false,\n      moveHistory: [],\n      fullGame: [],\n      importedGames: JSON.parse(localStorage.getItem('importedGames')) || [],\n      showDropdown: false,\n      selectedGame: null,\n      gamesDetails: [],\n      showEditBoard: false,\n      fen: this.props.fen || 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\n    };\n    this.handleGameSelect = pgn => {\n      game.reset();\n      const tmp = new Chess();\n      tmp.loadPgn(pgn);\n      this.setState({\n        fen: this.props.fen || \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n        showDropdown: true\n      });\n      this.future = tmp.history();\n      this.moveHistory = tmp.history();\n      this.fullGame = this.moveHistory;\n      this.engineGame().prepareMove();\n    };\n    this.handleFileSelect = async event => {\n      const file = event.target.files[0];\n      if (!file) {\n        return;\n      }\n      const reader = new FileReader();\n      reader.onload = e => {\n        const fullPgn = e.target.result;\n        let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n        let games = rawGames.map((game, index) => {\n          return ('[Event' + game).trim();\n        });\n        const details = games.map(pgn => {\n          const chess = new Chess();\n          chess.loadPgn(pgn);\n          const headers = chess.header();\n          return {\n            pgn: pgn,\n            details: `${headers.White} vs ${headers.Black}, ${headers.Result}, ${headers.Date}`\n          };\n        });\n        this.setState({\n          importedGames: details,\n          selectedGame: null\n        });\n        localStorage.setItem('importedGames', JSON.stringify(details));\n      };\n      reader.readAsText(file);\n    };\n    this.handleRemoveFile = () => {\n      this.setState({\n        importedGames: [],\n        selectedGame: null\n      });\n      localStorage.removeItem('importedGames');\n    };\n    this.displayGameDetails = pgn => {\n      const chess = new Chess();\n      chess.loadPgn(pgn);\n      const headers = chess.header();\n      return `${headers.White} vs ${headers.Black}, ${headers.Result}, ${headers.Date}`;\n    };\n    this.handleFlipBoard = () => {\n      this.setState(({\n        orientation\n      }) => ({\n        orientation: orientation === 'white' ? 'black' : 'white'\n      }));\n    };\n    this.handleResetBoard = () => {\n      game.reset();\n      this.setState({\n        fen: game.fen()\n      });\n      this.future = [];\n      this.moveHistory = [];\n      this.fullGame = [];\n      this.engineGame().prepareMove();\n    };\n    this.toggleStockfishEvaluation = () => {\n      this.setState(prevState => ({\n        showEvaluation: !prevState.showEvaluation\n      }));\n    };\n    this.goToEnd = () => {\n      const moves = game.history();\n      const tmp = new Chess();\n      const previous = moves.length + this.future.length - 1;\n      if (previous >= 0) {\n        if (moves.length > 0) {\n          for (var i = 0; i < moves.length; i += 1) {\n            tmp.move(moves[i]);\n          }\n        }\n        if (this.future.length - 1 >= 0) {\n          for (var i = 0; i < this.future.length; i += 1) {\n            tmp.move(this.future[i]);\n          }\n          const previous_fen = tmp.fen();\n          const previous_pgn = tmp.pgn();\n          this.future = [];\n          game.load(previous_fen);\n          game.loadPgn(previous_pgn);\n          this.setState({\n            fen: previous_fen\n          });\n          this.moveHistory = game.history();\n          this.setState({\n            currentPly: this.moveHistory.length\n          });\n          if (!game.isGameOver()) {\n            this.engineGame().prepareMove();\n          }\n        } else {\n          return;\n        }\n      } else {\n        return;\n      }\n    };\n    this.goToNextMove = () => {\n      if (this.future.length > 0) {\n        game.move(this.future[0]);\n        this.setState({\n          fen: game.fen()\n        });\n        this.future.shift();\n        this.moveHistory = game.history();\n        this.setState({\n          currentPly: this.moveHistory.length\n        });\n        if (!game.isGameOver()) {\n          this.engineGame().prepareMove();\n        }\n      }\n      return;\n    };\n    this.goToPreviousMove = () => {\n      const moves = game.history();\n      const tmp = new Chess();\n      const previous = moves.length - 1;\n      if (previous >= 0) {\n        for (var i = 0; i < previous; i += 1) {\n          tmp.move(moves[i]);\n        }\n        const previous_fen = tmp.fen();\n        const previous_pgn = tmp.pgn();\n        this.future.unshift(moves[previous]);\n        tmp.move(moves[previous]);\n        game.load(previous_fen);\n        game.loadPgn(previous_pgn);\n        this.setState({\n          fen: previous_fen\n        });\n        this.moveHistory = game.history();\n        this.setState({\n          currentPly: this.moveHistory.length\n        });\n        if (!game.isGameOver()) {\n          this.engineGame().prepareMove();\n        }\n      }\n      return;\n    };\n    this.goToStart = () => {\n      const moves = game.history();\n      const tmp = new Chess();\n      const previous_fen = tmp.fen();\n      const previous_pgn = tmp.pgn();\n      const previous = moves.length - 1;\n      if (previous >= 0) {\n        for (var i = 0; i < previous; i += 1) {\n          tmp.move(moves[i]);\n        }\n        this.future.unshift(...moves);\n        game.load(previous_fen);\n        game.loadPgn(previous_pgn);\n        this.setState({\n          fen: previous_fen\n        });\n        this.moveHistory = [];\n        this.setState({\n          currentPly: this.moveHistory.length\n        });\n        if (!game.isGameOver()) {\n          this.engineGame().prepareMove();\n        }\n      }\n      return;\n    };\n    this.toggleDropdown = () => {\n      this.setState(prevState => ({\n        showDropdown: !prevState.showDropdown\n      }));\n    };\n    this.goToMove = moveIndex => {\n      const moves = this.fullGame;\n      const tmp = new Chess();\n      for (let i = 0; i <= moveIndex; i++) {\n        tmp.move(moves[i]);\n      }\n      const previous_fen = tmp.fen();\n      const previous_pgn = tmp.pgn();\n      game.loadPgn(previous_pgn);\n      this.setState({\n        fen: previous_fen\n      });\n      const newMoveHistory = tmp.history();\n      this.moveHistory = newMoveHistory;\n      this.future = moves.slice(moveIndex + 1);\n      this.setState({\n        currentPly: this.moveHistory.length\n      });\n      if (!game.isGameOver()) {\n        this.engineGame().prepareMove();\n      }\n    };\n    this.engineGame = options => {\n      options = options || {};\n      let engine = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(options.stockfishjs || \"stockfish.js\");\n      engine.postMessage(\"uci\");\n      engine.onmessage = event => {\n        const {\n          currentPly\n        } = this.state;\n        let line;\n        if (event && typeof event === \"object\") {\n          line = event.data;\n          const evaluation = this.extractEvaluation(line);\n          const bestLine = this.extractBestLine(line);\n          this.setState({\n            evaluation,\n            bestLine\n          });\n        } else {\n          line = event;\n        }\n        const bestLine = this.extractBestLine(line);\n        this.setState({\n          previousOutput: bestLine\n        });\n      };\n      return {\n        prepareMove: function () {\n          engine.postMessage(\"position fen \" + game.fen());\n          engine.postMessage(\"go depth 17\");\n        }\n      };\n    };\n    this.handleEditBoard = () => {\n      this.setState(prevState => ({\n        showEditBoard: !prevState.showEditBoard\n      }));\n    };\n    this.updateFenAndCloseEdit = newFen => {\n      game.reset();\n      game.load(newFen);\n      this.setState({\n        fen: newFen,\n        showEditBoard: false\n      });\n      this.setState({\n        currentPly: 0,\n        future: []\n      });\n      this.moveHistory = [];\n      this.engineGame().prepareMove();\n    };\n    this.onDrop = ({\n      sourceSquare,\n      targetSquare\n    }) => {\n      const legalMoves = game.moves({\n        verbose: true\n      });\n      const move = legalMoves.find(move => move.from === sourceSquare && move.to === targetSquare);\n      if (!move) {\n        console.log(\"Illegal move\");\n        return;\n      }\n      if (move.san === this.future[0]) {\n        this.future.shift();\n      } else {\n        this.future = [];\n      }\n      game.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: \"q\"\n      });\n      console.log(game.fen());\n      this.moveHistory = game.history();\n      this.setState({\n        currentPly: this.moveHistory.length\n      });\n      this.fullGame = this.moveHistory.concat(this.future);\n      this.setState(prevState => ({\n        fen: game.fen()\n      }));\n      if (!game.isGameOver()) {\n        this.engineGame().prepareMove();\n      }\n    };\n    this.extractEvaluation = line => {\n      const mateEvalMatch = line.match(/score mate (.+)/);\n      const evalMatch = line.match(/score cp (-?\\d+)/);\n      if (evalMatch) {\n        const evaluation = Math.round(parseInt(evalMatch[1]) * 0.01 * 100) / 100;\n        if (evaluation >= 0) {\n          if (game.turn() === \"b\") {\n            return -evaluation;\n          }\n          return \"+\" + evaluation;\n        }\n        if (game.turn() === \"w\") {\n          return evaluation;\n        }\n        return \"+\" + -evaluation;\n      } else {\n        if (mateEvalMatch) {\n          const evaluation = parseInt(mateEvalMatch[1]);\n          if (evaluation >= 0) {\n            if (game.turn() === \"b\") {\n              return \"Black Mate in \" + evaluation;\n            }\n            return \"White Mate in \" + evaluation;\n          }\n          if (game.turn() === \"w\") {\n            return \"Black Mate in \" + -evaluation;\n          }\n          return \"White Mate in \" + -evaluation;\n        }\n      }\n      return null;\n    };\n    this.extractBestLine = line => {\n      const currentPly = game.history().length + 1;\n      const bestLineMatch = line.match(/pvSan (.*) bmc/);\n      if (bestLineMatch) {\n        const moves = bestLineMatch[1].split(\" \");\n        const sanMoves = [];\n        if (moves.length !== 1) {\n          for (let i = 0; i < Math.min(2 * Math.floor(moves.length / 2), 14); i += 1) {\n            const moveNumber = i + currentPly;\n            const sanMove = moveNumber % 2 === 1 ? `${Math.floor((moveNumber + 1) / 2)}.${moves[i]}` : `${Math.floor((moveNumber + 1) / 2)}...${moves[i]}`;\n            sanMoves.push(sanMove);\n          }\n          return sanMoves.join(\" \");\n        } else {\n          const sanMove = currentPly % 2 === 1 ? `${Math.floor((currentPly + 1) / 2)}.${moves[0]}` : `${Math.floor((currentPly + 1) / 2)}...${moves[0]}`;\n          return sanMove;\n        }\n      }\n      return this.state.previousOutput;\n    };\n  }\n  componentDidMount() {\n    if (this.props.pgn) {\n      game.loadPgn(this.props.pgn);\n      this.future = [];\n      this.moveHistory = game.history();\n      this.fullGame = this.moveHistory.concat(this.future);\n      this.importedGames = [];\n    } else {\n      game.reset();\n      this.future = [];\n      this.moveHistory = [];\n      this.fullGame = [];\n      this.setState({\n        fen: this.props.fen\n      });\n    }\n    this.engineGame().prepareMove();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.selectedGame !== this.state.selectedGame && this.state.selectedGame) {\n      const chess = new Chess();\n      chess.loadPgn(this.state.selectedGame);\n      this.setState({\n        fen: chess.fen()\n      });\n    }\n    if (prevProps.pgn !== this.props.pgn && this.props.pgn) {\n      game.reset();\n      game.loadPgn(this.props.pgn);\n      this.setState({\n        fen: game.fen(),\n        currentPly: 1,\n        future: []\n      });\n      this.moveHistory = game.history();\n      this.engineGame().prepareMove();\n    }\n  }\n  render() {\n    const {\n      fen,\n      orientation,\n      evaluation,\n      bestLine,\n      currentPly,\n      future,\n      showEvaluation,\n      moveHistory,\n      fullGame,\n      importedGames,\n      showDropdown,\n      showEditBoard\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analysis-toolkit\",\n        id: \"EditingOff\",\n        style: {\n          display: showEditBoard ? \"none\" : \"block\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-header\",\n          onClick: this.toggleDropdown,\n          children: [\"Games Imported From PGN Database: \", importedGames.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 9\n        }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"games-list\",\n          children: importedGames.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click \\\"Choose File\\\" to Import games\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: importedGames.map((game, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"game-item\",\n              onClick: () => this.handleGameSelect(game.pgn),\n              children: game.details\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"file-button\",\n            type: \"file\",\n            onChange: this.handleFileSelect,\n            style: {\n              position: 'absolute',\n              bottom: 130,\n              left: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove-file-button\",\n            onClick: this.handleRemoveFile,\n            style: {\n              position: 'absolute',\n              bottom: 130,\n              left: 280\n            },\n            children: \"Remove File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: boardsContainer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"analysis-board-container\",\n            style: {\n              display: \"block\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Chessboard, {\n              position: fen,\n              width: 520,\n              onDrop: this.onDrop,\n              orientation: orientation,\n              boardStyle: boardStyle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"move-history\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Move History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: this.fullGame && this.fullGame.map((move, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: index === currentPly - 1 ? 'selected' : '',\n              onClick: () => this.goToMove(index),\n              children: [index % 2 === 0 ? `${index / 2 + 1}. ` : `${(index - 1) / 2 + 1}...`, move]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleEditBoard,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleFlipBoard,\n            children: \"Flip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleResetBoard,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.toggleStockfishEvaluation,\n            children: \"\\uD83D\\uDC1F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.goToStart,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.goToPreviousMove,\n            children: \"\\u21E6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.goToNextMove,\n            children: \"\\u21E8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.goToEnd,\n            children: \"End\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this), showEvaluation && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stockfish-evaluation\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Stockfish Eval: \", evaluation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: bestLine\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), showEditBoard && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-board-container\",\n        id: \"EditingOn\",\n        style: {\n          display: \"block\"\n        },\n        children: /*#__PURE__*/_jsxDEV(EditBoard, {\n          in_fen: fen,\n          updateFenAndClose: this.updateFenAndCloseEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this);\n  }\n}\nAnalysisBoard.propTypes = {\n  children: PropTypes.func,\n  fen: PropTypes.string,\n  pgn: PropTypes.string\n};\nexport default AnalysisBoard;\nconst boardStyle = {\n  borderRadius: \"5px\",\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\n};\nconst boardsContainer = {\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  alignItems: \"center\"\n};","map":{"version":3,"names":["React","Component","axios","PropTypes","Chess","Chessboard","EditBoard","jsxDEV","_jsxDEV","STOCKFISH","window","game","AnalysisBoard","constructor","args","state","orientation","evaluation","bestLine","currentPly","future","showEvaluation","moveHistory","fullGame","importedGames","JSON","parse","localStorage","getItem","showDropdown","selectedGame","gamesDetails","showEditBoard","fen","props","handleGameSelect","pgn","reset","tmp","loadPgn","setState","history","engineGame","prepareMove","handleFileSelect","event","file","target","files","reader","FileReader","onload","e","fullPgn","result","rawGames","split","filter","Boolean","games","map","index","trim","details","chess","headers","header","White","Black","Result","Date","setItem","stringify","readAsText","handleRemoveFile","removeItem","displayGameDetails","handleFlipBoard","handleResetBoard","toggleStockfishEvaluation","prevState","goToEnd","moves","previous","length","i","move","previous_fen","previous_pgn","load","isGameOver","goToNextMove","shift","goToPreviousMove","unshift","goToStart","toggleDropdown","goToMove","moveIndex","newMoveHistory","slice","options","engine","Worker","stockfishjs","postMessage","onmessage","line","data","extractEvaluation","extractBestLine","previousOutput","handleEditBoard","updateFenAndCloseEdit","newFen","onDrop","sourceSquare","targetSquare","legalMoves","verbose","find","from","to","console","log","san","promotion","concat","mateEvalMatch","match","evalMatch","Math","round","parseInt","turn","bestLineMatch","sanMoves","min","floor","moveNumber","sanMove","push","join","componentDidMount","componentDidUpdate","prevProps","render","children","className","id","style","display","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","position","bottom","left","boardsContainer","width","boardStyle","in_fen","updateFenAndClose","propTypes","func","string","borderRadius","boxShadow","justifyContent","alignItems"],"sources":["/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/AnalysisBoard.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\nimport PropTypes from \"prop-types\";\nimport { Chess } from \"chess.js\";\nimport Chessboard from \"chessboardjsx\";\nimport EditBoard from \"./EditBoard\";\n\nconst STOCKFISH = window.STOCKFISH;\nconst game = new Chess();\n\nclass AnalysisBoard extends Component {\n  static propTypes = {\n    children: PropTypes.func,\n    fen: PropTypes.string,\n    pgn: PropTypes.string,\n  };\n  \n  state = {\n    orientation: \"white\",\n    evaluation: \"\",\n    bestLine: \"\",\n    currentPly: 1,\n    future: [],\n    showEvaluation: false,\n    moveHistory: [],\n    fullGame: [],\n    importedGames: JSON.parse(localStorage.getItem('importedGames')) || [],\n    showDropdown: false,\n    selectedGame: null,\n    gamesDetails: [],\n    showEditBoard: false,\n    fen: this.props.fen || 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\n  };\n\n  componentDidMount() {\n    if (this.props.pgn) {\n      game.loadPgn(this.props.pgn);\n      this.future = [];\n      this.moveHistory = game.history();\n      this.fullGame = this.moveHistory.concat(this.future);\n      this.importedGames = [];\n    } else {\n      game.reset();\n      this.future = [];\n      this.moveHistory = [];\n      this.fullGame = [];\n      this.setState({ fen: this.props.fen });\n    }\n    this.engineGame().prepareMove();\n  }\n\n  handleGameSelect = (pgn) => {\n    game.reset();\n    const tmp = new Chess();\n    tmp.loadPgn(pgn);\n    this.setState({ \n      fen: this.props.fen || \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n      showDropdown: true\n    });\n    this.future = tmp.history();\n    this.moveHistory = tmp.history();\n    this.fullGame = this.moveHistory;\n    this.engineGame().prepareMove();\n  };\n\n  handleFileSelect = async (event) => {\n    const file = event.target.files[0];\n    if (!file) {\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const fullPgn = e.target.result;\n      let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n      let games = rawGames.map((game, index) => {\n        return ('[Event' + game).trim();\n      });\n      const details = games.map(pgn => {\n        const chess = new Chess();\n        chess.loadPgn(pgn);\n        const headers = chess.header();\n        return {\n          pgn: pgn,\n          details: `${headers.White} vs ${headers.Black}, ${headers.Result}, ${headers.Date}`\n        };\n      });\n\n      this.setState({\n        importedGames: details,\n        selectedGame: null\n      });\n      localStorage.setItem('importedGames', JSON.stringify(details));\n    };\n    reader.readAsText(file);\n  };\n\n  handleRemoveFile = () => {\n    this.setState({\n      importedGames: [],\n      selectedGame: null\n    });\n    localStorage.removeItem('importedGames');\n  };\n\n  displayGameDetails = (pgn) => {\n    const chess = new Chess();\n    chess.loadPgn(pgn);\n    const headers = chess.header();\n    return `${headers.White} vs ${headers.Black}, ${headers.Result}, ${headers.Date}`;\n  };\n\n  handleFlipBoard = () => {\n    this.setState(({ orientation }) => ({\n      orientation: orientation === 'white' ? 'black' : 'white',\n    }));\n  };\n\n  handleResetBoard = () => {\n    game.reset();\n    this.setState(({ fen: game.fen() }));\n    this.future = [];\n    this.moveHistory = [];\n    this.fullGame = [];\n    this.engineGame().prepareMove();\n  };\n\n  toggleStockfishEvaluation = () => {\n    this.setState(prevState => ({\n      showEvaluation: !prevState.showEvaluation\n    }));\n  };\n\n  goToEnd = () => {\n    const moves = game.history();\n    const tmp = new Chess();\n    const previous = moves.length + this.future.length - 1;\n    if (previous >= 0) {\n      if (moves.length > 0) {\n        for (var i = 0; i < moves.length; i += 1) {\n          tmp.move(moves[i]);\n        }\n      }\n\n      if (this.future.length - 1 >= 0) {\n        for (var i = 0; i < this.future.length; i += 1) {\n          tmp.move(this.future[i]);\n        }\n        const previous_fen = tmp.fen();\n        const previous_pgn = tmp.pgn();\n        this.future = [];\n        game.load(previous_fen);\n        game.loadPgn(previous_pgn);\n        this.setState({ fen: previous_fen });\n        this.moveHistory = game.history();\n        this.setState({ currentPly: this.moveHistory.length });\n        if (!game.isGameOver()) {\n          this.engineGame().prepareMove();\n        }\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  };\n\n  goToNextMove = () => {\n    if (this.future.length > 0) {\n      game.move(this.future[0]);\n      this.setState({ fen: game.fen() });\n      this.future.shift();\n      this.moveHistory = game.history();\n      this.setState({ currentPly: this.moveHistory.length });\n      if (!game.isGameOver()) {\n        this.engineGame().prepareMove();\n      }\n    }\n    return;\n  };\n\n  goToPreviousMove = () => {\n    const moves = game.history();\n    const tmp = new Chess();\n    const previous = moves.length - 1;\n    if (previous >= 0) {\n      for (var i = 0; i < previous; i += 1) {\n        tmp.move(moves[i]);\n      }\n      const previous_fen = tmp.fen();\n      const previous_pgn = tmp.pgn();\n      this.future.unshift(moves[previous]);\n      tmp.move(moves[previous]);\n      game.load(previous_fen);\n      game.loadPgn(previous_pgn);\n      this.setState({ fen: previous_fen });\n      this.moveHistory = game.history();\n      this.setState({ currentPly: this.moveHistory.length });\n      if (!game.isGameOver()) {\n        this.engineGame().prepareMove();\n      }\n    }\n    return;\n  };\n\n  goToStart = () => {\n    const moves = game.history();\n    const tmp = new Chess();\n    const previous_fen = tmp.fen();\n    const previous_pgn = tmp.pgn();\n    const previous = moves.length - 1;\n    if (previous >= 0) {\n      for (var i = 0; i < previous; i += 1) {\n        tmp.move(moves[i]);\n      }\n      this.future.unshift(...moves);\n      game.load(previous_fen);\n      game.loadPgn(previous_pgn);\n      this.setState({ fen: previous_fen });\n      this.moveHistory = [];\n      this.setState({ currentPly: this.moveHistory.length });\n      if (!game.isGameOver()) {\n        this.engineGame().prepareMove();\n      }\n    }\n    return;\n  };\n\n  toggleDropdown = () => {\n    this.setState((prevState) => ({\n      showDropdown: !prevState.showDropdown,\n    }));\n  };\n\n  goToMove = (moveIndex) => {\n    const moves = this.fullGame;\n    const tmp = new Chess();\n\n    for (let i = 0; i <= moveIndex; i++) {\n      tmp.move(moves[i]);\n    }\n\n    const previous_fen = tmp.fen();\n    const previous_pgn = tmp.pgn();\n    game.loadPgn(previous_pgn);\n    this.setState({ fen: previous_fen });\n\n    const newMoveHistory = tmp.history();\n    this.moveHistory = newMoveHistory;\n    this.future = moves.slice(moveIndex + 1);\n    this.setState({ currentPly: this.moveHistory.length });\n\n    if (!game.isGameOver()) {\n      this.engineGame().prepareMove();\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.selectedGame !== this.state.selectedGame && this.state.selectedGame) {\n      const chess = new Chess();\n      chess.loadPgn(this.state.selectedGame);\n      this.setState({ fen: chess.fen() });\n    }\n    if (prevProps.pgn !== this.props.pgn && this.props.pgn) {\n      game.reset();\n      game.loadPgn(this.props.pgn);\n      this.setState({ fen: game.fen(), currentPly: 1, future: [] });\n      this.moveHistory = game.history();\n      this.engineGame().prepareMove();\n    }\n  }\n\n  engineGame = (options) => {\n    options = options || {};\n\n    let engine =\n      typeof STOCKFISH === \"function\"\n        ? STOCKFISH()\n        : new Worker(options.stockfishjs || \"stockfish.js\");\n\n    engine.postMessage(\"uci\");\n\n    engine.onmessage = (event) => {\n      const { currentPly } = this.state;\n      let line;\n\n      if (event && typeof event === \"object\") {\n        line = event.data;\n        const evaluation = this.extractEvaluation(line);\n        const bestLine = this.extractBestLine(line);\n        this.setState({ evaluation, bestLine });\n      } else {\n        line = event;\n      }\n\n      const bestLine = this.extractBestLine(line);\n      this.setState({ previousOutput: bestLine });\n    };\n\n    return {\n      prepareMove: function () {\n        engine.postMessage(\"position fen \" + game.fen());\n        engine.postMessage(\"go depth 17\");\n      },\n    };\n  };\n\n  handleEditBoard = () => {\n    this.setState(prevState => ({\n      showEditBoard: !prevState.showEditBoard\n    }));\n  };\n\n  updateFenAndCloseEdit = (newFen) => {\n    game.reset();\n    game.load(newFen);\n    this.setState({ fen: newFen, showEditBoard: false });\n    this.setState({ currentPly: 0, future: [] });\n    this.moveHistory = [];\n    this.engineGame().prepareMove();\n  };\n\n  onDrop = ({ sourceSquare, targetSquare }) => {\n    const legalMoves = game.moves({ verbose: true });\n    const move = legalMoves.find(\n      (move) => move.from === sourceSquare && move.to === targetSquare\n    );\n\n    if (!move) {\n      console.log(\"Illegal move\");\n      return;\n    }\n\n    if (move.san === this.future[0]) {\n      this.future.shift();\n    } else {\n      this.future = [];\n    }\n\n    game.move({ from: sourceSquare, to: targetSquare, promotion: \"q\" });\n    console.log(game.fen())\n    this.moveHistory = game.history();\n    this.setState({ currentPly: this.moveHistory.length });\n    this.fullGame = this.moveHistory.concat(this.future);\n\n    this.setState((prevState) => ({\n      fen: game.fen()\n    }));\n    if (!game.isGameOver()) {\n      this.engineGame().prepareMove();\n    }\n  };\n\n  extractEvaluation = (line) => {\n    const mateEvalMatch = line.match(/score mate (.+)/);\n    const evalMatch = line.match(/score cp (-?\\d+)/);\n    if (evalMatch) {\n      const evaluation = (Math.round(parseInt(evalMatch[1]) * 0.01 * 100)) / 100;\n      if (evaluation >= 0) {\n        if (game.turn() === \"b\") {\n          return (-evaluation);\n        }\n        return \"+\" + (evaluation);\n      }\n      if (game.turn() === \"w\") {\n        return (evaluation);\n      }\n      return \"+\" + (-evaluation);\n    } else {\n      if (mateEvalMatch) {\n        const evaluation = (parseInt(mateEvalMatch[1]));\n        if (evaluation >= 0) {\n          if (game.turn() === \"b\") {\n            return (\"Black Mate in \" + (evaluation));\n          } return (\"White Mate in \" + (evaluation));\n        }\n        if (game.turn() === \"w\") {\n          return (\"Black Mate in \" + (-evaluation));\n        } return (\"White Mate in \" + (-evaluation));\n      }\n    } return null;\n  };\n\n  extractBestLine = (line) => {\n    const currentPly = game.history().length + 1;\n    const bestLineMatch = line.match(/pvSan (.*) bmc/);\n    if (bestLineMatch) {\n      const moves = bestLineMatch[1].split(\" \");\n      const sanMoves = [];\n      if (moves.length !== 1) {\n        for (let i = 0; i < Math.min(2 * Math.floor(moves.length / 2), 14); i += 1) {\n          const moveNumber = i + currentPly;\n          const sanMove = moveNumber % 2 === 1 ? `${Math.floor((moveNumber + 1) / 2)}.${moves[i]}` : `${Math.floor((moveNumber + 1) / 2)}...${moves[i]}`;\n          sanMoves.push(sanMove);\n        }\n        return sanMoves.join(\" \");\n      } else {\n        const sanMove = currentPly % 2 === 1 ? `${Math.floor((currentPly + 1) / 2)}.${moves[0]}` : `${Math.floor((currentPly + 1) / 2)}...${moves[0]}`;\n        return sanMove;\n      }\n    }\n    return this.state.previousOutput;\n  };\n\n  render() {\n    const { fen, orientation, evaluation, bestLine, currentPly, future, showEvaluation, moveHistory, fullGame, importedGames, showDropdown, showEditBoard } = this.state;\n    return (\n      <div>\n        <div className=\"analysis-toolkit\" id=\"EditingOff\" style={{ display: showEditBoard ? \"none\" : \"block\" }}>\n        <div className=\"dropdown-header\" onClick={this.toggleDropdown}>\n            Games Imported From PGN Database: {importedGames.length}\n          </div>\n          {showDropdown && (\n            <div className=\"games-list\">\n              {importedGames.length === 0 ? (\n                <p>Click \"Choose File\" to Import games</p>\n              ) : (\n                <ul>\n                  {importedGames.map((game, index) => (\n                    <li className=\"game-item\" key={index} onClick={() => this.handleGameSelect(game.pgn)}>\n                      {game.details}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          )}\n          <div className=\"file-buttons\">\n  <input className=\"file-button\" type=\"file\" onChange={this.handleFileSelect} style={{ position: 'absolute', bottom: 130, left: 10 }} />\n  <button className=\"remove-file-button\" onClick={this.handleRemoveFile} style={{ position: 'absolute', bottom: 130, left: 280 }}>Remove File</button>\n</div>\n\n\n          <div style={boardsContainer}>\n            <div className=\"analysis-board-container\" style={{ display: \"block\" }}>\n              <Chessboard\n                position={fen}\n                width={520}\n                onDrop={this.onDrop}\n                orientation={orientation}\n                boardStyle={boardStyle}\n              />\n            </div>\n          </div>\n\n          <div className=\"move-history\">\n            <h3>Move History</h3>\n            <ul>\n              {this.fullGame && this.fullGame.map((move, index) => (\n                <li\n                  key={index}\n                  className={index === currentPly - 1 ? 'selected' : ''}\n                  onClick={() => this.goToMove(index)}\n                >\n                  {index % 2 === 0 ? `${index / 2 + 1}. ` : `${(index - 1) / 2 + 1}...`}{move}\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"control-panel\">\n            <button onClick={this.handleEditBoard}>Edit</button>\n            <button onClick={this.handleFlipBoard}>Flip</button>\n            <button onClick={this.handleResetBoard}>Reset</button>\n            <button onClick={this.toggleStockfishEvaluation}>🐟</button>\n            <button onClick={this.goToStart}>Start</button>\n            <button onClick={this.goToPreviousMove}>⇦</button>\n            <button onClick={this.goToNextMove}>⇨</button>\n            <button onClick={this.goToEnd}>End</button>\n            {showEvaluation && (\n              <div className=\"stockfish-evaluation\">\n                <div>Stockfish Eval: {evaluation}</div>\n                <div>{bestLine}</div>\n              </div>\n            )}\n          </div>\n        </div>\n        {showEditBoard && (\n          <div className=\"edit-board-container\" id=\"EditingOn\" style={{ display: \"block\" }}>\n            <EditBoard in_fen={fen} updateFenAndClose={this.updateFenAndCloseEdit} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default AnalysisBoard;\n\nconst boardStyle = {\n  borderRadius: \"5px\",\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\n};\n\nconst boardsContainer = {\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  alignItems: \"center\"\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}