{"ast":null,"code":"var _jsxFileName = \"/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/WeaknessFinder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Chess } from 'chess.js';\nimport './styles.css';\n\n// Import both logo images\nimport logo from './squarechesslogolong.png'; // Adjust the path as needed\nimport logoWhite from './squarechesslogolongwhite.png'; // Adjust the path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STOCKFISH = window.STOCKFISH;\nconst WeaknessFinder = () => {\n  _s();\n  const [importedGames, setImportedGames] = useState([]);\n  const [gamesCount, setGamesCount] = useState(0);\n  const [commonLines, setCommonLines] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [thePgnList, setThePgnList] = useState([]);\n  const [previousOutput, setPreviousOutput] = useState(\"\");\n  const [isLogoHovered, setIsLogoHovered] = useState(false);\n  const [opponentName, setOpponentName] = useState('');\n  const [opponentColor, setOpponentColor] = useState('White');\n  const [processing, setProcessing] = useState(false);\n  const [activeDropdown, setActiveDropdown] = useState(null);\n  let stockfish = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(\"stockfish.js\");\n  stockfish.postMessage(\"uci\");\n  useEffect(() => {}, [thePgnList]);\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const fullPgn = e.target.result;\n      let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n      let games = rawGames.map(game => '[Event' + game.trim());\n      setImportedGames(games);\n      setGamesCount(games.length);\n    };\n    reader.readAsText(file);\n  };\n  const handleStart = () => {\n    setProcessing(true);\n    const games = importedGames;\n    processGames(games);\n  };\n  const toggleDropdown = dropdown => {\n    setActiveDropdown(activeDropdown === dropdown ? null : dropdown);\n  };\n  const formatMovesWithNumbers = line => {\n    const moves = line.Line.split(\"*\").filter(Boolean);\n    return moves.map((move, index) => {\n      const moveNumber = Math.floor(index / 2) + 1;\n      return index % 2 === 0 ? `${moveNumber}. ${move}` : `${moveNumber}...${move}`;\n    }).join(\" \");\n  };\n  const categorizeLines = finalLongDF => {\n    return finalLongDF.map(row => {\n      const wpColumn = \"WinPercentage\";\n      const wp = row[wpColumn];\n      if (wp <= 0) {\n        row.MistakeType = \"Fatal Bafflement\";\n      } else if (wp <= 0.2) {\n        row.MistakeType = \"Major Incompetence\";\n      } else if (wp <= 0.4) {\n        row.MistakeType = \"Slight Inconsistency\";\n      } else {\n        row.MistakeType = \"None\";\n      }\n      return row;\n    }).filter(row => row.MistakeType !== \"None\" && row.LineProbability > 0.2);\n  };\n  const processGames = games => {\n    const eventList = [];\n    const siteList = [];\n    const whiteList = [];\n    const blackList = [];\n    const resultList = [];\n    const dateList = [];\n    const whiteEloList = [];\n    const blackEloList = [];\n    const fullValList = [];\n    const initialColnames = [];\n    const movesList = [];\n    const pgnList = [];\n    const chess = new Chess();\n    games.forEach((game, index) => {\n      chess.loadPgn(game);\n      chess.deleteComments();\n      let moves = chess.history();\n      movesList.push(moves);\n      const valList = [];\n      let triangle = String(moves[0]) + \"*\";\n      valList.push(triangle);\n      pgnList.push(chess.pgn());\n      eventList.push(chess.header()[\"Event\"]);\n      siteList.push(chess.header()[\"Site\"]);\n      whiteList.push(chess.header()[\"White\"]);\n      blackList.push(chess.header()[\"Black\"]);\n      resultList.push(chess.header()[\"Result\"]);\n      dateList.push(chess.header()[\"Date\"]);\n      whiteEloList.push(chess.header()[\"WhiteElo\"]);\n      blackEloList.push(chess.header()[\"BlackElo\"]);\n      for (let i = 1; i < 25 && i < moves.length; i++) {\n        triangle += String(moves[i]) + \"*\";\n        valList.push(triangle);\n      }\n      fullValList.push(valList);\n    });\n    console.log(fullValList);\n    setThePgnList(pgnList); // Set the pgnList to the state variable thePgnList\n\n    for (let j = 1; j <= 25; j++) {\n      initialColnames.push(\"Line\" + String(j));\n    }\n    const dataFrame = fullValList.map((row, index) => ({\n      ...row.reduce((acc, val, i) => ({\n        ...acc,\n        [initialColnames[i]]: val\n      }), {}),\n      Event: eventList[index],\n      Site: siteList[index],\n      White: whiteList[index],\n      Black: blackList[index],\n      WhiteResult1: resultList[index] === '1-0' ? 1 : 0,\n      Date: dateList[index],\n      WhiteElo: whiteEloList[index],\n      BlackElo: blackEloList[index],\n      Pgn: pgnList[index],\n      GameID: index\n    }));\n    console.log(\"dataFrame\");\n    console.log(dataFrame);\n    const filteredDF = dataFrame.filter(row => row[opponentColor] === opponentName);\n    console.log(1);\n    console.log(filteredDF);\n    const moveProb1 = filteredDF.reduce((acc, row) => {\n      acc[row.Line1] = (acc[row.Line1] || 0) + 1;\n      return acc;\n    }, {});\n    const totalGames = filteredDF.length;\n    filteredDF.forEach(row => {\n      row.MoveProbability1 = moveProb1[row.Line1] / totalGames;\n    });\n    console.log(2);\n    console.log(filteredDF);\n    for (let i = 1; i < 25; i++) {\n      filteredDF.forEach(row => {\n        row[`WhiteResult${i + 1}`] = row.WhiteResult1;\n      });\n      const moveProb = filteredDF.reduce((acc, row) => {\n        const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n        acc[key] = (acc[key] || 0) + 1;\n        return acc;\n      }, {});\n      const lineCount = filteredDF.reduce((acc, row) => {\n        acc[row[`Line${i}`]] = (acc[row[`Line${i}`]] || 0) + 1;\n        return acc;\n      }, {});\n      filteredDF.forEach(row => {\n        const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n        row[`MoveProbability${i + 1}`] = moveProb[key] / lineCount[row[`Line${i}`]];\n      });\n    }\n    console.log(3);\n    console.log(filteredDF);\n    filteredDF.forEach(row => {\n      let pw = 1;\n      let pb = 1;\n      for (let i = 1; i <= 25; i++) {\n        if (i % 2 === 1) {\n          pw *= row[`MoveProbability${i}`] || 1;\n        } else {\n          pb *= row[`MoveProbability${i}`] || 1;\n        }\n        row[`LineProbability(W)${i}`] = pw;\n        row[`LineProbability(B)${i}`] = pb;\n      }\n    });\n    console.log(4);\n    console.log(\"filteredDF\");\n    console.log(filteredDF);\n    const longDF = [];\n    filteredDF.forEach(row => {\n      for (let i = 1; i <= 25; i++) {\n        longDF.push({\n          GameID: row.GameID,\n          Ply: i,\n          Line: row[`Line${i}`],\n          EVAL: row[`EVAL${i}`],\n          WhiteResult: row[`WhiteResult${i}`],\n          MoveProbability: row[`MoveProbability${i}`],\n          LineProbabilityW: row[`LineProbability(W)${i}`],\n          LineProbabilityB: row[`LineProbability(B)${i}`],\n          Pgn: row.Pgn\n        });\n      }\n    });\n    console.log(\"longDF\");\n    console.log(longDF);\n\n    // Add #Games column\n    const lineCounts = longDF.reduce((acc, row) => {\n      acc[row.Line] = (acc[row.Line] || 0) + 1;\n      return acc;\n    }, {});\n    longDF.forEach(row => {\n      row['#Games'] = lineCounts[row.Line];\n    });\n\n    // Filter for lines with probability greater than 0.2\n    const filteredLongDF = longDF.filter(row => opponentColor === 'Black' && row.LineProbabilityB > 0.2 || opponentColor === 'White' && row.LineProbabilityW > 0.2);\n    console.log(\"filteredLongDF\");\n    console.log(filteredLongDF);\n    const groupedByLine = filteredLongDF.reduce((acc, row) => {\n      if (!acc[row.Line]) {\n        acc[row.Line] = {\n          Line: row.Line,\n          TotalGames: 0,\n          TotalWins: 0,\n          TotalLosses: 0,\n          WinPercentage: 0,\n          GameIDs: []\n        };\n      }\n      acc[row.Line].TotalGames += 1;\n      acc[row.Line].TotalWins += row.WhiteResult;\n      acc[row.Line].TotalLosses += 1 - row.WhiteResult;\n      acc[row.Line].WinPercentage = acc[row.Line].TotalWins / acc[row.Line].TotalGames;\n      acc[row.Line].GameIDs.push(row.GameID);\n      return acc;\n    }, {});\n\n    // Convert groupedByLine to an array and sort by WinPercentage\n    const groupedLongDF = Object.values(groupedByLine);\n    const sortedLongDF = groupedLongDF.sort((a, b) => a.WinPercentage - b.WinPercentage);\n    console.log(\"sortedLongDF\");\n    console.log(sortedLongDF);\n    setFilteredData(sortedLongDF);\n    const commonLines = findCommonLines(movesList);\n    setCommonLines(commonLines);\n    setProcessing(false); // Stop processing\n  };\n  const findCommonLines = movesList => {\n    const lineCounts = {};\n    movesList.forEach(moves => {\n      moves.forEach((move, index) => {\n        const line = moves.slice(0, index + 1).join(' ');\n        if (!lineCounts[line]) {\n          lineCounts[line] = 0;\n        }\n        lineCounts[line]++;\n      });\n    });\n    const sortedLines = Object.entries(lineCounts).sort((a, b) => b[1] - a[1]);\n    return sortedLines.slice(0, 5);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weakness-finder\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onMouseEnter: () => setIsLogoHovered(true),\n            onMouseLeave: () => setIsLogoHovered(false),\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: isLogoHovered ? logoWhite : logo,\n                alt: \"Home\",\n                style: {\n                  height: '40px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/blunder-punisher\",\n              className: \"prepare-link\",\n              children: \"Blunder Punisher\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/weakness-finder\",\n              children: \"Weakness Finder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/analysis-board\",\n              children: \"Analysis Board\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/our-team\",\n              children: \"Our Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"hero3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Weakness Finder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleFileSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"opponentName\",\n              children: \"Opponent Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"opponentName\",\n              value: opponentName,\n              onChange: e => setOpponentName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"opponentColor\",\n              children: \"Opponent Color:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"opponentColor\",\n              value: opponentColor,\n              onChange: e => setOpponentColor(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"White\",\n                children: \"White\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Black\",\n                children: \"Black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStart,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 25\n          }, this), processing && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please wait, do not refresh or close the tab...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Number of games in the file: \", gamesCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }, this), processing ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"common-lines\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Most Common Lines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: commonLines.map(([line, count], index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [line, \" - \", count]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleDropdown('Fatal Blunders'),\n              children: [\"Fatal Blunders (\", filteredData.filter(line => line.MistakeType === 'Fatal Blunder').length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 33\n            }, this), activeDropdown === 'Fatal Blunders' && /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: filteredData.filter(line => line.MistakeType === 'Fatal Blunder').map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: formatMovesWithNumbers(line)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleDropdown('Major Mistakes'),\n              children: [\"Major Mistakes (\", filteredData.filter(line => line.MistakeType === 'Major Mistake').length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 33\n            }, this), activeDropdown === 'Major Mistakes' && /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: filteredData.filter(line => line.MistakeType === 'Major Mistake').map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: formatMovesWithNumbers(line)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleDropdown('Slight Inaccuracies'),\n              children: [\"Slight Inaccuracies (\", filteredData.filter(line => line.MistakeType === 'Slight Inaccuracy').length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 33\n            }, this), activeDropdown === 'Slight Inaccuracies' && /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: filteredData.filter(line => line.MistakeType === 'Slight Inaccuracy').map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: formatMovesWithNumbers(line)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 5\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2024 SquareChess.org All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 9\n  }, this);\n};\n_s(WeaknessFinder, \"3BXdUHaWyv4GuLjfyBMzUx3fLZ4=\");\n_c = WeaknessFinder;\nexport default WeaknessFinder;\nvar _c;\n$RefreshReg$(_c, \"WeaknessFinder\");","map":{"version":3,"names":["React","useState","useEffect","Link","Chess","logo","logoWhite","jsxDEV","_jsxDEV","STOCKFISH","window","WeaknessFinder","_s","importedGames","setImportedGames","gamesCount","setGamesCount","commonLines","setCommonLines","filteredData","setFilteredData","thePgnList","setThePgnList","previousOutput","setPreviousOutput","isLogoHovered","setIsLogoHovered","opponentName","setOpponentName","opponentColor","setOpponentColor","processing","setProcessing","activeDropdown","setActiveDropdown","stockfish","Worker","postMessage","handleFileSelect","event","file","target","files","reader","FileReader","onload","e","fullPgn","result","rawGames","split","filter","Boolean","games","map","game","trim","length","readAsText","handleStart","processGames","toggleDropdown","dropdown","formatMovesWithNumbers","line","moves","Line","move","index","moveNumber","Math","floor","join","categorizeLines","finalLongDF","row","wpColumn","wp","MistakeType","LineProbability","eventList","siteList","whiteList","blackList","resultList","dateList","whiteEloList","blackEloList","fullValList","initialColnames","movesList","pgnList","chess","forEach","loadPgn","deleteComments","history","push","valList","triangle","String","pgn","header","i","console","log","j","dataFrame","reduce","acc","val","Event","Site","White","Black","WhiteResult1","Date","WhiteElo","BlackElo","Pgn","GameID","filteredDF","moveProb1","Line1","totalGames","MoveProbability1","moveProb","key","lineCount","pw","pb","longDF","Ply","EVAL","WhiteResult","MoveProbability","LineProbabilityW","LineProbabilityB","lineCounts","filteredLongDF","groupedByLine","TotalGames","TotalWins","TotalLosses","WinPercentage","GameIDs","groupedLongDF","Object","values","sortedLongDF","sort","a","b","findCommonLines","slice","sortedLines","entries","className","children","onMouseEnter","onMouseLeave","to","src","alt","style","height","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","htmlFor","id","value","onClick","count","_c","$RefreshReg$"],"sources":["/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/WeaknessFinder.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Chess } from 'chess.js';\nimport './styles.css';\n\n// Import both logo images\nimport logo from './squarechesslogolong.png'; // Adjust the path as needed\nimport logoWhite from './squarechesslogolongwhite.png'; // Adjust the path as needed\n\nconst STOCKFISH = window.STOCKFISH;\n\nconst WeaknessFinder = () => {\n    const [importedGames, setImportedGames] = useState([]);\n    const [gamesCount, setGamesCount] = useState(0);\n    const [commonLines, setCommonLines] = useState([]);\n    const [filteredData, setFilteredData] = useState([]);\n    const [thePgnList, setThePgnList] = useState([]);\n    const [previousOutput, setPreviousOutput] = useState(\"\");\n    const [isLogoHovered, setIsLogoHovered] = useState(false);\n    const [opponentName, setOpponentName] = useState('');\n    const [opponentColor, setOpponentColor] = useState('White');\n    const [processing, setProcessing] = useState(false);\n    const [activeDropdown, setActiveDropdown] = useState(null);\n\n    let stockfish = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(\"stockfish.js\");\n    stockfish.postMessage(\"uci\");\n\n    useEffect(() => {}, [thePgnList]);\n\n    const handleFileSelect = (event) => {\n        const file = event.target.files[0];\n        if (!file) return;\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const fullPgn = e.target.result;\n            let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n            let games = rawGames.map(game => '[Event' + game.trim());\n\n            setImportedGames(games);\n            setGamesCount(games.length);\n        };\n        reader.readAsText(file);\n    };\n\n    const handleStart = () => {\n        setProcessing(true);\n        const games = importedGames;\n        processGames(games);\n    };\n\n    const toggleDropdown = (dropdown) => {\n        setActiveDropdown(activeDropdown === dropdown ? null : dropdown);\n    };\n    \n    const formatMovesWithNumbers = (line) => {\n        const moves = line.Line.split(\"*\").filter(Boolean);\n        return moves.map((move, index) => {\n            const moveNumber = Math.floor(index / 2) + 1;\n            return index % 2 === 0 ? `${moveNumber}. ${move}` : `${moveNumber}...${move}`;\n        }).join(\" \");\n    };\n\n    const categorizeLines = (finalLongDF) => {\n        return finalLongDF.map(row => {\n            const wpColumn = \"WinPercentage\";\n            const wp = row[wpColumn];\n    \n                if (wp <= 0) {\n                    row.MistakeType = \"Fatal Bafflement\";\n                } else if (wp <= 0.2) {\n                    row.MistakeType = \"Major Incompetence\";\n                } else if (wp <= 0.4) {\n                    row.MistakeType = \"Slight Inconsistency\";\n                } else {\n                    row.MistakeType = \"None\";\n                }\n            \n            return row;\n        }).filter(row => row.MistakeType !== \"None\" && row.LineProbability > 0.2);\n    };\n\n    const processGames = (games) => {\n        const eventList = [];\n        const siteList = [];\n        const whiteList = [];\n        const blackList = [];\n        const resultList = [];\n        const dateList = [];\n        const whiteEloList = [];\n        const blackEloList = [];\n        const fullValList = [];\n        const initialColnames = [];\n        const movesList = [];\n        const pgnList = [];\n        const chess = new Chess();\n\n        games.forEach((game, index) => {\n            chess.loadPgn(game);\n            chess.deleteComments();\n            let moves = chess.history();\n            movesList.push(moves);\n\n            const valList = [];\n            let triangle = String(moves[0]) + \"*\";\n            valList.push(triangle);\n\n            pgnList.push(chess.pgn());\n            eventList.push(chess.header()[\"Event\"]);\n            siteList.push(chess.header()[\"Site\"]);\n            whiteList.push(chess.header()[\"White\"]);\n            blackList.push(chess.header()[\"Black\"]);\n            resultList.push(chess.header()[\"Result\"]);\n            dateList.push(chess.header()[\"Date\"]);\n            whiteEloList.push(chess.header()[\"WhiteElo\"]);\n            blackEloList.push(chess.header()[\"BlackElo\"]);\n\n            for (let i = 1; i < 25 && i < moves.length; i++) {\n                triangle += String(moves[i]) + \"*\";\n                valList.push(triangle);\n            }\n            fullValList.push(valList);\n        });\n        console.log(fullValList);\n\n        setThePgnList(pgnList); // Set the pgnList to the state variable thePgnList\n\n        for (let j = 1; j <= 25; j++) {\n            initialColnames.push(\"Line\" + String(j));\n        }\n\n        const dataFrame = fullValList.map((row, index) => ({\n            ...row.reduce((acc, val, i) => ({ ...acc, [initialColnames[i]]: val }), {}),\n            Event: eventList[index],\n            Site: siteList[index],\n            White: whiteList[index],\n            Black: blackList[index],\n            WhiteResult1: resultList[index] === '1-0' ? 1 : 0,\n            Date: dateList[index],\n            WhiteElo: whiteEloList[index],\n            BlackElo: blackEloList[index],\n            Pgn: pgnList[index],\n            GameID: index\n        }));\n        console.log(\"dataFrame\");\n        console.log(dataFrame);\n\n        const filteredDF = dataFrame.filter(row => row[opponentColor] === opponentName);\n        console.log(1);\n        console.log(filteredDF);\n\n        const moveProb1 = filteredDF.reduce((acc, row) => {\n            acc[row.Line1] = (acc[row.Line1] || 0) + 1;\n            return acc;\n        }, {});\n        const totalGames = filteredDF.length;\n\n        filteredDF.forEach(row => {\n            row.MoveProbability1 = moveProb1[row.Line1] / totalGames;\n        });\n        console.log(2);\n        console.log(filteredDF);\n\n        for (let i = 1; i < 25; i++) {\n            filteredDF.forEach(row => {\n                row[`WhiteResult${i + 1}`] = row.WhiteResult1;\n            });\n\n            const moveProb = filteredDF.reduce((acc, row) => {\n                const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n                acc[key] = (acc[key] || 0) + 1;\n                return acc;\n            }, {});\n\n            const lineCount = filteredDF.reduce((acc, row) => {\n                acc[row[`Line${i}`]] = (acc[row[`Line${i}`]] || 0) + 1;\n                return acc;\n            }, {});\n\n            filteredDF.forEach(row => {\n                const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n                row[`MoveProbability${i + 1}`] = moveProb[key] / lineCount[row[`Line${i}`]];\n            });\n        }\n        console.log(3);\n        console.log(filteredDF);\n\n        filteredDF.forEach(row => {\n            let pw = 1;\n            let pb = 1;\n            for (let i = 1; i <= 25; i++) {\n                if (i % 2 === 1) {\n                    pw *= row[`MoveProbability${i}`] || 1;\n                } else {\n                    pb *= row[`MoveProbability${i}`] || 1;\n                }\n                row[`LineProbability(W)${i}`] = pw;\n                row[`LineProbability(B)${i}`] = pb;\n            }\n        });\n        console.log(4);\n        console.log(\"filteredDF\");\n        console.log(filteredDF);\n\n        const longDF = [];\n        filteredDF.forEach(row => {\n            for (let i = 1; i <= 25; i++) {\n                longDF.push({\n                    GameID: row.GameID,\n                    Ply: i,\n                    Line: row[`Line${i}`],\n                    EVAL: row[`EVAL${i}`],\n                    WhiteResult: row[`WhiteResult${i}`],\n                    MoveProbability: row[`MoveProbability${i}`],\n                    LineProbabilityW: row[`LineProbability(W)${i}`],\n                    LineProbabilityB: row[`LineProbability(B)${i}`],\n                    Pgn: row.Pgn\n                });\n            }\n        });\n        console.log(\"longDF\");\n        console.log(longDF);\n\n        // Add #Games column\n        const lineCounts = longDF.reduce((acc, row) => {\n            acc[row.Line] = (acc[row.Line] || 0) + 1;\n            return acc;\n        }, {});\n\n        longDF.forEach(row => {\n            row['#Games'] = lineCounts[row.Line];\n        });\n\n        // Filter for lines with probability greater than 0.2\n        const filteredLongDF = longDF.filter(row => \n            (opponentColor === 'Black' && row.LineProbabilityB > 0.2) ||\n            (opponentColor === 'White' && row.LineProbabilityW > 0.2)\n        );\n        console.log(\"filteredLongDF\");\n        console.log(filteredLongDF);\n\n        const groupedByLine = filteredLongDF.reduce((acc, row) => {\n            if (!acc[row.Line]) {\n                acc[row.Line] = {\n                    Line: row.Line,\n                    TotalGames: 0,\n                    TotalWins: 0,\n                    TotalLosses: 0,\n                    WinPercentage: 0,\n                    GameIDs: []\n                };\n            }\n            acc[row.Line].TotalGames += 1;\n            acc[row.Line].TotalWins += row.WhiteResult;\n            acc[row.Line].TotalLosses += (1 - row.WhiteResult);\n            acc[row.Line].WinPercentage = acc[row.Line].TotalWins / acc[row.Line].TotalGames;\n            acc[row.Line].GameIDs.push(row.GameID);\n            return acc;\n        }, {});\n\n        // Convert groupedByLine to an array and sort by WinPercentage\n        const groupedLongDF = Object.values(groupedByLine);\n        const sortedLongDF = groupedLongDF.sort((a, b) => a.WinPercentage - b.WinPercentage);\n\n        \n\n        console.log(\"sortedLongDF\");\n        console.log(sortedLongDF);\n\n        setFilteredData(sortedLongDF);\n\n        const commonLines = findCommonLines(movesList);\n        setCommonLines(commonLines);\n\n        setProcessing(false); // Stop processing\n    };\n\n    const findCommonLines = (movesList) => {\n        const lineCounts = {};\n\n        movesList.forEach(moves => {\n            moves.forEach((move, index) => {\n                const line = moves.slice(0, index + 1).join(' ');\n                if (!lineCounts[line]) {\n                    lineCounts[line] = 0;\n                }\n                lineCounts[line]++;\n            });\n        });\n\n        const sortedLines = Object.entries(lineCounts).sort((a, b) => b[1] - a[1]);\n        return sortedLines.slice(0, 5);\n    };\n\n    return (\n        <div className=\"weakness-finder\">\n            <header>\n                <nav>\n                    <ul>\n                        <li onMouseEnter={() => setIsLogoHovered(true)}\n                            onMouseLeave={() => setIsLogoHovered(false)}>\n                            <Link to=\"/\">\n                                <img src={isLogoHovered ? logoWhite : logo} alt=\"Home\" style={{ height: '40px' }} />\n                            </Link>\n                        </li>\n                        <li><Link to=\"/blunder-punisher\" className=\"prepare-link\">Blunder Punisher</Link></li>\n                        <li><Link to=\"/weakness-finder\">Weakness Finder</Link></li>\n                        <li><Link to=\"/analysis-board\">Analysis Board</Link></li>\n                        <li><Link to=\"/our-team\">Our Team</Link></li>\n                    </ul>\n                </nav>\n            </header>\n            <main>\n                <section className=\"hero3\">\n                    <h1>Weakness Finder</h1>\n                    <div className=\"form-container\">\n                        <input type=\"file\" onChange={handleFileSelect} />\n                        <div className=\"form-group\">\n                            <label htmlFor=\"opponentName\">Opponent Name:</label>\n                            <input \n                                type=\"text\" \n                                id=\"opponentName\" \n                                value={opponentName} \n                                onChange={(e) => setOpponentName(e.target.value)} \n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"opponentColor\">Opponent Color:</label>\n                            <select \n                                id=\"opponentColor\" \n                                value={opponentColor} \n                                onChange={(e) => setOpponentColor(e.target.value)}\n                            >\n                                <option value=\"White\">White</option>\n                                <option value=\"Black\">Black</option>\n                            </select>\n                        </div>\n                        <button onClick={handleStart}>Start</button>\n                        {processing && <p>Please wait, do not refresh or close the tab...</p>}\n                        </div>\n                    <p>Number of games in the file: {gamesCount}</p>\n                    {processing ? (\n                        <div className=\"common-lines\">\n                            <h2>Most Common Lines</h2>\n                            <ul>\n                                {commonLines.map(([line, count], index) => (\n                                    <li key={index}>{line} - {count}</li>\n                                ))}\n                            </ul>\n                        </div>\n                    ) : (\n                        <div className=\"dropdown-container\">\n                            <div className=\"dropdown\">\n                                <button onClick={() => toggleDropdown('Fatal Blunders')}>\n                                    Fatal Blunders ({filteredData.filter(line => line.MistakeType === 'Fatal Blunder').length})\n                                </button>\n                                {activeDropdown === 'Fatal Blunders' && (\n                                    <ul>\n                                        {filteredData.filter(line => line.MistakeType === 'Fatal Blunder').map((line, index) => (\n                                            <li key={index}>{formatMovesWithNumbers(line)}</li>\n                                        ))}\n                                    </ul>\n                                )}\n                            </div>\n                            <div className=\"dropdown\">\n                                <button onClick={() => toggleDropdown('Major Mistakes')}>\n                                    Major Mistakes ({filteredData.filter(line => line.MistakeType === 'Major Mistake').length})\n                                </button>\n                                {activeDropdown === 'Major Mistakes' && (\n                                    <ul>\n                                        {filteredData.filter(line => line.MistakeType === 'Major Mistake').map((line, index) => (\n                                            <li key={index}>{formatMovesWithNumbers(line)}</li>\n                                        ))}\n                                    </ul>\n                                )}\n                            </div>\n                            <div className=\"dropdown\">\n                                <button onClick={() => toggleDropdown('Slight Inaccuracies')}>\n                                    Slight Inaccuracies ({filteredData.filter(line => line.MistakeType === 'Slight Inaccuracy').length})\n                                </button>\n                                {activeDropdown === 'Slight Inaccuracies' && (\n                                    <ul>\n                                        {filteredData.filter(line => line.MistakeType === 'Slight Inaccuracy').map((line, index) => (\n    <li key={index}>{formatMovesWithNumbers(line)}</li>\n))}\n                                    </ul>\n                                )}\n                            </div>\n                        </div>\n                    )}\n                </section>\n            </main>\n            <footer>\n                <p>&copy; 2024 SquareChess.org All rights reserved.</p>\n            </footer>\n        </div>\n    );\n};\n\nexport default WeaknessFinder;\n\n           \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}