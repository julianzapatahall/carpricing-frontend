{"ast":null,"code":"var _jsxFileName = \"/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/WeaknessFinder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Chess } from 'chess.js';\nimport './styles.css';\n\n// Import both logo images\nimport logo from './squarechesslogolong.png'; // Adjust the path as needed\nimport logoWhite from './squarechesslogolongwhite.png'; // Adjust the path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STOCKFISH = window.STOCKFISH;\nconst WeaknessFinder = () => {\n  _s();\n  const [importedGames, setImportedGames] = useState([]);\n  const [gamesCount, setGamesCount] = useState(0);\n  const [commonLines, setCommonLines] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [thePgnList, setThePgnList] = useState([]);\n  const [previousOutput, setPreviousOutput] = useState(\"\");\n  const [isLogoHovered, setIsLogoHovered] = useState(false);\n  const [opponentName, setOpponentName] = useState('');\n  const [opponentColor, setOpponentColor] = useState('White');\n  const [precisionLevel, setPrecisionLevel] = useState('Amateur/SemiPro');\n  const [processing, setProcessing] = useState(false);\n  const [activeDropdown, setActiveDropdown] = useState(null);\n  const [inputMethod, setInputMethod] = useState('pgn'); // Default to pgn\n\n  let stockfish = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(\"stockfish.js\");\n  stockfish.postMessage(\"uci\");\n  useEffect(() => {}, [thePgnList]);\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const fullPgn = e.target.result;\n      let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n      let games = rawGames.map(game => '[Event' + game.trim());\n      setImportedGames(games);\n      setGamesCount(games.length);\n    };\n    reader.readAsText(file);\n  };\n  const fetchLichessGames = async username => {\n    const response = await fetch(`https://lichess.org/api/games/user/${username}?max=1000&moves=true&pgnInJson=false`);\n    const data = await response.text(); // Get the response as text (PGN format)\n    return data;\n  };\n  const fetchChessComGames = async (username, maxGames = 1000) => {\n    const fetchGamesBatch = async (username, offset) => {\n      try {\n        const response = await fetch(`https://lichess.org/api/games/user/${username}?max=100&offset=${offset}&moves=true&pgnInJson=true`, {\n          headers: {\n            'Accept': 'application/x-ndjson'\n          }\n        });\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Error fetching data: ${response.statusText} - ${errorText}`);\n        }\n        const text = await response.text();\n        return text.split('\\n').filter(Boolean).map(line => JSON.parse(line));\n      } catch (error) {\n        console.error('Error fetching games batch:', error.message);\n        return []; // Return an empty array if there's an error\n      }\n    };\n    try {\n      // Fetch the archives (list of months)\n      const archivesResponse = await fetch(`https://api.chess.com/pub/player/${username}/games/archives`);\n      if (!archivesResponse.ok) {\n        const errorText = await archivesResponse.text();\n        throw new Error(`Error fetching archives: ${archivesResponse.statusText} - ${errorText}`);\n      }\n      const archivesData = await archivesResponse.json();\n      const archives = archivesData.archives.reverse(); // Reverse to start from the most recent\n\n      const results = [];\n      for (let archiveUrl of archives) {\n        if (results.length >= maxGames) break;\n        const games = await fetchGamesBatch(archiveUrl);\n        results.push(...games);\n        if (results.length >= maxGames) {\n          results.length = maxGames; // Trim to the maxGames limit\n          break;\n        }\n      }\n      return results;\n    } catch (error) {\n      console.error('Error fetching games from Chess.com:', error.message);\n      throw error;\n    }\n  };\n  const handleStart = async () => {\n    setProcessing(true);\n    let games = [];\n    if (inputMethod === 'lichess') {\n      const data = await fetchLichessGames(opponentName);\n      let rawGames = data.split(/\\[Event/gi).filter(Boolean);\n      games = rawGames.map(game => '[Event' + game.trim());\n    } else if (inputMethod === 'chesscom') {\n      const data = await fetchChessComGames(opponentName);\n      games = data.map(game => game.pgn);\n    } else {\n      games = importedGames;\n    }\n    processGames(games);\n  };\n  const toggleDropdown = dropdown => {\n    setActiveDropdown(activeDropdown === dropdown ? null : dropdown);\n  };\n  const createPgnFromGameIDs = (gameIDs, pgnList) => {\n    return gameIDs.map(id => pgnList[id]).join('\\n\\n');\n  };\n  const handleLineClick = gameIDs => {\n    const combinedPgn = createPgnFromGameIDs(gameIDs, thePgnList);\n\n    // Store the combined PGN in localStorage\n    localStorage.setItem('combinedPgn', combinedPgn);\n\n    // Clear imported games\n    localStorage.removeItem('importedGames');\n\n    // Redirect to analysis board\n    window.location.href = '/analysis-board';\n  };\n  const formatMovesWithNumbers = line => {\n    const moves = line.Line.split(\"*\").filter(Boolean);\n    return moves.map((move, index) => {\n      const moveNumber = Math.floor(index / 2) + 1;\n      return index % 2 === 0 ? `${moveNumber}. ${move}` : `${moveNumber}...${move}`;\n    }).join(\" \");\n  };\n  const categorizeLines = finalLongDF => {\n    return finalLongDF.map(row => {\n      const avgPointsColumn = \"AvgPoints\";\n      const avgPoints = row[avgPointsColumn];\n      if (avgPoints <= 0) {\n        row.MistakeType = \"Fatal Bafflement\";\n      } else if (avgPoints <= 0.2) {\n        row.MistakeType = \"Major Incompetence\";\n      } else if (avgPoints <= 0.4) {\n        row.MistakeType = \"Slight Inconsistency\";\n      } else {\n        row.MistakeType = \"None\";\n      }\n      return row;\n    }).filter(row => row.MistakeType !== \"None\");\n  };\n  const processGames = games => {\n    const eventList = [];\n    const siteList = [];\n    const whiteList = [];\n    const blackList = [];\n    const resultList = [];\n    const dateList = [];\n    const whiteEloList = [];\n    const blackEloList = [];\n    const fullValList = [];\n    const initialColnames = [];\n    const movesList = [];\n    const pgnList = [];\n    const chess = new Chess();\n    games.forEach((game, index) => {\n      try {\n        chess.loadPgn(game);\n        chess.deleteComments();\n        let moves = chess.history();\n        movesList.push(moves);\n        const valList = [];\n        let triangle = String(moves[0]) + \"*\";\n        valList.push(triangle);\n        pgnList.push(chess.pgn());\n        eventList.push(chess.header()[\"Event\"]);\n        siteList.push(chess.header()[\"Site\"]);\n        whiteList.push(chess.header()[\"White\"]);\n        blackList.push(chess.header()[\"Black\"]);\n        resultList.push(chess.header()[\"Result\"]);\n        dateList.push(chess.header()[\"Date\"]);\n        whiteEloList.push(chess.header()[\"WhiteElo\"]);\n        blackEloList.push(chess.header()[\"BlackElo\"]);\n        for (let i = 1; i < 25 && i < moves.length; i++) {\n          triangle += String(moves[i]) + \"*\";\n          valList.push(triangle);\n        }\n        fullValList.push(valList);\n      } catch (error) {\n        console.error(`Error processing game at index ${index}:`, error.message);\n        // Skip this game and continue with the next one\n      }\n    });\n    const dataFrame = fullValList.map((row, index) => ({\n      ...row.reduce((acc, val, i) => ({\n        ...acc,\n        [initialColnames[i]]: val\n      }), {}),\n      Event: eventList[index],\n      Site: siteList[index],\n      White: whiteList[index],\n      Black: blackList[index],\n      WhiteResult1: resultList[index] === '1-0' ? 1 : resultList[index] === '1/2-1/2' ? 0.5 : 0,\n      Date: dateList[index],\n      WhiteElo: whiteEloList[index],\n      BlackElo: blackEloList[index],\n      Pgn: pgnList[index],\n      GameID: index\n    }));\n    console.log(\"dataFrame\");\n    console.log(dataFrame);\n    const filteredDF = dataFrame.filter(row => row[opponentColor] === opponentName);\n    console.log(1);\n    console.log(filteredDF);\n    const moveProb1 = filteredDF.reduce((acc, row) => {\n      acc[row.Line1] = (acc[row.Line1] || 0) + 1;\n      return acc;\n    }, {});\n    const totalGames = filteredDF.length;\n    filteredDF.forEach(row => {\n      row.MoveProbability1 = moveProb1[row.Line1] / totalGames;\n    });\n    console.log(2);\n    console.log(filteredDF);\n    for (let i = 1; i < 25; i++) {\n      filteredDF.forEach(row => {\n        row[`WhiteResult${i + 1}`] = row.WhiteResult1;\n      });\n      const moveProb = filteredDF.reduce((acc, row) => {\n        const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n        acc[key] = (acc[key] || 0) + 1;\n        return acc;\n      }, {});\n      const lineCount = filteredDF.reduce((acc, row) => {\n        acc[row[`Line${i}`]] = (acc[row[`Line${i}`]] || 0) + 1;\n        return acc;\n      }, {});\n      filteredDF.forEach(row => {\n        const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n        row[`MoveProbability${i + 1}`] = moveProb[key] / lineCount[row[`Line${i}`]];\n      });\n    }\n    console.log(3);\n    console.log(filteredDF);\n    filteredDF.forEach(row => {\n      let pw = 1;\n      let pb = 1;\n      for (let i = 1; i <= 25; i++) {\n        if (i % 2 === 1) {\n          pw *= row[`MoveProbability${i}`] || 1;\n        } else {\n          pb *= row[`MoveProbability${i}`] || 1;\n        }\n        row[`LineProbability(W)${i}`] = pw;\n        row[`LineProbability(B)${i}`] = pb;\n      }\n    });\n    console.log(4);\n    console.log(\"filteredDF\");\n    console.log(filteredDF);\n    const longDF = [];\n    filteredDF.forEach(row => {\n      for (let i = 1; i <= 25; i++) {\n        longDF.push({\n          GameID: row.GameID,\n          Ply: i,\n          Line: row[`Line${i}`],\n          EVAL: row[`EVAL${i}`],\n          WhiteResult: row[`WhiteResult${i}`],\n          MoveProbability: row[`MoveProbability${i}`],\n          LineProbabilityW: row[`LineProbability(W)${i}`],\n          LineProbabilityB: row[`LineProbability(B)${i}`],\n          Pgn: row.Pgn\n        });\n      }\n    });\n    console.log(\"longDF\");\n    console.log(longDF);\n\n    // Add #Games column\n    const lineCounts = longDF.reduce((acc, row) => {\n      acc[row.Line] = (acc[row.Line] || 0) + 1;\n      return acc;\n    }, {});\n    longDF.forEach(row => {\n      row['#Games'] = lineCounts[row.Line];\n    });\n\n    // Calculate lower limit based on precision level\n    let minGames = 1; // Default for GM\n    if (precisionLevel === 'Amateur/SemiPro') {\n      minGames = 4;\n    } else if (precisionLevel === 'Professional') {\n      minGames = 2;\n    }\n    console.log(\"minGames\");\n    console.log(minGames);\n\n    // Filter for lines which meet minimum number of games\n    const minGameFilteredDF = longDF.filter(row => row[\"#Games\"] >= minGames);\n    // Filter for lines with probability greater than 0.2\n    const filteredLongDF = minGameFilteredDF.filter(row => opponentColor === 'Black' && row.LineProbabilityB > 0.2 || opponentColor === 'White' && row.LineProbabilityW > 0.2);\n    console.log(\"filteredLongDF\");\n    console.log(filteredLongDF);\n    const groupedByLine = filteredLongDF.reduce((acc, row) => {\n      if (!acc[row.Line]) {\n        acc[row.Line] = {\n          Line: row.Line,\n          TotalGames: 0,\n          TotalWhitePoints: 0,\n          TotalLosses: 0,\n          AverageWhitePoints: 0,\n          GameIDs: []\n        };\n      }\n      acc[row.Line].TotalGames += 1;\n      acc[row.Line].TotalWhitePoints += row.WhiteResult;\n      acc[row.Line].TotalLosses += 1 - row.WhiteResult;\n      acc[row.Line].AverageWhitePoints = acc[row.Line].TotalWhitePoints / acc[row.Line].TotalGames;\n      acc[row.Line].GameIDs.push(row.GameID);\n      return acc;\n    }, {});\n    Object.values(groupedByLine).forEach(row => {\n      row['AvgPoints'] = opponentColor === \"White\" ? row.AverageWhitePoints : 1 - row.AverageWhitePoints;\n    });\n    console.log(\"groupedByLine\");\n    console.log(groupedByLine);\n\n    // Convert groupedByLine to an array and sort by WinPercentage\n    const groupedLongDF = Object.values(groupedByLine);\n    const sortedLongDF = groupedLongDF.sort((a, b) => {\n      return a.AvgPoints - b.AvgPoints;\n    });\n    console.log(\"sortedLongDF\");\n    console.log(sortedLongDF);\n    const definedDF = sortedLongDF.filter(row => row.Line !== undefined);\n    console.log(\"definedDF\");\n    console.log(definedDF);\n    let fullLinesStr = \"//\";\n    let partialLinesStr = \"//\";\n    const nonSubsetLongDF = definedDF.filter(row => {\n      const subsets = [];\n      const lineMoves = row.Line.split(\"*\").filter(Boolean);\n\n      // SUBSET CHECK\n      // Check if value already in partialLinesStr\n      if (partialLinesStr.includes(\"//\" + row.Line + \"//\")) {\n        return false;\n      }\n\n      // SUPERSET CHECK\n      // Check if any subset is already in fullLinesStr\n\n      // Generate all possible subsets of the current line\n      for (let i = 1; i <= lineMoves.length; i++) {\n        const subset = lineMoves.slice(0, i).join(\"*\") + \"*\";\n        if (fullLinesStr.includes(\"//\" + subset + \"//\")) {\n          return false;\n        }\n        partialLinesStr += subset + \"//\";\n      }\n      ;\n      fullLinesStr += row.Line + \"//\";\n      return true;\n    });\n    console.log(\"nonSubsetLongDF\");\n    console.log(nonSubsetLongDF);\n    const categorizedLines = categorizeLines(nonSubsetLongDF);\n    setFilteredData(categorizedLines);\n    console.log(\"filteredData\");\n    console.log(filteredData);\n    const commonLines = findCommonLines(movesList);\n    setCommonLines(commonLines);\n    setProcessing(false); // Stop processing\n  };\n  const findCommonLines = movesList => {\n    const lineCounts = {};\n    movesList.forEach(moves => {\n      moves.forEach((move, index) => {\n        const line = moves.slice(0, index + 1).join(' ');\n        if (!lineCounts[line]) {\n          lineCounts[line] = 0;\n        }\n        lineCounts[line]++;\n      });\n    });\n    const sortedLines = Object.entries(lineCounts).sort((a, b) => b[1] - a[1]);\n    return sortedLines.slice(0, 5);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weakness-finder\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onMouseEnter: () => setIsLogoHovered(true),\n            onMouseLeave: () => setIsLogoHovered(false),\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: isLogoHovered ? logoWhite : logo,\n                alt: \"Home\",\n                style: {\n                  height: '40px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/blunder-punisher\",\n              className: \"prepare-link\",\n              children: \"Blunder Punisher\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/weakness-finder\",\n              children: \"Weakness Finder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/analysis-board\",\n              children: \"Analysis Board\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/about-magnus\",\n              children: \"About Magnus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"hero3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Weakness Finder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setInputMethod(inputMethod === 'pgn' ? 'lichess' : inputMethod === 'lichess' ? 'chesscom' : 'pgn'),\n              children: inputMethod === 'pgn' ? 'Switch to Lichess.org' : inputMethod === 'lichess' ? 'Switch to Chess.com' : 'Switch to Game List (.pgn)'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 25\n          }, this), inputMethod === 'pgn' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: handleFileSelect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"opponentName\",\n              children: \"Opponent Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"opponentName\",\n              value: opponentName,\n              onChange: e => setOpponentName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"lichessUsername\",\n              children: \"Opponent Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"lichessUsername\",\n              value: opponentName,\n              onChange: e => setOpponentName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"opponentColor\",\n              children: \"Opponent Color:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"opponentColor\",\n              value: opponentColor,\n              onChange: e => setOpponentColor(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"White\",\n                children: \"White\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Black\",\n                children: \"Black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"precisionLevel\",\n              children: \"Precision Level:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"precisionLevel\",\n              value: precisionLevel,\n              onChange: e => setPrecisionLevel(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Amateur/SemiPro\",\n                children: \"Amateur/SemiPro (Instantaneous)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Professional\",\n                children: \"Professional (Instantaneous)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"GM\",\n                children: \"GM (Instantaneous)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStart,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 25\n          }, this), processing && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please wait, do not refresh or close the tab...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Number of games in the file: \", gamesCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 25\n        }, this), processing ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"common-lines\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Most Common Lines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: commonLines.map(([line, count], index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [line, \" - \", count]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleDropdown('Fatal Bafflements'),\n              children: [\"Fatal Bafflements: (\", filteredData.filter(line => line.MistakeType === 'Fatal Bafflement').length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 29\n            }, this), activeDropdown === 'Fatal Bafflements' && /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: filteredData.filter(line => line.MistakeType === 'Fatal Bafflement').map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleLineClick(line.GameIDs),\n                  children: formatMovesWithNumbers(line)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 45\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleDropdown('Major Incompetencies'),\n              children: [\"Major Incompetencies: (\", filteredData.filter(line => line.MistakeType === 'Major Incompetence').length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 29\n            }, this), activeDropdown === 'Major Incompetencies' && /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: filteredData.filter(line => line.MistakeType === 'Major Incompetence').map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleLineClick(line.GameIDs),\n                  children: formatMovesWithNumbers(line)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 45\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleDropdown('Slight Inconsistencies'),\n              children: [\"Slight Inconsistencies: (\", filteredData.filter(line => line.MistakeType === 'Slight Inconsistency').length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 29\n            }, this), activeDropdown === 'Slight Inconsistencies' && /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: filteredData.filter(line => line.MistakeType === 'Slight Inconsistency').map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleLineClick(line.GameIDs),\n                  children: formatMovesWithNumbers(line)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 45\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2024 SquareChess.org All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 454,\n    columnNumber: 9\n  }, this);\n};\n_s(WeaknessFinder, \"fuXKHePkVaRneDnjuIF6GgHDDeY=\");\n_c = WeaknessFinder;\nexport default WeaknessFinder;\nvar _c;\n$RefreshReg$(_c, \"WeaknessFinder\");","map":{"version":3,"names":["React","useState","useEffect","Link","Chess","logo","logoWhite","jsxDEV","_jsxDEV","STOCKFISH","window","WeaknessFinder","_s","importedGames","setImportedGames","gamesCount","setGamesCount","commonLines","setCommonLines","filteredData","setFilteredData","thePgnList","setThePgnList","previousOutput","setPreviousOutput","isLogoHovered","setIsLogoHovered","opponentName","setOpponentName","opponentColor","setOpponentColor","precisionLevel","setPrecisionLevel","processing","setProcessing","activeDropdown","setActiveDropdown","inputMethod","setInputMethod","stockfish","Worker","postMessage","handleFileSelect","event","file","target","files","reader","FileReader","onload","e","fullPgn","result","rawGames","split","filter","Boolean","games","map","game","trim","length","readAsText","fetchLichessGames","username","response","fetch","data","text","fetchChessComGames","maxGames","fetchGamesBatch","offset","headers","ok","errorText","Error","statusText","line","JSON","parse","error","console","message","archivesResponse","archivesData","json","archives","reverse","results","archiveUrl","push","handleStart","pgn","processGames","toggleDropdown","dropdown","createPgnFromGameIDs","gameIDs","pgnList","id","join","handleLineClick","combinedPgn","localStorage","setItem","removeItem","location","href","formatMovesWithNumbers","moves","Line","move","index","moveNumber","Math","floor","categorizeLines","finalLongDF","row","avgPointsColumn","avgPoints","MistakeType","eventList","siteList","whiteList","blackList","resultList","dateList","whiteEloList","blackEloList","fullValList","initialColnames","movesList","chess","forEach","loadPgn","deleteComments","history","valList","triangle","String","header","i","dataFrame","reduce","acc","val","Event","Site","White","Black","WhiteResult1","Date","WhiteElo","BlackElo","Pgn","GameID","log","filteredDF","moveProb1","Line1","totalGames","MoveProbability1","moveProb","key","lineCount","pw","pb","longDF","Ply","EVAL","WhiteResult","MoveProbability","LineProbabilityW","LineProbabilityB","lineCounts","minGames","minGameFilteredDF","filteredLongDF","groupedByLine","TotalGames","TotalWhitePoints","TotalLosses","AverageWhitePoints","GameIDs","Object","values","groupedLongDF","sortedLongDF","sort","a","b","AvgPoints","definedDF","undefined","fullLinesStr","partialLinesStr","nonSubsetLongDF","subsets","lineMoves","includes","subset","slice","categorizedLines","findCommonLines","sortedLines","entries","className","children","onMouseEnter","onMouseLeave","to","src","alt","style","height","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","htmlFor","value","count","_c","$RefreshReg$"],"sources":["/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/WeaknessFinder.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Chess } from 'chess.js';\nimport './styles.css';\n\n// Import both logo images\nimport logo from './squarechesslogolong.png'; // Adjust the path as needed\nimport logoWhite from './squarechesslogolongwhite.png'; // Adjust the path as needed\n\nconst STOCKFISH = window.STOCKFISH;\n\nconst WeaknessFinder = () => {\n    const [importedGames, setImportedGames] = useState([]);\n    const [gamesCount, setGamesCount] = useState(0);\n    const [commonLines, setCommonLines] = useState([]);\n    const [filteredData, setFilteredData] = useState([]);\n    const [thePgnList, setThePgnList] = useState([]);\n    const [previousOutput, setPreviousOutput] = useState(\"\");\n    const [isLogoHovered, setIsLogoHovered] = useState(false);\n    const [opponentName, setOpponentName] = useState('');\n    const [opponentColor, setOpponentColor] = useState('White');\n    const [precisionLevel, setPrecisionLevel] = useState('Amateur/SemiPro');\n    const [processing, setProcessing] = useState(false);\n    const [activeDropdown, setActiveDropdown] = useState(null);\n    const [inputMethod, setInputMethod] = useState('pgn'); // Default to pgn\n\n    let stockfish = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(\"stockfish.js\");\n    stockfish.postMessage(\"uci\");\n\n    useEffect(() => {}, [thePgnList]);\n\n    const handleFileSelect = (event) => {\n        const file = event.target.files[0];\n        if (!file) return;\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const fullPgn = e.target.result;\n            let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n            let games = rawGames.map(game => '[Event' + game.trim());\n\n            setImportedGames(games);\n            setGamesCount(games.length);\n        };\n        reader.readAsText(file);\n    };\n\n    const fetchLichessGames = async (username) => {\n        const response = await fetch(`https://lichess.org/api/games/user/${username}?max=1000&moves=true&pgnInJson=false`);\n        const data = await response.text(); // Get the response as text (PGN format)\n        return data;\n    };\n\n    const fetchChessComGames = async (username, maxGames = 1000) => {\n        const fetchGamesBatch = async (username, offset) => {\n            try {\n                const response = await fetch(`https://lichess.org/api/games/user/${username}?max=100&offset=${offset}&moves=true&pgnInJson=true`, {\n                    headers: {\n                        'Accept': 'application/x-ndjson'\n                    }\n                });\n        \n                if (!response.ok) {\n                    const errorText = await response.text();\n                    throw new Error(`Error fetching data: ${response.statusText} - ${errorText}`);\n                }\n        \n                const text = await response.text();\n                return text.split('\\n').filter(Boolean).map(line => JSON.parse(line));\n            } catch (error) {\n                console.error('Error fetching games batch:', error.message);\n                return []; // Return an empty array if there's an error\n            }\n        };\n        \n    \n        try {\n            // Fetch the archives (list of months)\n            const archivesResponse = await fetch(`https://api.chess.com/pub/player/${username}/games/archives`);\n            if (!archivesResponse.ok) {\n                const errorText = await archivesResponse.text();\n                throw new Error(`Error fetching archives: ${archivesResponse.statusText} - ${errorText}`);\n            }\n            const archivesData = await archivesResponse.json();\n            const archives = archivesData.archives.reverse(); // Reverse to start from the most recent\n    \n            const results = [];\n            for (let archiveUrl of archives) {\n                if (results.length >= maxGames) break;\n    \n                const games = await fetchGamesBatch(archiveUrl);\n                results.push(...games);\n    \n                if (results.length >= maxGames) {\n                    results.length = maxGames; // Trim to the maxGames limit\n                    break;\n                }\n            }\n    \n            return results;\n        } catch (error) {\n            console.error('Error fetching games from Chess.com:', error.message);\n            throw error;\n        }\n    };\n    \n    \n\n    const handleStart = async () => {\n        setProcessing(true);\n        let games = [];\n    \n        if (inputMethod === 'lichess') {\n            const data = await fetchLichessGames(opponentName);\n            let rawGames = data.split(/\\[Event/gi).filter(Boolean);\n            games = rawGames.map(game => '[Event' + game.trim());\n        } else if (inputMethod === 'chesscom') {\n            const data = await fetchChessComGames(opponentName);\n            games = data.map(game => game.pgn);\n        } else{\n            games = importedGames;\n        }\n    \n        processGames(games);\n    };\n\n    const toggleDropdown = (dropdown) => {\n        setActiveDropdown(activeDropdown === dropdown ? null : dropdown);\n    };\n\n    const createPgnFromGameIDs = (gameIDs, pgnList) => {\n        return gameIDs.map(id => pgnList[id]).join('\\n\\n');\n    };\n    \n    const handleLineClick = (gameIDs) => {\n        const combinedPgn = createPgnFromGameIDs(gameIDs, thePgnList);\n    \n        // Store the combined PGN in localStorage\n        localStorage.setItem('combinedPgn', combinedPgn);\n    \n        // Clear imported games\n        localStorage.removeItem('importedGames');\n    \n        // Redirect to analysis board\n        window.location.href = '/analysis-board';\n    };\n    \n    \n    \n    const formatMovesWithNumbers = (line) => {\n        const moves = line.Line.split(\"*\").filter(Boolean);\n        return moves.map((move, index) => {\n            const moveNumber = Math.floor(index / 2) + 1;\n            return index % 2 === 0 ? `${moveNumber}. ${move}` : `${moveNumber}...${move}`;\n        }).join(\" \");\n    };\n\n    const categorizeLines = (finalLongDF) => {\n        return finalLongDF.map(row => {\n            const avgPointsColumn = \"AvgPoints\";\n            const avgPoints = row[avgPointsColumn];\n    \n                if (avgPoints <= 0) {\n                    row.MistakeType = \"Fatal Bafflement\";\n                } else if (avgPoints <= 0.2) {\n                    row.MistakeType = \"Major Incompetence\";\n                } else if (avgPoints <= 0.4) {\n                    row.MistakeType = \"Slight Inconsistency\";\n                } else {\n                    row.MistakeType = \"None\";\n                }\n            \n            return row;\n        }).filter(row => row.MistakeType !== \"None\");\n    };\n\n    const processGames = (games) => {\n        const eventList = [];\n        const siteList = [];\n        const whiteList = [];\n        const blackList = [];\n        const resultList = [];\n        const dateList = [];\n        const whiteEloList = [];\n        const blackEloList = [];\n        const fullValList = [];\n        const initialColnames = [];\n        const movesList = [];\n        const pgnList = [];\n        const chess = new Chess();\n    \n        games.forEach((game, index) => {\n            try {\n                chess.loadPgn(game);\n                chess.deleteComments();\n                let moves = chess.history();\n                movesList.push(moves);\n    \n                const valList = [];\n                let triangle = String(moves[0]) + \"*\";\n                valList.push(triangle);\n    \n                pgnList.push(chess.pgn());\n                eventList.push(chess.header()[\"Event\"]);\n                siteList.push(chess.header()[\"Site\"]);\n                whiteList.push(chess.header()[\"White\"]);\n                blackList.push(chess.header()[\"Black\"]);\n                resultList.push(chess.header()[\"Result\"]);\n                dateList.push(chess.header()[\"Date\"]);\n                whiteEloList.push(chess.header()[\"WhiteElo\"]);\n                blackEloList.push(chess.header()[\"BlackElo\"]);\n    \n                for (let i = 1; i < 25 && i < moves.length; i++) {\n                    triangle += String(moves[i]) + \"*\";\n                    valList.push(triangle);\n                }\n                fullValList.push(valList);\n            } catch (error) {\n                console.error(`Error processing game at index ${index}:`, error.message);\n                // Skip this game and continue with the next one\n            }\n        });\n\n        const dataFrame = fullValList.map((row, index) => ({\n            ...row.reduce((acc, val, i) => ({ ...acc, [initialColnames[i]]: val }), {}),\n            Event: eventList[index],\n            Site: siteList[index],\n            White: whiteList[index],\n            Black: blackList[index],\n            WhiteResult1: resultList[index] === '1-0' ? 1 : (resultList[index] === '1/2-1/2' ? 0.5 : 0),\n            Date: dateList[index],\n            WhiteElo: whiteEloList[index],\n            BlackElo: blackEloList[index],\n            Pgn: pgnList[index],\n            GameID: index\n        }));\n        console.log(\"dataFrame\");\n        console.log(dataFrame);\n\n        const filteredDF = dataFrame.filter(row => row[opponentColor] === opponentName);\n        console.log(1);\n        console.log(filteredDF);\n\n        const moveProb1 = filteredDF.reduce((acc, row) => {\n            acc[row.Line1] = (acc[row.Line1] || 0) + 1;\n            return acc;\n        }, {});\n        const totalGames = filteredDF.length;\n\n        filteredDF.forEach(row => {\n            row.MoveProbability1 = moveProb1[row.Line1] / totalGames;\n        });\n        console.log(2);\n        console.log(filteredDF);\n\n        for (let i = 1; i < 25; i++) {\n            filteredDF.forEach(row => {\n                row[`WhiteResult${i + 1}`] = row.WhiteResult1;\n            });\n\n            const moveProb = filteredDF.reduce((acc, row) => {\n                const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n                acc[key] = (acc[key] || 0) + 1;\n                return acc;\n            }, {});\n\n            const lineCount = filteredDF.reduce((acc, row) => {\n                acc[row[`Line${i}`]] = (acc[row[`Line${i}`]] || 0) + 1;\n                return acc;\n            }, {});\n\n            filteredDF.forEach(row => {\n                const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n                row[`MoveProbability${i + 1}`] = moveProb[key] / lineCount[row[`Line${i}`]];\n            });\n        }\n        console.log(3);\n        console.log(filteredDF);\n\n        filteredDF.forEach(row => {\n            let pw = 1;\n            let pb = 1;\n            for (let i = 1; i <= 25; i++) {\n                if (i % 2 === 1) {\n                    pw *= row[`MoveProbability${i}`] || 1;\n                } else {\n                    pb *= row[`MoveProbability${i}`] || 1;\n                }\n                row[`LineProbability(W)${i}`] = pw;\n                row[`LineProbability(B)${i}`] = pb;\n            }\n        });\n        console.log(4);\n        console.log(\"filteredDF\");\n        console.log(filteredDF);\n\n        const longDF = [];\n        filteredDF.forEach(row => {\n            for (let i = 1; i <= 25; i++) {\n                longDF.push({\n                    GameID: row.GameID,\n                    Ply: i,\n                    Line: row[`Line${i}`],\n                    EVAL: row[`EVAL${i}`],\n                    WhiteResult: row[`WhiteResult${i}`],\n                    MoveProbability: row[`MoveProbability${i}`],\n                    LineProbabilityW: row[`LineProbability(W)${i}`],\n                    LineProbabilityB: row[`LineProbability(B)${i}`],\n                    Pgn: row.Pgn\n                });\n            }\n        });\n        console.log(\"longDF\");\n        console.log(longDF);\n\n        // Add #Games column\n        const lineCounts = longDF.reduce((acc, row) => {\n            acc[row.Line] = (acc[row.Line] || 0) + 1;\n            return acc;\n        }, {});\n\n        longDF.forEach(row => {\n            row['#Games'] = lineCounts[row.Line];\n        });\n\n        // Calculate lower limit based on precision level\n        let minGames = 1; // Default for GM\n        if (precisionLevel === 'Amateur/SemiPro') {\n            minGames = 4;\n        } else if (precisionLevel === 'Professional') {\n            minGames = 2;\n        }\n\n        console.log(\"minGames\");\n        console.log(minGames);\n\n         // Filter for lines which meet minimum number of games\n         const minGameFilteredDF = longDF.filter(row => \n            (row[\"#Games\"] >= minGames)\n        );\n        // Filter for lines with probability greater than 0.2\n        const filteredLongDF = minGameFilteredDF.filter(row => \n            (opponentColor === 'Black' && row.LineProbabilityB > 0.2) ||\n            (opponentColor === 'White' && row.LineProbabilityW > 0.2)\n        );\n        console.log(\"filteredLongDF\");\n        console.log(filteredLongDF);\n\n        const groupedByLine = filteredLongDF.reduce((acc, row) => {\n            if (!acc[row.Line]) {\n                acc[row.Line] = {\n                    Line: row.Line,\n                    TotalGames: 0,\n                    TotalWhitePoints: 0,\n                    TotalLosses: 0,\n                    AverageWhitePoints: 0,\n                    GameIDs: []\n                };\n            }\n            acc[row.Line].TotalGames += 1;\n            acc[row.Line].TotalWhitePoints += row.WhiteResult;\n            acc[row.Line].TotalLosses += (1 - row.WhiteResult);\n            acc[row.Line].AverageWhitePoints = acc[row.Line].TotalWhitePoints / acc[row.Line].TotalGames;\n            acc[row.Line].GameIDs.push(row.GameID);\n            return acc;\n        }, {});\n\n      \n\n        Object.values(groupedByLine).forEach(row => {\n            row['AvgPoints'] = opponentColor === \"White\" ? row.AverageWhitePoints : 1 - row.AverageWhitePoints;\n        });\n\n        console.log(\"groupedByLine\");\n        console.log(groupedByLine);\n        \n\n\n        // Convert groupedByLine to an array and sort by WinPercentage\n        const groupedLongDF = Object.values(groupedByLine);\n        const sortedLongDF = groupedLongDF.sort((a, b) => {\n        return a.AvgPoints - b.AvgPoints;\n    });\n        \n\n        console.log(\"sortedLongDF\");\n        console.log(sortedLongDF);\n        \n\n    const definedDF = sortedLongDF.filter(row => row.Line !== undefined);\n    console.log(\"definedDF\");\n        console.log(definedDF);\n \n        let fullLinesStr = \"//\";\n        let partialLinesStr = \"//\";\n    const nonSubsetLongDF = definedDF.filter(row => {\n        const subsets = [];\n        const lineMoves = row.Line.split(\"*\").filter(Boolean);\n        \n// SUBSET CHECK\n        // Check if value already in partialLinesStr\n        if (partialLinesStr.includes(\"//\" + row.Line +\"//\")) {\n                return false;\n            }\n        \n\n\n        // SUPERSET CHECK\n        // Check if any subset is already in fullLinesStr\n\n        // Generate all possible subsets of the current line\n        for (let i = 1; i <= lineMoves.length; i++) {\n            const subset = lineMoves.slice(0, i).join(\"*\") + \"*\"; \n            if (fullLinesStr.includes(\"//\" + subset+ \"//\")) {\n                return false;\n            }\n            partialLinesStr += subset + \"//\";\n    };\n        fullLinesStr += row.Line+ \"//\";\n        return true;\n    });\n\n    console.log(\"nonSubsetLongDF\");\n    console.log(nonSubsetLongDF);\n        const categorizedLines = categorizeLines(nonSubsetLongDF);\n        setFilteredData(categorizedLines);\n        console.log(\"filteredData\");\n    console.log(filteredData);\n\n        const commonLines = findCommonLines(movesList);\n        setCommonLines(commonLines);\n\n        setProcessing(false); // Stop processing\n    };\n\n    const findCommonLines = (movesList) => {\n        const lineCounts = {};\n\n        movesList.forEach(moves => {\n            moves.forEach((move, index) => {\n                const line = moves.slice(0, index + 1).join(' ');\n                if (!lineCounts[line]) {\n                    lineCounts[line] = 0;\n                }\n                lineCounts[line]++;\n            });\n        });\n\n        const sortedLines = Object.entries(lineCounts).sort((a, b) => b[1] - a[1]);\n        return sortedLines.slice(0, 5);\n    };\n\n    return (\n        <div className=\"weakness-finder\">\n            <header>\n                <nav>\n                    <ul>\n                        <li onMouseEnter={() => setIsLogoHovered(true)}\n                            onMouseLeave={() => setIsLogoHovered(false)}>\n                            <Link to=\"/\">\n                                <img src={isLogoHovered ? logoWhite : logo} alt=\"Home\" style={{ height: '40px' }} />\n                            </Link>\n                        </li>\n                        <li><Link to=\"/blunder-punisher\" className=\"prepare-link\">Blunder Punisher</Link></li>\n                        <li><Link to=\"/weakness-finder\">Weakness Finder</Link></li>\n                        <li><Link to=\"/analysis-board\">Analysis Board</Link></li>\n                        <li><Link to=\"/about-magnus\">About Magnus</Link></li>\n                    </ul>\n                </nav>\n            </header>\n            <main>\n                <section className=\"hero3\">\n                    <h1>Weakness Finder</h1>\n                    <div className=\"form-container\">\n                        <div className=\"form-group\">\n                            <button onClick={() => setInputMethod(inputMethod === 'pgn' ? 'lichess' : inputMethod === 'lichess' ? 'chesscom' : 'pgn')}>\n                                {inputMethod === 'pgn' ? 'Switch to Lichess.org' : inputMethod === 'lichess' ? 'Switch to Chess.com' : 'Switch to Game List (.pgn)'}\n                            </button>\n                        </div>\n                        {inputMethod === 'pgn' ? (\n                            <div className=\"form-group\">\n                                <input type=\"file\" onChange={handleFileSelect} />\n                                <label htmlFor=\"opponentName\">Opponent Name:</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"opponentName\" \n                                    value={opponentName} \n                                    onChange={(e) => setOpponentName(e.target.value)} \n                                />\n                            </div>\n                        ) :  (\n                            <div className=\"form-group\">\n                                <label htmlFor=\"lichessUsername\">Opponent Username:</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"lichessUsername\" \n                                    value={opponentName} \n                                    onChange={(e) => setOpponentName(e.target.value)} \n                                />\n                            </div>\n                        )}\n                        <div className=\"form-group\">\n                            <label htmlFor=\"opponentColor\">Opponent Color:</label>\n                            <select \n                                id=\"opponentColor\" \n                                value={opponentColor} \n                                onChange={(e) => setOpponentColor(e.target.value)}\n                            >\n                                <option value=\"White\">White</option>\n                                <option value=\"Black\">Black</option>\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"precisionLevel\">Precision Level:</label>\n                            <select \n                                id=\"precisionLevel\" \n                                value={precisionLevel} \n                                onChange={(e) => setPrecisionLevel(e.target.value)}\n                            >\n                                <option value=\"Amateur/SemiPro\">Amateur/SemiPro (Instantaneous)</option>\n                                <option value=\"Professional\">Professional (Instantaneous)</option>\n                                <option value=\"GM\">GM (Instantaneous)</option>\n                            </select>\n                        </div>\n                        <button onClick={handleStart}>Start</button>\n                        {processing && <p>Please wait, do not refresh or close the tab...</p>}\n                        </div>\n                        <p>Number of games in the file: {gamesCount}</p>\n                {processing ? (\n                    <div className=\"common-lines\">\n                        <h2>Most Common Lines</h2>\n                        <ul>\n                            {commonLines.map(([line, count], index) => (\n                                <li key={index}>{line} - {count}</li>\n                            ))}\n                        </ul>\n                    </div>\n                ) : (\n                    <div className=\"dropdown-container\">\n                        <div className=\"dropdown\">\n                            <button onClick={() => toggleDropdown('Fatal Bafflements')}>\n                                Fatal Bafflements: ({filteredData.filter(line => line.MistakeType === 'Fatal Bafflement').length})\n                            </button>\n                            {activeDropdown === 'Fatal Bafflements' && (\n                                <ul>\n                                    {filteredData.filter(line => line.MistakeType === 'Fatal Bafflement').map((line, index) => (\n                                        <li key={index}>\n                                            <button onClick={() => handleLineClick(line.GameIDs)}>\n                                                {formatMovesWithNumbers(line)}\n                                            </button>\n                                        </li>\n                                    ))}\n                                </ul>\n                            )}\n                        </div>\n                        <div className=\"dropdown\">\n                            <button onClick={() => toggleDropdown('Major Incompetencies')}>\n                            Major Incompetencies: ({filteredData.filter(line => line.MistakeType === 'Major Incompetence').length})\n                            </button>\n                            {activeDropdown === 'Major Incompetencies' && (\n                                <ul>\n                                    {filteredData.filter(line => line.MistakeType === 'Major Incompetence').map((line, index) => (\n                                        <li key={index}>\n                                            <button onClick={() => handleLineClick(line.GameIDs)}>\n                                                {formatMovesWithNumbers(line)}\n                                            </button>\n                                        </li>\n                                    ))}\n                                </ul>\n                            )}\n                        </div>\n                        <div className=\"dropdown\">\n                            <button onClick={() => toggleDropdown('Slight Inconsistencies')}>\n                            Slight Inconsistencies: ({filteredData.filter(line => line.MistakeType === 'Slight Inconsistency').length})\n                            </button>\n                            {activeDropdown === 'Slight Inconsistencies' && (\n                                <ul>\n                                    {filteredData.filter(line => line.MistakeType === 'Slight Inconsistency').map((line, index) => (\n                                        <li key={index}>\n                                            <button onClick={() => handleLineClick(line.GameIDs)}>\n                                                {formatMovesWithNumbers(line)}\n                                            </button>\n                                        </li>\n                                    ))}\n                                </ul>\n                            )}\n                        </div>\n                        </div>\n                    )}\n                </section>\n            </main>\n            <footer>\n                <p>&copy; 2024 SquareChess.org All rights reserved.</p>\n            </footer>\n        </div>\n    );\n};\n\nexport default WeaknessFinder;\n\n           \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}