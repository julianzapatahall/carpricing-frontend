{"ast":null,"code":"var _jsxFileName = \"/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/WeaknessFinder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Chess } from 'chess.js';\nimport './styles.css';\n\n// Import both logo images\nimport logo from './squarechesslogolong.png'; // Adjust the path as needed\nimport logoWhite from './squarechesslogolongwhite.png'; // Adjust the path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STOCKFISH = window.STOCKFISH;\nconst WeaknessFinder = () => {\n  _s();\n  const [importedGames, setImportedGames] = useState([]);\n  const [gamesCount, setGamesCount] = useState(0);\n  const [commonLines, setCommonLines] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [thePgnList, setThePgnList] = useState([]);\n  const [previousOutput, setPreviousOutput] = useState(\"\");\n  const [isLogoHovered, setIsLogoHovered] = useState(false);\n  const [opponentName, setOpponentName] = useState('');\n  const [opponentColor, setOpponentColor] = useState('White');\n  const [processing, setProcessing] = useState(false);\n  const [activeDropdown, setActiveDropdown] = useState(null);\n  let stockfish = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(\"stockfish.js\");\n  stockfish.postMessage(\"uci\");\n  useEffect(() => {}, [thePgnList]);\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const fullPgn = e.target.result;\n      let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n      let games = rawGames.map(game => '[Event' + game.trim());\n      setImportedGames(games);\n      setGamesCount(games.length);\n    };\n    reader.readAsText(file);\n  };\n  const handleStart = () => {\n    setProcessing(true);\n    const games = importedGames;\n    processGames(games);\n  };\n  const toggleDropdown = dropdown => {\n    setActiveDropdown(activeDropdown === dropdown ? null : dropdown);\n  };\n  const createPgnFromGameIDs = (gameIDs, pgnList) => {\n    return gameIDs.map(id => pgnList[id]).join('\\n\\n');\n  };\n  const handleLineClick = gameIDs => {\n    const combinedPgn = createPgnFromGameIDs(gameIDs, thePgnList);\n\n    // Store the combined PGN in localStorage\n    localStorage.setItem('combinedPgn', combinedPgn);\n\n    // Clear imported games\n    localStorage.removeItem('importedGames');\n\n    // Redirect to analysis board\n    window.location.href = '/analysis-board';\n  };\n  const formatMovesWithNumbers = line => {\n    const moves = line.Line.split(\"*\").filter(Boolean);\n    return moves.map((move, index) => {\n      const moveNumber = Math.floor(index / 2) + 1;\n      return index % 2 === 0 ? `${moveNumber}. ${move}` : `${moveNumber}...${move}`;\n    }).join(\" \");\n  };\n  const categorizeLines = finalLongDF => {\n    return finalLongDF.map(row => {\n      const wpColumn = \"WinPercentage\";\n      const wp = row[wpColumn];\n      if (wp <= 0) {\n        row.MistakeType = \"Fatal Bafflement\";\n      } else if (wp <= 0.2) {\n        row.MistakeType = \"Major Incompetence\";\n      } else if (wp <= 0.4) {\n        row.MistakeType = \"Slight Inconsistency\";\n      } else {\n        row.MistakeType = \"None\";\n      }\n      return row;\n    }).filter(row => row.MistakeType !== \"None\");\n  };\n  const processGames = games => {\n    const eventList = [];\n    const siteList = [];\n    const whiteList = [];\n    const blackList = [];\n    const resultList = [];\n    const dateList = [];\n    const whiteEloList = [];\n    const blackEloList = [];\n    const fullValList = [];\n    const initialColnames = [];\n    const movesList = [];\n    const pgnList = [];\n    const chess = new Chess();\n    games.forEach((game, index) => {\n      chess.loadPgn(game);\n      chess.deleteComments();\n      let moves = chess.history();\n      movesList.push(moves);\n      const valList = [];\n      let triangle = String(moves[0]) + \"*\";\n      valList.push(triangle);\n      pgnList.push(chess.pgn());\n      eventList.push(chess.header()[\"Event\"]);\n      siteList.push(chess.header()[\"Site\"]);\n      whiteList.push(chess.header()[\"White\"]);\n      blackList.push(chess.header()[\"Black\"]);\n      resultList.push(chess.header()[\"Result\"]);\n      dateList.push(chess.header()[\"Date\"]);\n      whiteEloList.push(chess.header()[\"WhiteElo\"]);\n      blackEloList.push(chess.header()[\"BlackElo\"]);\n      for (let i = 1; i < 25 && i < moves.length; i++) {\n        triangle += String(moves[i]) + \"*\";\n        valList.push(triangle);\n      }\n      fullValList.push(valList);\n    });\n    console.log(fullValList);\n    setThePgnList(pgnList); // Set the pgnList to the state variable thePgnList\n\n    for (let j = 1; j <= 25; j++) {\n      initialColnames.push(\"Line\" + String(j));\n    }\n    const dataFrame = fullValList.map((row, index) => ({\n      ...row.reduce((acc, val, i) => ({\n        ...acc,\n        [initialColnames[i]]: val\n      }), {}),\n      Event: eventList[index],\n      Site: siteList[index],\n      White: whiteList[index],\n      Black: blackList[index],\n      WhiteResult1: resultList[index] === '1-0' ? 1 : 0,\n      Date: dateList[index],\n      WhiteElo: whiteEloList[index],\n      BlackElo: blackEloList[index],\n      Pgn: pgnList[index],\n      GameID: index\n    }));\n    console.log(\"dataFrame\");\n    console.log(dataFrame);\n    const filteredDF = dataFrame.filter(row => row[opponentColor] === opponentName);\n    console.log(1);\n    console.log(filteredDF);\n    const moveProb1 = filteredDF.reduce((acc, row) => {\n      acc[row.Line1] = (acc[row.Line1] || 0) + 1;\n      return acc;\n    }, {});\n    const totalGames = filteredDF.length;\n    filteredDF.forEach(row => {\n      row.MoveProbability1 = moveProb1[row.Line1] / totalGames;\n    });\n    console.log(2);\n    console.log(filteredDF);\n    for (let i = 1; i < 25; i++) {\n      filteredDF.forEach(row => {\n        row[`WhiteResult${i + 1}`] = row.WhiteResult1;\n      });\n      const moveProb = filteredDF.reduce((acc, row) => {\n        const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n        acc[key] = (acc[key] || 0) + 1;\n        return acc;\n      }, {});\n      const lineCount = filteredDF.reduce((acc, row) => {\n        acc[row[`Line${i}`]] = (acc[row[`Line${i}`]] || 0) + 1;\n        return acc;\n      }, {});\n      filteredDF.forEach(row => {\n        const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n        row[`MoveProbability${i + 1}`] = moveProb[key] / lineCount[row[`Line${i}`]];\n      });\n    }\n    console.log(3);\n    console.log(filteredDF);\n    filteredDF.forEach(row => {\n      let pw = 1;\n      let pb = 1;\n      for (let i = 1; i <= 25; i++) {\n        if (i % 2 === 1) {\n          pw *= row[`MoveProbability${i}`] || 1;\n        } else {\n          pb *= row[`MoveProbability${i}`] || 1;\n        }\n        row[`LineProbability(W)${i}`] = pw;\n        row[`LineProbability(B)${i}`] = pb;\n      }\n    });\n    console.log(4);\n    console.log(\"filteredDF\");\n    console.log(filteredDF);\n    const longDF = [];\n    filteredDF.forEach(row => {\n      for (let i = 1; i <= 25; i++) {\n        longDF.push({\n          GameID: row.GameID,\n          Ply: i,\n          Line: row[`Line${i}`],\n          EVAL: row[`EVAL${i}`],\n          WhiteResult: row[`WhiteResult${i}`],\n          MoveProbability: row[`MoveProbability${i}`],\n          LineProbabilityW: row[`LineProbability(W)${i}`],\n          LineProbabilityB: row[`LineProbability(B)${i}`],\n          Pgn: row.Pgn\n        });\n      }\n    });\n    console.log(\"longDF\");\n    console.log(longDF);\n\n    // Add #Games column\n    const lineCounts = longDF.reduce((acc, row) => {\n      acc[row.Line] = (acc[row.Line] || 0) + 1;\n      return acc;\n    }, {});\n    longDF.forEach(row => {\n      row['#Games'] = lineCounts[row.Line];\n    });\n\n    // Filter for lines with probability greater than 0.2\n    const filteredLongDF = longDF.filter(row => opponentColor === 'Black' && row.LineProbabilityB > 0.2 || opponentColor === 'White' && row.LineProbabilityW > 0.2);\n    console.log(\"filteredLongDF\");\n    console.log(filteredLongDF);\n    const groupedByLine = filteredLongDF.reduce((acc, row) => {\n      if (!acc[row.Line]) {\n        acc[row.Line] = {\n          Line: row.Line,\n          TotalGames: 0,\n          TotalWins: 0,\n          TotalLosses: 0,\n          WinPercentage: 0,\n          GameIDs: []\n        };\n      }\n      acc[row.Line].TotalGames += 1;\n      acc[row.Line].TotalWins += row.WhiteResult;\n      acc[row.Line].TotalLosses += 1 - row.WhiteResult;\n      acc[row.Line].WinPercentage = acc[row.Line].TotalWins / acc[row.Line].TotalGames;\n      acc[row.Line].GameIDs.push(row.GameID);\n      return acc;\n    }, {});\n\n    // Convert groupedByLine to an array and sort by WinPercentage\n    const groupedLongDF = Object.values(groupedByLine);\n    const sortedLongDF = groupedLongDF.sort((a, b) => a.WinPercentage - b.WinPercentage);\n    console.log(\"sortedLongDF\");\n    console.log(sortedLongDF);\n    const definedDF = sortedLongDF.filter(row => row.Line !== undefined);\n    console.log(\"definedDF\");\n    console.log(definedDF);\n    let fullLinesStr = \"//\";\n    let partialLinesStr = \"//\";\n    const nonSubsetLongDF = definedDF.filter(row => {\n      const subsets = [];\n      const lineMoves = row.Line.split(\"*\").filter(Boolean);\n\n      // SUBSET CHECK\n      // Check if value already in partialLinesStr\n      if (partialLinesStr.includes(\"//\" + row.Line + \"//\")) {\n        return false;\n      }\n\n      // SUPERSET CHECK\n      // Check if any subset is already in fullLinesStr\n\n      // Generate all possible subsets of the current line\n      for (let i = 1; i <= lineMoves.length; i++) {\n        const subset = lineMoves.slice(0, i).join(\"*\") + \"*\";\n        if (fullLinesStr.includes(\"//\" + subset + \"//\")) {\n          return false;\n        }\n        partialLinesStr += subset + \"//\";\n      }\n      ;\n      fullLinesStr += row.Line + \"//\";\n      return true;\n    });\n    console.log(\"nonSubsetLongDF\");\n    console.log(nonSubsetLongDF);\n    const categorizedLines = categorizeLines(nonSubsetLongDF);\n    setFilteredData(categorizedLines);\n    console.log(\"filteredData\");\n    console.log(filteredData);\n    const commonLines = findCommonLines(movesList);\n    setCommonLines(commonLines);\n    setProcessing(false); // Stop processing\n  };\n  const findCommonLines = movesList => {\n    const lineCounts = {};\n    movesList.forEach(moves => {\n      moves.forEach((move, index) => {\n        const line = moves.slice(0, index + 1).join(' ');\n        if (!lineCounts[line]) {\n          lineCounts[line] = 0;\n        }\n        lineCounts[line]++;\n      });\n    });\n    const sortedLines = Object.entries(lineCounts).sort((a, b) => b[1] - a[1]);\n    return sortedLines.slice(0, 5);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weakness-finder\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onMouseEnter: () => setIsLogoHovered(true),\n            onMouseLeave: () => setIsLogoHovered(false),\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: isLogoHovered ? logoWhite : logo,\n                alt: \"Home\",\n                style: {\n                  height: '40px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/blunder-punisher\",\n              className: \"prepare-link\",\n              children: \"Blunder Punisher\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/weakness-finder\",\n              children: \"Weakness Finder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/analysis-board\",\n              children: \"Analysis Board\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/our-team\",\n              children: \"Our Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"hero3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Weakness Finder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleFileSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"opponentName\",\n              children: \"Opponent Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"opponentName\",\n              value: opponentName,\n              onChange: e => setOpponentName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"opponentColor\",\n              children: \"Opponent Color:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"opponentColor\",\n              value: opponentColor,\n              onChange: e => setOpponentColor(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"White\",\n                children: \"White\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Black\",\n                children: \"Black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStart,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 25\n          }, this), processing && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please wait, do not refresh or close the tab...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Number of games in the file: \", gamesCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 21\n        }, this), processing ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"common-lines\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Most Common Lines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: commonLines.map(([line, count], index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [line, \" - \", count]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleDropdown('Fatal Bafflement'),\n              children: [\"Fatal Bafflements: (\", filteredData.filter(line => line.MistakeType === 'Fatal Bafflement').length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 33\n            }, this), activeDropdown === 'Fatal Bafflement' && /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: filteredData.filter(line => line.MistakeType === 'Fatal Bafflement').map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: formatMovesWithNumbers(line)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleDropdown('Major Incompetence'),\n              children: [\"Major Incompetencies: (\", filteredData.filter(line => line.MistakeType === 'Major Incompetence').length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 33\n            }, this), activeDropdown === 'Major Incompetence' && /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: filteredData.filter(line => line.MistakeType === 'Major Incompetence').map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: formatMovesWithNumbers(line)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleDropdown('Slight Inconsistency'),\n              children: [\"Slight Inconsistencies: (\", filteredData.filter(line => line.MistakeType === 'Slight Inconsistency').length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 33\n            }, this), activeDropdown === 'Slight Inconsistency' && /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: filteredData.filter(line => line.MistakeType === 'Slight Inconsistency').map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: formatMovesWithNumbers(line)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 5\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2024 SquareChess.org All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 354,\n    columnNumber: 9\n  }, this);\n};\n_s(WeaknessFinder, \"3BXdUHaWyv4GuLjfyBMzUx3fLZ4=\");\n_c = WeaknessFinder;\nexport default WeaknessFinder;\nvar _c;\n$RefreshReg$(_c, \"WeaknessFinder\");","map":{"version":3,"names":["React","useState","useEffect","Link","Chess","logo","logoWhite","jsxDEV","_jsxDEV","STOCKFISH","window","WeaknessFinder","_s","importedGames","setImportedGames","gamesCount","setGamesCount","commonLines","setCommonLines","filteredData","setFilteredData","thePgnList","setThePgnList","previousOutput","setPreviousOutput","isLogoHovered","setIsLogoHovered","opponentName","setOpponentName","opponentColor","setOpponentColor","processing","setProcessing","activeDropdown","setActiveDropdown","stockfish","Worker","postMessage","handleFileSelect","event","file","target","files","reader","FileReader","onload","e","fullPgn","result","rawGames","split","filter","Boolean","games","map","game","trim","length","readAsText","handleStart","processGames","toggleDropdown","dropdown","createPgnFromGameIDs","gameIDs","pgnList","id","join","handleLineClick","combinedPgn","localStorage","setItem","removeItem","location","href","formatMovesWithNumbers","line","moves","Line","move","index","moveNumber","Math","floor","categorizeLines","finalLongDF","row","wpColumn","wp","MistakeType","eventList","siteList","whiteList","blackList","resultList","dateList","whiteEloList","blackEloList","fullValList","initialColnames","movesList","chess","forEach","loadPgn","deleteComments","history","push","valList","triangle","String","pgn","header","i","console","log","j","dataFrame","reduce","acc","val","Event","Site","White","Black","WhiteResult1","Date","WhiteElo","BlackElo","Pgn","GameID","filteredDF","moveProb1","Line1","totalGames","MoveProbability1","moveProb","key","lineCount","pw","pb","longDF","Ply","EVAL","WhiteResult","MoveProbability","LineProbabilityW","LineProbabilityB","lineCounts","filteredLongDF","groupedByLine","TotalGames","TotalWins","TotalLosses","WinPercentage","GameIDs","groupedLongDF","Object","values","sortedLongDF","sort","a","b","definedDF","undefined","fullLinesStr","partialLinesStr","nonSubsetLongDF","subsets","lineMoves","includes","subset","slice","categorizedLines","findCommonLines","sortedLines","entries","className","children","onMouseEnter","onMouseLeave","to","src","alt","style","height","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","htmlFor","value","onClick","count","_c","$RefreshReg$"],"sources":["/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/WeaknessFinder.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Chess } from 'chess.js';\nimport './styles.css';\n\n// Import both logo images\nimport logo from './squarechesslogolong.png'; // Adjust the path as needed\nimport logoWhite from './squarechesslogolongwhite.png'; // Adjust the path as needed\n\nconst STOCKFISH = window.STOCKFISH;\n\nconst WeaknessFinder = () => {\n    const [importedGames, setImportedGames] = useState([]);\n    const [gamesCount, setGamesCount] = useState(0);\n    const [commonLines, setCommonLines] = useState([]);\n    const [filteredData, setFilteredData] = useState([]);\n    const [thePgnList, setThePgnList] = useState([]);\n    const [previousOutput, setPreviousOutput] = useState(\"\");\n    const [isLogoHovered, setIsLogoHovered] = useState(false);\n    const [opponentName, setOpponentName] = useState('');\n    const [opponentColor, setOpponentColor] = useState('White');\n    const [processing, setProcessing] = useState(false);\n    const [activeDropdown, setActiveDropdown] = useState(null);\n\n    let stockfish = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(\"stockfish.js\");\n    stockfish.postMessage(\"uci\");\n\n    useEffect(() => {}, [thePgnList]);\n\n    const handleFileSelect = (event) => {\n        const file = event.target.files[0];\n        if (!file) return;\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const fullPgn = e.target.result;\n            let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n            let games = rawGames.map(game => '[Event' + game.trim());\n\n            setImportedGames(games);\n            setGamesCount(games.length);\n        };\n        reader.readAsText(file);\n    };\n\n    const handleStart = () => {\n        setProcessing(true);\n        const games = importedGames;\n        processGames(games);\n    };\n\n    const toggleDropdown = (dropdown) => {\n        setActiveDropdown(activeDropdown === dropdown ? null : dropdown);\n    };\n\n    const createPgnFromGameIDs = (gameIDs, pgnList) => {\n        return gameIDs.map(id => pgnList[id]).join('\\n\\n');\n    };\n    \n    const handleLineClick = (gameIDs) => {\n        const combinedPgn = createPgnFromGameIDs(gameIDs, thePgnList);\n    \n        // Store the combined PGN in localStorage\n        localStorage.setItem('combinedPgn', combinedPgn);\n    \n        // Clear imported games\n        localStorage.removeItem('importedGames');\n    \n        // Redirect to analysis board\n        window.location.href = '/analysis-board';\n    };\n    \n    \n    \n    const formatMovesWithNumbers = (line) => {\n        const moves = line.Line.split(\"*\").filter(Boolean);\n        return moves.map((move, index) => {\n            const moveNumber = Math.floor(index / 2) + 1;\n            return index % 2 === 0 ? `${moveNumber}. ${move}` : `${moveNumber}...${move}`;\n        }).join(\" \");\n    };\n\n    const categorizeLines = (finalLongDF) => {\n        return finalLongDF.map(row => {\n            const wpColumn = \"WinPercentage\";\n            const wp = row[wpColumn];\n    \n                if (wp <= 0) {\n                    row.MistakeType = \"Fatal Bafflement\";\n                } else if (wp <= 0.2) {\n                    row.MistakeType = \"Major Incompetence\";\n                } else if (wp <= 0.4) {\n                    row.MistakeType = \"Slight Inconsistency\";\n                } else {\n                    row.MistakeType = \"None\";\n                }\n            \n            return row;\n        }).filter(row => row.MistakeType !== \"None\");\n    };\n\n    const processGames = (games) => {\n        const eventList = [];\n        const siteList = [];\n        const whiteList = [];\n        const blackList = [];\n        const resultList = [];\n        const dateList = [];\n        const whiteEloList = [];\n        const blackEloList = [];\n        const fullValList = [];\n        const initialColnames = [];\n        const movesList = [];\n        const pgnList = [];\n        const chess = new Chess();\n\n        games.forEach((game, index) => {\n            chess.loadPgn(game);\n            chess.deleteComments();\n            let moves = chess.history();\n            movesList.push(moves);\n\n            const valList = [];\n            let triangle = String(moves[0]) + \"*\";\n            valList.push(triangle);\n\n            pgnList.push(chess.pgn());\n            eventList.push(chess.header()[\"Event\"]);\n            siteList.push(chess.header()[\"Site\"]);\n            whiteList.push(chess.header()[\"White\"]);\n            blackList.push(chess.header()[\"Black\"]);\n            resultList.push(chess.header()[\"Result\"]);\n            dateList.push(chess.header()[\"Date\"]);\n            whiteEloList.push(chess.header()[\"WhiteElo\"]);\n            blackEloList.push(chess.header()[\"BlackElo\"]);\n\n            for (let i = 1; i < 25 && i < moves.length; i++) {\n                triangle += String(moves[i]) + \"*\";\n                valList.push(triangle);\n            }\n            fullValList.push(valList);\n        });\n        console.log(fullValList);\n\n        setThePgnList(pgnList); // Set the pgnList to the state variable thePgnList\n\n        for (let j = 1; j <= 25; j++) {\n            initialColnames.push(\"Line\" + String(j));\n        }\n\n        const dataFrame = fullValList.map((row, index) => ({\n            ...row.reduce((acc, val, i) => ({ ...acc, [initialColnames[i]]: val }), {}),\n            Event: eventList[index],\n            Site: siteList[index],\n            White: whiteList[index],\n            Black: blackList[index],\n            WhiteResult1: resultList[index] === '1-0' ? 1 : 0,\n            Date: dateList[index],\n            WhiteElo: whiteEloList[index],\n            BlackElo: blackEloList[index],\n            Pgn: pgnList[index],\n            GameID: index\n        }));\n        console.log(\"dataFrame\");\n        console.log(dataFrame);\n\n        const filteredDF = dataFrame.filter(row => row[opponentColor] === opponentName);\n        console.log(1);\n        console.log(filteredDF);\n\n        const moveProb1 = filteredDF.reduce((acc, row) => {\n            acc[row.Line1] = (acc[row.Line1] || 0) + 1;\n            return acc;\n        }, {});\n        const totalGames = filteredDF.length;\n\n        filteredDF.forEach(row => {\n            row.MoveProbability1 = moveProb1[row.Line1] / totalGames;\n        });\n        console.log(2);\n        console.log(filteredDF);\n\n        for (let i = 1; i < 25; i++) {\n            filteredDF.forEach(row => {\n                row[`WhiteResult${i + 1}`] = row.WhiteResult1;\n            });\n\n            const moveProb = filteredDF.reduce((acc, row) => {\n                const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n                acc[key] = (acc[key] || 0) + 1;\n                return acc;\n            }, {});\n\n            const lineCount = filteredDF.reduce((acc, row) => {\n                acc[row[`Line${i}`]] = (acc[row[`Line${i}`]] || 0) + 1;\n                return acc;\n            }, {});\n\n            filteredDF.forEach(row => {\n                const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n                row[`MoveProbability${i + 1}`] = moveProb[key] / lineCount[row[`Line${i}`]];\n            });\n        }\n        console.log(3);\n        console.log(filteredDF);\n\n        filteredDF.forEach(row => {\n            let pw = 1;\n            let pb = 1;\n            for (let i = 1; i <= 25; i++) {\n                if (i % 2 === 1) {\n                    pw *= row[`MoveProbability${i}`] || 1;\n                } else {\n                    pb *= row[`MoveProbability${i}`] || 1;\n                }\n                row[`LineProbability(W)${i}`] = pw;\n                row[`LineProbability(B)${i}`] = pb;\n            }\n        });\n        console.log(4);\n        console.log(\"filteredDF\");\n        console.log(filteredDF);\n\n        const longDF = [];\n        filteredDF.forEach(row => {\n            for (let i = 1; i <= 25; i++) {\n                longDF.push({\n                    GameID: row.GameID,\n                    Ply: i,\n                    Line: row[`Line${i}`],\n                    EVAL: row[`EVAL${i}`],\n                    WhiteResult: row[`WhiteResult${i}`],\n                    MoveProbability: row[`MoveProbability${i}`],\n                    LineProbabilityW: row[`LineProbability(W)${i}`],\n                    LineProbabilityB: row[`LineProbability(B)${i}`],\n                    Pgn: row.Pgn\n                });\n            }\n        });\n        console.log(\"longDF\");\n        console.log(longDF);\n\n        // Add #Games column\n        const lineCounts = longDF.reduce((acc, row) => {\n            acc[row.Line] = (acc[row.Line] || 0) + 1;\n            return acc;\n        }, {});\n\n        longDF.forEach(row => {\n            row['#Games'] = lineCounts[row.Line];\n        });\n\n        // Filter for lines with probability greater than 0.2\n        const filteredLongDF = longDF.filter(row => \n            (opponentColor === 'Black' && row.LineProbabilityB > 0.2) ||\n            (opponentColor === 'White' && row.LineProbabilityW > 0.2)\n        );\n        console.log(\"filteredLongDF\");\n        console.log(filteredLongDF);\n\n        const groupedByLine = filteredLongDF.reduce((acc, row) => {\n            if (!acc[row.Line]) {\n                acc[row.Line] = {\n                    Line: row.Line,\n                    TotalGames: 0,\n                    TotalWins: 0,\n                    TotalLosses: 0,\n                    WinPercentage: 0,\n                    GameIDs: []\n                };\n            }\n            acc[row.Line].TotalGames += 1;\n            acc[row.Line].TotalWins += row.WhiteResult;\n            acc[row.Line].TotalLosses += (1 - row.WhiteResult);\n            acc[row.Line].WinPercentage = acc[row.Line].TotalWins / acc[row.Line].TotalGames;\n            acc[row.Line].GameIDs.push(row.GameID);\n            return acc;\n        }, {});\n\n        // Convert groupedByLine to an array and sort by WinPercentage\n        const groupedLongDF = Object.values(groupedByLine);\n        const sortedLongDF = groupedLongDF.sort((a, b) => a.WinPercentage - b.WinPercentage);\n\n        \n\n        console.log(\"sortedLongDF\");\n        console.log(sortedLongDF);\n        \n\n    const definedDF = sortedLongDF.filter(row => row.Line !== undefined);\n    console.log(\"definedDF\");\n        console.log(definedDF);\n \n        let fullLinesStr = \"//\";\n        let partialLinesStr = \"//\";\n    const nonSubsetLongDF = definedDF.filter(row => {\n        const subsets = [];\n        const lineMoves = row.Line.split(\"*\").filter(Boolean);\n        \n// SUBSET CHECK\n        // Check if value already in partialLinesStr\n        if (partialLinesStr.includes(\"//\" + row.Line +\"//\")) {\n                return false;\n            }\n        \n\n\n        // SUPERSET CHECK\n        // Check if any subset is already in fullLinesStr\n\n        // Generate all possible subsets of the current line\n        for (let i = 1; i <= lineMoves.length; i++) {\n            const subset = lineMoves.slice(0, i).join(\"*\") + \"*\"; \n            if (fullLinesStr.includes(\"//\" + subset+ \"//\")) {\n                return false;\n            }\n            partialLinesStr += subset + \"//\";\n    };\n        fullLinesStr += row.Line+ \"//\";\n        return true;\n    });\n\n    console.log(\"nonSubsetLongDF\");\n    console.log(nonSubsetLongDF);\n        const categorizedLines = categorizeLines(nonSubsetLongDF);\n        setFilteredData(categorizedLines);\n        console.log(\"filteredData\");\n    console.log(filteredData);\n\n        const commonLines = findCommonLines(movesList);\n        setCommonLines(commonLines);\n\n        setProcessing(false); // Stop processing\n    };\n\n    const findCommonLines = (movesList) => {\n        const lineCounts = {};\n\n        movesList.forEach(moves => {\n            moves.forEach((move, index) => {\n                const line = moves.slice(0, index + 1).join(' ');\n                if (!lineCounts[line]) {\n                    lineCounts[line] = 0;\n                }\n                lineCounts[line]++;\n            });\n        });\n\n        const sortedLines = Object.entries(lineCounts).sort((a, b) => b[1] - a[1]);\n        return sortedLines.slice(0, 5);\n    };\n\n    return (\n        <div className=\"weakness-finder\">\n            <header>\n                <nav>\n                    <ul>\n                        <li onMouseEnter={() => setIsLogoHovered(true)}\n                            onMouseLeave={() => setIsLogoHovered(false)}>\n                            <Link to=\"/\">\n                                <img src={isLogoHovered ? logoWhite : logo} alt=\"Home\" style={{ height: '40px' }} />\n                            </Link>\n                        </li>\n                        <li><Link to=\"/blunder-punisher\" className=\"prepare-link\">Blunder Punisher</Link></li>\n                        <li><Link to=\"/weakness-finder\">Weakness Finder</Link></li>\n                        <li><Link to=\"/analysis-board\">Analysis Board</Link></li>\n                        <li><Link to=\"/our-team\">Our Team</Link></li>\n                    </ul>\n                </nav>\n            </header>\n            <main>\n                <section className=\"hero3\">\n                    <h1>Weakness Finder</h1>\n                    <div className=\"form-container\">\n                        <input type=\"file\" onChange={handleFileSelect} />\n                        <div className=\"form-group\">\n                            <label htmlFor=\"opponentName\">Opponent Name:</label>\n                            <input \n                                type=\"text\" \n                                id=\"opponentName\" \n                                value={opponentName} \n                                onChange={(e) => setOpponentName(e.target.value)} \n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"opponentColor\">Opponent Color:</label>\n                            <select \n                                id=\"opponentColor\" \n                                value={opponentColor} \n                                onChange={(e) => setOpponentColor(e.target.value)}\n                            >\n                                <option value=\"White\">White</option>\n                                <option value=\"Black\">Black</option>\n                            </select>\n                        </div>\n                        <button onClick={handleStart}>Start</button>\n                        {processing && <p>Please wait, do not refresh or close the tab...</p>}\n                        </div>\n                    <p>Number of games in the file: {gamesCount}</p>\n                    {processing ? (\n                        <div className=\"common-lines\">\n                            <h2>Most Common Lines</h2>\n                            <ul>\n                                {commonLines.map(([line, count], index) => (\n                                    <li key={index}>{line} - {count}</li>\n                                ))}\n                            </ul>\n                        </div>\n                    ) : (\n                        <div className=\"dropdown-container\">\n                            <div className=\"dropdown\">\n                                <button onClick={() => toggleDropdown('Fatal Bafflement')}>\n                                Fatal Bafflements: ({filteredData.filter(line => line.MistakeType === 'Fatal Bafflement').length})\n                                </button>\n                                {activeDropdown === 'Fatal Bafflement' && (\n                                    <ul>\n                                        {filteredData.filter(line => line.MistakeType === 'Fatal Bafflement').map((line, index) => (\n                                            <li key={index}>{formatMovesWithNumbers(line)}</li>\n                                        ))}\n                                    </ul>\n                                )}\n                            </div>\n                            <div className=\"dropdown\">\n                                <button onClick={() => toggleDropdown('Major Incompetence')}>\n                                Major Incompetencies: ({filteredData.filter(line => line.MistakeType === 'Major Incompetence').length})\n                                </button>\n                                {activeDropdown === 'Major Incompetence' && (\n                                    <ul>\n                                        {filteredData.filter(line => line.MistakeType === 'Major Incompetence').map((line, index) => (\n                                            <li key={index}>{formatMovesWithNumbers(line)}</li>\n                                        ))}\n                                    </ul>\n                                )}\n                            </div>\n                            <div className=\"dropdown\">\n                                <button onClick={() => toggleDropdown('Slight Inconsistency')}>\n                                    Slight Inconsistencies: ({filteredData.filter(line => line.MistakeType === 'Slight Inconsistency').length})\n                                </button>\n                                {activeDropdown === 'Slight Inconsistency' && (\n                                    <ul>\n                                        {filteredData.filter(line => line.MistakeType === 'Slight Inconsistency').map((line, index) => (\n    <li key={index}>{formatMovesWithNumbers(line)}</li>\n))}\n                                    </ul>\n                                )}\n                            </div>\n                        </div>\n                    )}\n                </section>\n            </main>\n            <footer>\n                <p>&copy; 2024 SquareChess.org All rights reserved.</p>\n            </footer>\n        </div>\n    );\n};\n\nexport default WeaknessFinder;\n\n           \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}