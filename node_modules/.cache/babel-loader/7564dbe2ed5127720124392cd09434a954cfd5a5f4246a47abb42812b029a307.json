{"ast":null,"code":"var _jsxFileName = \"/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/EditBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Chessboard from 'chessboardjsx';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Chess, validateFen } from 'chess.js'; // Import chess.js for FEN validation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditBoard = ({\n  in_fen,\n  updateFenAndClose\n}) => {\n  _s();\n  const [fen, setFen] = useState(in_fen || 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1');\n  const [orientation, setOrientation] = useState('white');\n  const navigate = useNavigate(); // Using useNavigate for navigation\n\n  // Chess instance for validation\n  const chess = new Chess();\n  useEffect(() => {\n    setFen(in_fen);\n  }, [in_fen]);\n  const handleFlipBoard = () => {\n    setOrientation(orientation === 'white' ? 'black' : 'white');\n  };\n  const toggleTurn = () => {\n    const parts = fen.split(' ');\n    parts[1] = parts[1] === 'w' ? 'b' : 'w';\n    setFen(parts.join(' '));\n  };\n  const changeCastling = castling => {\n    const parts = fen.split(' ');\n    parts[2] = castling;\n    setFen(parts.join(' '));\n  };\n  const handleDrop = ({\n    sourceSquare,\n    targetSquare,\n    piece\n  }) => {\n    console.log(`Dropping piece: ${piece} from ${sourceSquare} to ${targetSquare}`);\n    if (!sourceSquare || !targetSquare || !piece) {\n      console.error('Missing drop data');\n      return;\n    }\n\n    // This function will update the FEN string based on the source and target squares\n    const updateFen = (fen, source, target, piece) => {\n      const rows = fen.split(' ');\n      const position = rows[0].split('/');\n      const pieceCode = piece[0] === 'b' ? piece[1].toLowerCase() : piece[1].toUpperCase(); // convert piece to FEN notation\n\n      const sourceRank = 8 - parseInt(source[1]);\n      const sourceFile = source.charCodeAt(0) - 'a'.charCodeAt(0);\n      const targetRank = 8 - parseInt(target[1]);\n      const targetFile = target.charCodeAt(0) - 'a'.charCodeAt(0);\n      if (source !== \"spare\") {\n        // Remove the piece from the source square\n        position[sourceRank] = replaceCharInRank(position[sourceRank], sourceFile, '1');\n      }\n      // Add the piece to the target square\n      position[targetRank] = replaceCharInRank(position[targetRank], targetFile, pieceCode);\n\n      // Recompose the FEN string\n      rows[0] = position.join('/');\n      return rows.join(' ');\n    };\n\n    // Function to replace character in a rank with piece or empty\n    const replaceCharInRank = (rank, fileIndex, newChar) => {\n      const expandedRank = expandRank(rank); // expand the rank to 8 characters\n      const updatedRank = expandedRank.substring(0, fileIndex) + newChar + expandedRank.substring(fileIndex + 1);\n      return compressRank(updatedRank); // compress the rank back into FEN format\n    };\n\n    // Expands a FEN rank string\n    const expandRank = rank => {\n      return rank.replace(/[1-8]/g, match => ''.padStart(parseInt(match), '1'));\n    };\n\n    // Compresses a FEN rank string\n    const compressRank = rank => {\n      return rank.replace(/1{1,8}/g, match => match.length);\n    };\n    try {\n      const newFen = updateFen(fen, sourceSquare, targetSquare, piece);\n      console.log(`New FEN: ${newFen}`);\n      setFen(newFen);\n    } catch (error) {\n      console.error('Error processing move:', error);\n    }\n  };\n  const handleStartingPosition = () => {\n    setFen('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1');\n  };\n  const handleClearBoard = () => {\n    setFen('8/8/8/8/8/8/8/8 w - - 0 1');\n  };\n  const isValidFen = () => {\n    return validateFen(fen).ok;\n  };\n  const handleAnalyze = () => {\n    if (isValidFen()) {\n      navigate('/analysis-board', {\n        state: {\n          fen\n        }\n      });\n    } else {\n      console.error('Invalid FEN');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFlipBoard,\n        children: \"Flip Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTurn,\n        children: \"Toggle Turn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeCastling('KQ'),\n        children: \"Enable White Castling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeCastling('kq'),\n        children: \"Enable Black Castling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeCastling('KQkq'),\n        children: \"Enable All Castling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeCastling('-'),\n        children: \"Disable Castling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n      position: fen,\n      onDrop: handleDrop,\n      width: 340,\n      sparePieces: true,\n      orientation: orientation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartingPosition,\n        children: \"Starting Position\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearBoard,\n        children: \"Clear Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), isValidFen() ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateFenAndClose(fen),\n        children: \"Close Edit and Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: \"Invalid FEN, please correct the position.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(EditBoard, \"pxbyfInVxcgrBatol9vchhpOh4I=\", false, function () {\n  return [useNavigate];\n});\n_c = EditBoard;\nexport default EditBoard;\nvar _c;\n$RefreshReg$(_c, \"EditBoard\");","map":{"version":3,"names":["React","useState","useEffect","Chessboard","Link","useNavigate","Chess","validateFen","jsxDEV","_jsxDEV","EditBoard","in_fen","updateFenAndClose","_s","fen","setFen","orientation","setOrientation","navigate","chess","handleFlipBoard","toggleTurn","parts","split","join","changeCastling","castling","handleDrop","sourceSquare","targetSquare","piece","console","log","error","updateFen","source","target","rows","position","pieceCode","toLowerCase","toUpperCase","sourceRank","parseInt","sourceFile","charCodeAt","targetRank","targetFile","replaceCharInRank","rank","fileIndex","newChar","expandedRank","expandRank","updatedRank","substring","compressRank","replace","match","padStart","length","newFen","handleStartingPosition","handleClearBoard","isValidFen","ok","handleAnalyze","state","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","width","sparePieces","style","color","_c","$RefreshReg$"],"sources":["/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/EditBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Chessboard from 'chessboardjsx';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Chess, validateFen } from 'chess.js'; // Import chess.js for FEN validation\n\nconst EditBoard = ({ in_fen, updateFenAndClose }) => {\n    const [fen, setFen] = useState(in_fen || 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1');\n  const [orientation, setOrientation] = useState('white');\n  const navigate = useNavigate(); // Using useNavigate for navigation\n\n  // Chess instance for validation\n  const chess = new Chess();\n\n  useEffect(() => {\n    setFen(in_fen);\n  }, [in_fen]);\n\n  const handleFlipBoard = () => {\n    setOrientation(orientation === 'white' ? 'black' : 'white');\n  };\n\n  const toggleTurn = () => {\n    const parts = fen.split(' ');\n    parts[1] = parts[1] === 'w' ? 'b' : 'w';\n    setFen(parts.join(' '));\n  };\n\n  const changeCastling = (castling) => {\n    const parts = fen.split(' ');\n    parts[2] = castling;\n    setFen(parts.join(' '));\n  };\n\n  const handleDrop = ({ sourceSquare, targetSquare, piece }) => {\n    console.log(`Dropping piece: ${piece} from ${sourceSquare} to ${targetSquare}`);\n  \n    if (!sourceSquare || !targetSquare || !piece) {\n      console.error('Missing drop data');\n      return;\n    }\n\n    // This function will update the FEN string based on the source and target squares\n    const updateFen = (fen, source, target, piece) => {\n      const rows = fen.split(' ');\n      const position = rows[0].split('/');\n      const pieceCode = piece[0] === 'b' ? piece[1].toLowerCase() : piece[1].toUpperCase(); // convert piece to FEN notation\n  \n      const sourceRank = 8 - parseInt(source[1]);\n      const sourceFile = source.charCodeAt(0) - 'a'.charCodeAt(0);\n      const targetRank = 8 - parseInt(target[1]);\n      const targetFile = target.charCodeAt(0) - 'a'.charCodeAt(0);\n      if (source !== \"spare\"){\n      // Remove the piece from the source square\n      position[sourceRank] = replaceCharInRank(position[sourceRank], sourceFile, '1');\n      }\n      // Add the piece to the target square\n      position[targetRank] = replaceCharInRank(position[targetRank], targetFile, pieceCode);\n  \n      // Recompose the FEN string\n      rows[0] = position.join('/');\n      return rows.join(' ');\n    };\n  \n    // Function to replace character in a rank with piece or empty\n    const replaceCharInRank = (rank, fileIndex, newChar) => {\n      const expandedRank = expandRank(rank); // expand the rank to 8 characters\n      const updatedRank = expandedRank.substring(0, fileIndex) + newChar + expandedRank.substring(fileIndex + 1);\n      return compressRank(updatedRank); // compress the rank back into FEN format\n    };\n  \n    // Expands a FEN rank string\n    const expandRank = (rank) => {\n      return rank.replace(/[1-8]/g, (match) => ''.padStart(parseInt(match), '1'));\n    };\n  \n    // Compresses a FEN rank string\n    const compressRank = (rank) => {\n      return rank.replace(/1{1,8}/g, (match) => match.length);\n    };\n  \n    try {\n      const newFen = updateFen(fen, sourceSquare, targetSquare, piece);\n      console.log(`New FEN: ${newFen}`);\n      setFen(newFen);\n    } catch (error) {\n      console.error('Error processing move:', error);\n    }\n  };\n\n  const handleStartingPosition = () => {\n    setFen('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1');\n  };\n\n  const handleClearBoard = () => {\n    setFen('8/8/8/8/8/8/8/8 w - - 0 1');\n  };\n\n  const isValidFen = () => {\n    return validateFen(fen).ok;\n  };\n\n  const handleAnalyze = () => {\n    if (isValidFen()) {\n      navigate('/analysis-board', { state: { fen } });\n    } else {\n      console.error('Invalid FEN');\n    }\n  };\n\n  return (\n    <div>\n      <div className='edit-buttons'>\n      <button onClick={handleFlipBoard}>Flip Board</button>\n      <button onClick={toggleTurn}>Toggle Turn</button>\n      <button onClick={() => changeCastling('KQ')}>Enable White Castling</button>\n      <button onClick={() => changeCastling('kq')}>Enable Black Castling</button>\n      <button onClick={() => changeCastling('KQkq')}>Enable All Castling</button>\n      <button onClick={() => changeCastling('-')}>Disable Castling</button>\n      </div>\n\n      <Chessboard\n        position={fen}\n        onDrop={handleDrop}\n        width={340}\n        sparePieces={true}\n        orientation={orientation}\n      />\n\n      <div>\n        <button onClick={handleStartingPosition}>Starting Position</button>\n        <button onClick={handleClearBoard}>Clear Board</button>\n        {isValidFen() ? (\n          <button onClick={() => updateFenAndClose(fen)}>Close Edit and Analyze</button>\n        ) : (\n          <p style={{ color: 'red' }}>Invalid FEN, please correct the position.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EditBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}