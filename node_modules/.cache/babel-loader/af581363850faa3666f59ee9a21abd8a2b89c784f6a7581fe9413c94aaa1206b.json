{"ast":null,"code":"var _jsxFileName = \"/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/WeaknessFinder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Chess } from 'chess.js';\nimport AdvancedFilter from './AdvancedFilter'; // Import the new component\nimport './styles.css';\n\n// Import both logo images\nimport logo from './squarechessai_transparent_new.png'; // Adjust the path as needed\nimport logoWhite from './squarechessai_no_black_new.png'; // Adjust the path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STOCKFISH = window.STOCKFISH;\nconst defaultState = {\n  importedGames: [],\n  gamesCount: 0,\n  commonLines: [],\n  filteredData: [],\n  thePgnList: [],\n  previousOutput: \"\",\n  opponentName: '',\n  opponentColor: 'White',\n  precisionLevel: '10% of Games',\n  processing: false,\n  activeDropdown: null,\n  inputMethod: 'chesscom',\n  isLogoHovered: false\n};\nconst WeaknessFinder = () => {\n  _s();\n  const [showAdvancedFilter, setShowAdvancedFilter] = useState(false);\n  const [filterParams, setFilterParams] = useState(null);\n  const [isLogoHovered, setIsLogoHovered] = useState(defaultState.isLogoHovered);\n  const [importedGames, setImportedGames] = useState(() => JSON.parse(localStorage.getItem('weaknessFinder_importedGames')) || defaultState.importedGames);\n  const [gamesCount, setGamesCount] = useState(() => Number(localStorage.getItem('weaknessFinder_gamesCount')) || defaultState.gamesCount);\n  const [commonLines, setCommonLines] = useState(() => JSON.parse(localStorage.getItem('weaknessFinder_commonLines')) || defaultState.commonLines);\n  const [filteredData, setFilteredData] = useState(() => JSON.parse(localStorage.getItem('weaknessFinder_filteredData')) || defaultState.filteredData);\n  const [thePgnList, setThePgnList] = useState(() => JSON.parse(localStorage.getItem('weaknessFinder_thePgnList')) || defaultState.thePgnList);\n  const [previousOutput, setPreviousOutput] = useState(defaultState.previousOutput);\n  const [opponentName, setOpponentName] = useState(() => localStorage.getItem('weaknessFinder_opponentName') || defaultState.opponentName);\n  const [opponentColor, setOpponentColor] = useState(() => localStorage.getItem('weaknessFinder_opponentColor') || defaultState.opponentColor);\n  const [precisionLevel, setPrecisionLevel] = useState(() => localStorage.getItem('weaknessFinder_precisionLevel') || defaultState.precisionLevel);\n  const [processing, setProcessing] = useState(defaultState.processing);\n  const [activeDropdown, setActiveDropdown] = useState(defaultState.activeDropdown);\n  const [inputMethod, setInputMethod] = useState(() => localStorage.getItem('weaknessFinder_inputMethod') || defaultState.inputMethod);\n  const [elapsedTime, setElapsedTime] = useState(0); // State to track elapsed time in seconds\n  const [cancelProcess, setCancelProcess] = useState(false); // To cancel the processing\n  const [timerId, setTimerId] = useState(null); // To keep track of the timer\n\n  useEffect(() => {\n    let intervalId = null;\n    if (processing) {\n      intervalId = setInterval(() => {\n        setElapsedTime(prev => prev + 1); // Increment elapsed time every second\n      }, 1000);\n      setTimerId(intervalId);\n    } else if (!processing && elapsedTime !== 0) {\n      clearInterval(timerId); // Clear the timer if the process stops\n    }\n    return () => clearInterval(intervalId); // Cleanup interval on component unmount\n  }, [processing]);\n  useEffect(() => {\n    localStorage.setItem('weaknessFinder_importedGames', JSON.stringify(importedGames));\n  }, [importedGames]);\n  useEffect(() => {\n    localStorage.setItem('weaknessFinder_gamesCount', gamesCount);\n  }, [gamesCount]);\n  useEffect(() => {\n    localStorage.setItem('weaknessFinder_commonLines', JSON.stringify(commonLines));\n  }, [commonLines]);\n  useEffect(() => {\n    localStorage.setItem('weaknessFinder_filteredData', JSON.stringify(filteredData));\n  }, [filteredData]);\n  useEffect(() => {\n    localStorage.setItem('weaknessFinder_thePgnList', JSON.stringify(thePgnList));\n  }, [thePgnList]);\n  useEffect(() => {\n    localStorage.setItem('weaknessFinder_opponentName', opponentName);\n  }, [opponentName]);\n  useEffect(() => {\n    localStorage.setItem('weaknessFinder_opponentColor', opponentColor);\n  }, [opponentColor]);\n  useEffect(() => {\n    localStorage.setItem('weaknessFinder_precisionLevel', precisionLevel);\n  }, [precisionLevel]);\n  useEffect(() => {\n    localStorage.setItem('weaknessFinder_inputMethod', inputMethod);\n  }, [inputMethod]);\n  const handleReset = () => {\n    // Reset state to default values\n    setImportedGames(defaultState.importedGames);\n    setGamesCount(defaultState.gamesCount);\n    setCommonLines(defaultState.commonLines);\n    setFilteredData(defaultState.filteredData);\n    setThePgnList(defaultState.thePgnList);\n    setPreviousOutput(defaultState.previousOutput);\n    setOpponentName(defaultState.opponentName);\n    setOpponentColor(defaultState.opponentColor);\n    setPrecisionLevel(defaultState.precisionLevel);\n    setProcessing(defaultState.processing);\n    setActiveDropdown(defaultState.activeDropdown);\n    setInputMethod(defaultState.inputMethod);\n\n    // Clear localStorage\n    localStorage.removeItem('weaknessFinder_importedGames');\n    localStorage.removeItem('weaknessFinder_gamesCount');\n    localStorage.removeItem('weaknessFinder_commonLines');\n    localStorage.removeItem('weaknessFinder_filteredData');\n    localStorage.removeItem('weaknessFinder_thePgnList');\n    localStorage.removeItem('weaknessFinder_opponentName');\n    localStorage.removeItem('weaknessFinder_opponentColor');\n    localStorage.removeItem('weaknessFinder_precisionLevel');\n    localStorage.removeItem('weaknessFinder_inputMethod');\n    localStorage.removeItem('weaknessFinder_combinedPgn');\n  };\n  let stockfish = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(\"stockfish.js\");\n  stockfish.postMessage(\"uci\");\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const fullPgn = e.target.result;\n      let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n      let games = rawGames.map(game => '[Event' + game.trim());\n      setImportedGames(games);\n      setGamesCount(games.length);\n    };\n    reader.readAsText(file);\n  };\n  const openings = {\n    // King's Pawn Openings\n    \"e4 e5\": \"Open Game\",\n    \"e4 e5 Nf3\": \"King's Knight Opening\",\n    \"e4 e5 Nf3 Nc6\": \"King's Knight Opening: Normal Variation\",\n    \"e4 e5 Nf3 Nc6 Bb5\": \"Ruy Lopez\",\n    \"e4 e5 Nf3 Nc6 Bc4\": \"Italian Game\",\n    \"e4 e5 Nf3 Nc6 Bc4 Bc5\": \"Italian Game: Giuoco Piano\",\n    \"e4 e5 Nf3 Nc6 Bc4 Nf6\": \"Two Knights Defense\",\n    \"e4 e5 Nf3 Nc6 d4\": \"Scotch Game\",\n    \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4\": \"Scotch Game: Scotch Gambit\",\n    \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4 Bc5\": \"Scotch Game: GÃ¶ring Gambit\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6\": \"Ruy Lopez: Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4\": \"Ruy Lopez: Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6\": \"Ruy Lopez: Morphy Defense, Closed\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O\": \"Ruy Lopez: Morphy Defense, Closed\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7\": \"Ruy Lopez: Closed, Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1 b5 Bb3 d6 c3\": \"Ruy Lopez: Closed, Chigorin Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1 b5 Bb3 d6 c3 O-O\": \"Ruy Lopez: Closed, Chigorin Defense, 12.d4\",\n    \"e4 e5 Nf3 d6\": \"Philidor Defense\",\n    \"e4 e5 f4\": \"King's Gambit\",\n    \"e4 e5 f4 exf4\": \"King's Gambit Accepted\",\n    \"e4 e5 f4 exf4 Nf3\": \"King's Gambit Accepted, King's Knight's Gambit\",\n    \"e4 e5 f4 exf4 Bc4\": \"King's Gambit Accepted, Bishop's Gambit\",\n    \"e4 e5 f4 d6\": \"King's Gambit Declined\",\n    \"e4 e5 Nf3 d6\": \"Philidor Defense\",\n    \"e4 e5 Nc3\": \"Vienna Game\",\n    \"e4 e5 Nc3 Nf6\": \"Vienna Game: Falkbeer Variation\",\n    \"e4 e5 Nc3 Nf6 g3\": \"Vienna Game: Mieses Variation\",\n    \"e4 e5 Nf3 Nc6 d3\": \"King's Indian Attack\",\n    \"e4 e5 d4\": \"Center Game\",\n    \"e4 e5 d4 exd4 Qxd4\": \"Center Game: Danish Gambit\",\n    // Sicilian Defense\n    \"e4 c5\": \"Sicilian Defense\",\n    \"e4 c5 Nf3\": \"Sicilian Defense: Open\",\n    \"e4 c5 Nf3 d6\": \"Sicilian Defense: Najdorf Variation\",\n    \"e4 c5 Nf3 d6 d4\": \"Sicilian Defense: Open, Najdorf\",\n    \"e4 c5 Nf3 d6 d4 cxd4 Nxd4\": \"Sicilian Defense: Najdorf Variation, 6.Bg5\",\n    \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3\": \"Sicilian Defense: Classical\",\n    \"e4 c5 Nf3 e6\": \"Sicilian Defense: Taimanov\",\n    \"e4 c5 Nf3 e6 d4 cxd4 Nxd4 Nc6\": \"Sicilian Defense: Taimanov, Bastrikov\",\n    \"e4 c5 Nf3 e6 d4 cxd4 Nxd4 a6\": \"Sicilian Defense: Kan Variation\",\n    \"e4 c5 Nf3 Nc6\": \"Sicilian Defense: Closed\",\n    \"e4 c5 Nf3 Nc6 d4\": \"Sicilian Defense: Open\",\n    \"e4 c5 Nf3 Nc6 d4 cxd4 Nxd4\": \"Sicilian Defense: Accelerated Dragon\",\n    \"e4 c5 Nf3 Nc6 d4 cxd4 Nxd4 g6\": \"Sicilian Defense: Accelerated Dragon, Maroczy Bind\",\n    \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3 a6\": \"Sicilian Defense: Najdorf, English Attack\",\n    \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3 a6 Bg5\": \"Sicilian Defense: Najdorf, Main Line\",\n    // French Defense\n    \"e4 e6\": \"French Defense\",\n    \"e4 e6 d4\": \"French Defense: Advance Variation\",\n    \"e4 e6 d4 d5\": \"French Defense: Advance\",\n    \"e4 e6 d4 d5 e5\": \"French Defense: Advance Variation\",\n    \"e4 e6 d4 d5 Nd2\": \"French Defense: Tarrasch\",\n    \"e4 e6 d4 d5 Nc3\": \"French Defense: Classical\",\n    \"e4 e6 d4 d5 Nc3 Nf6\": \"French Defense: Winawer Variation\",\n    \"e4 e6 d4 d5 Nc3 Bb4\": \"French Defense: Winawer\",\n    \"e4 e6 d4 d5 exd5 exd5 Bd3\": \"French Defense: Exchange Variation\",\n    \"e4 e6 d4 d5 exd5 exd5 Nc3\": \"French Defense: Exchange, Bogolyubov Variation\",\n    \"e4 e6 d4 d5 e5 c5\": \"French Defense: Advance Variation\",\n    \"e4 e6 d4 d5 Nf3\": \"French Defense: Two Knights\",\n    // Caro-Kann Defense\n    \"e4 c6\": \"Caro-Kann Defense\",\n    \"e4 c6 d4 d5\": \"Caro-Kann Defense: Classical\",\n    \"e4 c6 d4 d5 Nc3\": \"Caro-Kann Defense: Advance\",\n    \"e4 c6 d4 d5 Nd2\": \"Caro-Kann Defense: Tarrasch\",\n    \"e4 c6 d4 d5 exd5\": \"Caro-Kann Defense: Exchange\",\n    \"e4 c6 d4 d5 e5\": \"Caro-Kann Defense: Advance Variation\",\n    \"e4 c6 d4 d5 exd5 cxd5 c4\": \"Caro-Kann Defense: Panov-Botvinnik Attack\",\n    \"e4 c6 d4 d5 Nc3 dxe4 Nxe4\": \"Caro-Kann Defense: Classical Variation\",\n    \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Bf5\": \"Caro-Kann Defense: Tartakower Variation\",\n    \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nd7\": \"Caro-Kann Defense: Karpov Variation\",\n    \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nd7 Nf3 Ngf6\": \"Caro-Kann Defense: Smyslov Variation\",\n    // Queen's Gambit\n    \"d4 d5 c4\": \"Queen's Gambit\",\n    \"d4 d5 c4 c6\": \"Slav Defense\",\n    \"d4 d5 c4 e6\": \"Queen's Gambit Declined\",\n    \"d4 d5 c4 dxc4\": \"Queen's Gambit Accepted\",\n    \"d4 d5 c4 e6 Nc3 Nf6\": \"Queen's Gambit Declined\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Bg5\": \"Queen's Gambit Declined: Orthodox Defense\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Bg5 Be7\": \"Queen's Gambit Declined: Orthodox Defense, Main Line\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Bg5 h6\": \"Queen's Gambit Declined: Orthodox Defense, Lasker Defense\",\n    \"d4 d5 c4 e6 Nf3\": \"Queen's Gambit Declined: 5.Nf3 Variation\",\n    \"d4 d5 c4 e6 Nf3 Nf6\": \"Queen's Gambit Declined: 5.Nf3 Variation, Main Line\",\n    \"d4 d5 c4 e6 Nf3 c5\": \"Tarrasch Defense\",\n    \"d4 d5 c4 e6 Nc3 c5\": \"Tarrasch Defense, Closed Variation\",\n    \"d4 d5 c4 e6 Nc3 c5 cxd5 exd5\": \"Tarrasch Defense, Classical Variation\",\n    \"d4 d5 c4 e6 Nc3 c5 cxd5 exd5 Nf3 Nc6\": \"Tarrasch Defense, Main Line\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Nf3\": \"Queen's Gambit Declined: 6.Nf3\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Nf3 Be7\": \"Queen's Gambit Declined: 7.Be7\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Nf3 Be7 Bf4\": \"Queen's Gambit Declined: Harrwitz Attack\",\n    // King's Indian Defense\n    \"d4 Nf6\": \"Indian Game\",\n    \"d4 Nf6 c4 g6\": \"King's Indian Defense\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7\": \"King's Indian Defense: Fianchetto\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6\": \"King's Indian Defense: Classical\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O\": \"King's Indian Defense: Mar del Plata\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 f3\": \"King's Indian Defense: Saemisch Variation\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2\": \"King's Indian Defense: Orthodox Variation\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2 O-O\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2 O-O Nf3\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O\": \"King's Indian Defense: Orthodox Variation, Classical System, 7.O-O\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O Nc6\": \"King's Indian Defense: Orthodox Variation, Classical System, 7...Nc6\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O Nbd7\": \"King's Indian Defense: Orthodox Variation, Classical System, 7...Nbd7\",\n    // Nimzo-Indian Defense\n    \"d4 Nf6 c4 e6\": \"Indian Game\",\n    \"d4 Nf6 c4 e6 Nc3\": \"Nimzo-Indian Defense\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4\": \"Nimzo-Indian Defense: Classical\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4 Qc2\": \"Nimzo-Indian Defense: Classical, Capablanca Variation\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4 e3\": \"Nimzo-Indian Defense: Rubinstein\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4 e3 O-O\": \"Nimzo-Indian Defense: Rubinstein, 4...O-O\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4 Qb3\": \"Nimzo-Indian Defense: SÃ¤misch Variation\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4 a3\": \"Nimzo-Indian Defense: SÃ¤misch, Leningrad System\",\n    // Ruy Lopez Variations\n    \"e4 e5 Nf3 Nc6 Bb5 a6\": \"Ruy Lopez: Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4\": \"Ruy Lopez: Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6\": \"Ruy Lopez: Closed\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O\": \"Ruy Lopez: Closed\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7\": \"Ruy Lopez: Closed, Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1\": \"Ruy Lopez: Closed, Morphy Defense\",\n    // English Opening\n    \"c4\": \"English Opening\",\n    \"c4 e5\": \"English Opening: Reversed Sicilian\",\n    \"c4 e5 Nc3 Nc6\": \"English Opening: Four Knights\",\n    \"c4 e5 Nc3 Nf6\": \"English Opening: Two Knights\",\n    \"c4 e5 g3\": \"English Opening: Botvinnik System\",\n    // Other Common Openings\n    \"Nf3\": \"Reti Opening\",\n    \"b3\": \"Nimzowitsch-Larsen Attack\",\n    \"d4 f5\": \"Dutch Defense\",\n    \"f4\": \"Bird's Opening\",\n    \"g3\": \"King's Fianchetto Opening\",\n    // King's Pawn Openings\n    \"e4 e5\": \"Open Game\",\n    \"e4 c5\": \"Sicilian Defense\",\n    \"e4 e6\": \"French Defense\",\n    \"e4 c6\": \"Caro-Kann Defense\",\n    \"e4 d6\": \"Pirc Defense\",\n    \"e4 d5\": \"Scandinavian Defense\",\n    \"e4 Nf6\": \"Alekhine's Defense\",\n    \"e4 g6\": \"Modern Defense\",\n    \"e4 b6\": \"Owen's Defense\",\n    \"e4 Nc6\": \"Nimzowitsch Defense\",\n    \"e4 b5\": \"Polish Defense\",\n    \"e4 e5 Nf3\": \"King's Knight Opening\",\n    \"e4 e5 Nc3\": \"Vienna Game\",\n    \"e4 e5 f4\": \"King's Gambit\",\n    \"e4 e5 d4\": \"Center Game\",\n    \"e4 e5 Nf3 Nc6\": \"King's Knight Opening: Normal Variation\",\n    \"e4 e5 Nf3 Nc6 Bb5\": \"Ruy Lopez\",\n    \"e4 e5 Nf3 Nc6 Bc4\": \"Italian Game\",\n    \"e4 e5 Nf3 Nc6 Bc4 Bc5\": \"Italian Game: Giuoco Piano\",\n    \"e4 e5 Nf3 Nc6 Bc4 Nf6\": \"Two Knights Defense\",\n    \"e4 e5 Nf3 Nc6 d4\": \"Scotch Game\",\n    \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4\": \"Scotch Game: Scotch Gambit\",\n    \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4 Bc5\": \"Scotch Game: GÃ¶ring Gambit\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6\": \"Ruy Lopez: Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4\": \"Ruy Lopez: Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6\": \"Ruy Lopez: Morphy Defense, Closed\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O\": \"Ruy Lopez: Morphy Defense, Closed\",\n    \"e4 e5 Nf3 d6\": \"Philidor Defense\",\n    \"e4 e5 f4\": \"King's Gambit\",\n    \"e4 e5 f4 exf4\": \"King's Gambit Accepted\",\n    \"e4 e5 f4 d6\": \"King's Gambit Declined\",\n    \"e4 e5 Nc3\": \"Vienna Game\",\n    \"e4 e5 Nc3 Nf6\": \"Vienna Game: Falkbeer Variation\",\n    \"e4 e5 Nc3 Nf6 g3\": \"Vienna Game: Mieses Variation\",\n    \"e4 e5 d3\": \"King's Indian Attack\",\n    \"e4 e5 d4\": \"Center Game\",\n    \"e4 e5 d4 exd4 Qxd4\": \"Center Game: Danish Gambit\",\n    // Sicilian Defense\n    \"e4 c5\": \"Sicilian Defense\",\n    \"e4 c5 Nf3\": \"Sicilian Defense: Open\",\n    \"e4 c5 c3\": \"Sicilian Defense: Alapin Variation\",\n    \"e4 c5 d4\": \"Sicilian Defense: Smith-Morra Gambit\",\n    \"e4 c5 Nc3\": \"Sicilian Defense: Closed\",\n    \"e4 c5 f4\": \"Sicilian Defense: Grand Prix Attack\",\n    \"e4 c5 b3\": \"Sicilian Defense: Nimzowitsch-Rossolimo Attack\",\n    \"e4 c5 g3\": \"Sicilian Defense: Fianchetto Variation\",\n    \"e4 c5 d3\": \"Sicilian Defense: King's Indian Attack\",\n    // French Defense\n    \"e4 e6\": \"French Defense\",\n    \"e4 e6 d4\": \"French Defense: Advance Variation\",\n    \"e4 e6 d3\": \"French Defense: King's Indian Attack\",\n    \"e4 e6 c4\": \"French Defense: Franco-Hiva Gambit\",\n    \"e4 e6 Nf3\": \"French Defense: Two Knights\",\n    \"e4 e6 d4 d5\": \"French Defense: Main Line\",\n    \"e4 e6 d4 d5 e5\": \"French Defense: Advance Variation\",\n    \"e4 e6 d4 d5 Nd2\": \"French Defense: Tarrasch\",\n    \"e4 e6 d4 d5 Nc3\": \"French Defense: Classical\",\n    \"e4 e6 d4 d5 Nf3\": \"French Defense: Two Knights\",\n    \"e4 e6 d4 d5 exd5 exd5 Bd3\": \"French Defense: Exchange Variation\",\n    // Caro-Kann Defense\n    \"e4 c6\": \"Caro-Kann Defense\",\n    \"e4 c6 d4\": \"Caro-Kann Defense: Main Line\",\n    \"e4 c6 c4\": \"Caro-Kann Defense: Panov-Botvinnik Attack\",\n    \"e4 c6 Nf3\": \"Caro-Kann Defense: Two Knights\",\n    \"e4 c6 d3\": \"Caro-Kann Defense: King's Indian Attack\",\n    \"e4 c6 g3\": \"Caro-Kann Defense: Fianchetto Variation\",\n    // Pirc Defense and Modern Defense\n    \"e4 d6\": \"Pirc Defense\",\n    \"e4 g6\": \"Modern Defense\",\n    \"e4 d6 d4\": \"Pirc Defense\",\n    \"e4 g6 d4\": \"Modern Defense\",\n    \"e4 d6 d4 Nf6\": \"Pirc Defense: Classical\",\n    \"e4 g6 d4 Bg7\": \"Modern Defense: Robatsch Defense\",\n    // Scandinavian Defense\n    \"e4 d5\": \"Scandinavian Defense\",\n    \"e4 d5 exd5\": \"Scandinavian Defense: Main Line\",\n    \"e4 d5 Nf3\": \"Scandinavian Defense: Gambit\",\n    // Alekhine's Defense\n    \"e4 Nf6\": \"Alekhine's Defense\",\n    \"e4 Nf6 e5\": \"Alekhine's Defense: Chase Variation\",\n    \"e4 Nf6 d3\": \"Alekhine's Defense: King's Indian Attack\",\n    // Nimzowitsch Defense\n    \"e4 Nc6\": \"Nimzowitsch Defense\",\n    \"e4 Nc6 d4\": \"Nimzowitsch Defense: Main Line\",\n    // Dutch Defense\n    \"d4 f5\": \"Dutch Defense\",\n    \"d4 d6\": \"Old Indian Defense\",\n    \"d4 d5\": \"Queen's Gambit Declined\",\n    \"d4 Nf6\": \"Indian Game\",\n    \"d4 d5 c4\": \"Queen's Gambit\",\n    \"d4 d5 Nf3\": \"London System\",\n    \"d4 Nf6 Nf3\": \"King's Indian Attack\",\n    \"d4 f5\": \"Dutch Defense\",\n    \"d4 g6\": \"Modern Defense\",\n    \"d4 Nc6\": \"Chigorin Defense\",\n    \"d4 d6\": \"Old Indian Defense\",\n    \"d4 e6\": \"Horwitz Defense\",\n    \"d4 c5\": \"Benoni Defense\",\n    \"d4 Nf6 c4\": \"Indian Game\",\n    \"d4 f5 c4\": \"Dutch Defense\",\n    // English Opening\n    \"c4\": \"English Opening\",\n    \"c4 c5\": \"English Opening: Symmetrical Variation\",\n    \"c4 e5\": \"English Opening: Reversed Sicilian\",\n    \"c4 Nf6\": \"English Opening: Anglo-Indian\",\n    \"c4 g6\": \"English Opening: Botvinnik System\",\n    // Reti and Other Openings\n    \"Nf3\": \"Reti Opening\",\n    \"Nf3 d5\": \"Reti Opening: Main Line\",\n    \"Nf3 c5\": \"Reti Opening: Anglo-Slav\",\n    \"Nf3 c5 c4\": \"Reti Opening: King's Indian Attack\",\n    \"b3\": \"Nimzowitsch-Larsen Attack\",\n    \"g3\": \"King's Fianchetto Opening\",\n    \"f4\": \"Bird's Opening\",\n    \"f4 d5\": \"Bird's Opening: Dutch Variation\",\n    \"f4 e5\": \"From's Gambit\",\n    \"b4\": \"Polish Opening\",\n    \"b4 e5\": \"Polish Opening: Outflank Variation\",\n    \"a3\": \"Anderssen's Opening\",\n    \"h3\": \"Clemenz Opening\",\n    \"h4\": \"Desprez Opening\",\n    \"d3\": \"Mieses Opening\",\n    \"c3\": \"Saragossa Opening\",\n    \"Nc3\": \"Van Geet Opening\"\n  };\n  const detectOpening = moves => {\n    const movesSequence = moves.join(\" \");\n    for (const opening in openings) {\n      if (movesSequence.startsWith(opening)) {\n        return openings[opening];\n      }\n    }\n    return \"Unknown Opening\"; // Fallback if the opening is not in the book\n  };\n  const fetchLichessGames = async (username, maxGames = 1000, timeControls) => {\n    const timeClasses = [];\n    if (timeControls.bullet) timeClasses.push('bullet');\n    if (timeControls.blitz) timeClasses.push('blitz');\n    if (timeControls.rapid) timeClasses.push('rapid');\n    if (timeControls.classical) timeClasses.push('classical');\n    const timeClassFilter = timeClasses.length > 0 ? `&perfType=${timeClasses.join(',')}` : '';\n    const response = await fetch(`https://lichess.org/api/games/user/${username}?max=${maxGames}&moves=true&pgnInJson=false${timeClassFilter}`);\n    const data = await response.text(); // Get the response as text (PGN format)\n    return data;\n  };\n  const fetchChessComGames = async (username, maxGames = 1000, timeControls) => {\n    const fetchGamesBatch = async archiveUrl => {\n      try {\n        const response = await fetch(archiveUrl);\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Error fetching data: ${response.statusText} - ${errorText}`);\n        }\n        const data = await response.json();\n        // Filter by time controls if specified\n        const filteredGames = data.games.filter(game => {\n          if (timeControls.bullet && game.time_class === 'bullet') return true;\n          if (timeControls.blitz && game.time_class === 'blitz') return true;\n          if (timeControls.rapid && game.time_class === 'rapid') return true;\n          if (timeControls.classical && game.time_class === 'classical') return true;\n          return false;\n        });\n        return filteredGames;\n      } catch (error) {\n        console.error('Error fetching games batch:', error.message);\n        return []; // Return an empty array if there's an error\n      }\n    };\n    try {\n      const archivesResponse = await fetch(`https://api.chess.com/pub/player/${username}/games/archives`);\n      if (!archivesResponse.ok) {\n        const errorText = await archivesResponse.text();\n        throw new Error(`Error fetching archives: ${archivesResponse.statusText} - ${errorText}`);\n      }\n      const archivesData = await archivesResponse.json();\n      const archives = archivesData.archives.reverse(); // Reverse to start from the most recent\n\n      const results = [];\n      for (let archiveUrl of archives) {\n        if (results.length >= maxGames) break;\n        const games = await fetchGamesBatch(archiveUrl);\n        results.push(...games);\n        if (results.length >= maxGames) {\n          results.length = maxGames; // Trim to the maxGames limit\n          break;\n        }\n      }\n      return results;\n    } catch (error) {\n      console.error('Error fetching games from Chess.com:', error.message);\n      throw error;\n    }\n  };\n  const handleStart = async () => {\n    setProcessing(true);\n    setCancelProcess(false); // Reset cancel flag before starting\n\n    let games = [];\n    const {\n      maxGames,\n      timeControls\n    } = filterParams || {\n      maxGames: 1000,\n      timeControls: {\n        bullet: true,\n        blitz: true,\n        rapid: true,\n        classical: true\n      }\n    };\n    if (inputMethod === 'lichess') {\n      const data = await fetchLichessGames(opponentName, maxGames, timeControls);\n      let rawGames = data.split(/\\[Event/gi).filter(Boolean);\n      games = rawGames.map(game => '[Event' + game.trim());\n    } else if (inputMethod === 'chesscom') {\n      const data = await fetchChessComGames(opponentName, maxGames, timeControls);\n      games = data.map(game => game.pgn);\n    } else {\n      games = importedGames;\n    }\n    setGamesCount(games.length);\n\n    // Start processing games in batches of 50\n    for (let i = 0; i < games.length; i += 50) {\n      if (cancelProcess) {\n        clearInterval(timerId); // Stop the timer\n        setProcessing(false);\n      }\n      if (cancelProcess) {\n        console.log(\"Process canceled by user.\");\n        break;\n      }\n      const batch = games.slice(i, i + 50); // Process the next batch of 50 games\n      await processGames(batch); // Your existing processGames function\n    }\n    setProcessing(false); // End processing\n  };\n  const toggleDropdown = dropdown => {\n    setActiveDropdown(activeDropdown === dropdown ? null : dropdown);\n  };\n  const createPgnFromGameIDs = (gameIDs, pgnList) => {\n    return gameIDs.map(id => pgnList[id]).join('\\n\\n');\n  };\n  const handleLineClick = gameIDs => {\n    const combinedPgn = createPgnFromGameIDs(gameIDs, thePgnList);\n\n    // Store the combined PGN in localStorage\n    localStorage.setItem('combinedPgn', combinedPgn);\n\n    // Clear imported games\n    localStorage.removeItem('importedGames');\n\n    // Redirect to analysis board\n    window.location.href = '/analysis-board';\n  };\n  const handleFilterClick = () => {\n    setShowAdvancedFilter(true);\n  };\n  const handleSaveFilter = params => {\n    setFilterParams(params);\n    setShowAdvancedFilter(false);\n    // Apply the filters directly to the games list or during game fetching\n  };\n  const formatMovesWithNumbers = line => {\n    const moves = line.Line.split(\"*\").filter(Boolean);\n    const opening = detectOpening(moves);\n    const formattedMoves = moves.map((move, index) => {\n      const moveNumber = Math.floor(index / 2) + 1;\n      return index % 2 === 0 ? `${moveNumber}. ${move}` : `${moveNumber}...${move}`;\n    }).join(\" \");\n    return `${opening}: ${formattedMoves}`;\n  };\n  const categorizeLines = finalLongDF => {\n    return finalLongDF.map(row => {\n      const avgPointsColumn = \"AvgPoints\";\n      const avgPoints = row[avgPointsColumn];\n      if (avgPoints <= 0) {\n        row.MistakeType = \"Fatal Bafflement\";\n      } else if (avgPoints <= 0.2) {\n        row.MistakeType = \"Major Incompetence\";\n      } else if (avgPoints <= 0.4) {\n        row.MistakeType = \"Slight Inconsistency\";\n      } else {\n        row.MistakeType = \"None\";\n      }\n      return row;\n    }).filter(row => row.MistakeType !== \"None\");\n  };\n  const processGames = games => {\n    const eventList = [];\n    const siteList = [];\n    const whiteList = [];\n    const blackList = [];\n    const resultList = [];\n    const dateList = [];\n    const whiteEloList = [];\n    const blackEloList = [];\n    const fullValList = [];\n    const initialColnames = [];\n    const movesList = [];\n    const pgnList = [];\n    const chess = new Chess();\n    games.forEach((game, index) => {\n      try {\n        chess.loadPgn(game);\n        chess.deleteComments();\n        let moves = chess.history();\n        movesList.push(moves);\n        const valList = [];\n        let triangle = String(moves[0]) + \"*\";\n        valList.push(triangle);\n        pgnList.push(chess.pgn());\n        eventList.push(chess.header()[\"Event\"]);\n        siteList.push(chess.header()[\"Site\"]);\n        whiteList.push(chess.header()[\"White\"]);\n        blackList.push(chess.header()[\"Black\"]);\n        resultList.push(chess.header()[\"Result\"]);\n        dateList.push(chess.header()[\"Date\"]);\n        whiteEloList.push(chess.header()[\"WhiteElo\"]);\n        blackEloList.push(chess.header()[\"BlackElo\"]);\n        for (let i = 1; i < 25 && i < moves.length; i++) {\n          triangle += String(moves[i]) + \"*\";\n          valList.push(triangle);\n        }\n        fullValList.push(valList);\n      } catch (error) {\n        console.error(`Error processing game at index ${index}:`, error.message);\n        // Skip this game and continue with the next one\n      }\n    });\n    console.log(fullValList);\n    setThePgnList(pgnList); // Set the pgnList to the state variable thePgnList\n\n    for (let j = 1; j <= 25; j++) {\n      initialColnames.push(\"Line\" + String(j));\n    }\n    const dataFrame = fullValList.map((row, index) => ({\n      ...row.reduce((acc, val, i) => ({\n        ...acc,\n        [initialColnames[i]]: val\n      }), {}),\n      Event: eventList[index],\n      Site: siteList[index],\n      White: whiteList[index],\n      Black: blackList[index],\n      WhiteResult1: resultList[index] === '1-0' ? 1 : resultList[index] === '1/2-1/2' ? 0.5 : 0,\n      Date: dateList[index],\n      WhiteElo: whiteEloList[index],\n      BlackElo: blackEloList[index],\n      Pgn: pgnList[index],\n      GameID: index\n    }));\n    console.log(\"dataFrame\");\n    console.log(dataFrame);\n    const filteredDF = dataFrame.filter(row => row[opponentColor] === opponentName);\n    console.log(1);\n    console.log(filteredDF);\n    const moveProb1 = filteredDF.reduce((acc, row) => {\n      acc[row.Line1] = (acc[row.Line1] || 0) + 1;\n      return acc;\n    }, {});\n    const totalGames = filteredDF.length;\n    filteredDF.forEach(row => {\n      row.MoveProbability1 = moveProb1[row.Line1] / totalGames;\n    });\n    console.log(2);\n    console.log(filteredDF);\n    for (let i = 1; i < 25; i++) {\n      filteredDF.forEach(row => {\n        row[`WhiteResult${i + 1}`] = row.WhiteResult1;\n      });\n      const moveProb = filteredDF.reduce((acc, row) => {\n        const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n        acc[key] = (acc[key] || 0) + 1;\n        return acc;\n      }, {});\n      const lineCount = filteredDF.reduce((acc, row) => {\n        acc[row[`Line${i}`]] = (acc[row[`Line${i}`]] || 0) + 1;\n        return acc;\n      }, {});\n      filteredDF.forEach(row => {\n        const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n        row[`MoveProbability${i + 1}`] = moveProb[key] / lineCount[row[`Line${i}`]];\n      });\n    }\n    console.log(3);\n    console.log(filteredDF);\n    filteredDF.forEach(row => {\n      let pw = 1;\n      let pb = 1;\n      for (let i = 1; i <= 25; i++) {\n        if (i % 2 === 1) {\n          pw *= row[`MoveProbability${i}`] || 1;\n        } else {\n          pb *= row[`MoveProbability${i}`] || 1;\n        }\n        row[`LineProbability(W)${i}`] = pw;\n        row[`LineProbability(B)${i}`] = pb;\n      }\n    });\n    console.log(4);\n    console.log(\"filteredDF\");\n    console.log(filteredDF);\n    const longDF = [];\n    filteredDF.forEach(row => {\n      for (let i = 1; i <= 25; i++) {\n        longDF.push({\n          GameID: row.GameID,\n          Ply: i,\n          Line: row[`Line${i}`],\n          EVAL: row[`EVAL${i}`],\n          WhiteResult: row[`WhiteResult${i}`],\n          MoveProbability: row[`MoveProbability${i}`],\n          LineProbabilityW: row[`LineProbability(W)${i}`],\n          LineProbabilityB: row[`LineProbability(B)${i}`],\n          Pgn: row.Pgn\n        });\n      }\n    });\n    console.log(\"longDF\");\n    console.log(longDF);\n\n    // Add #Games column\n    const lineCounts = longDF.reduce((acc, row) => {\n      acc[row.Line] = (acc[row.Line] || 0) + 1;\n      return acc;\n    }, {});\n    longDF.forEach(row => {\n      row['#Games'] = lineCounts[row.Line];\n    });\n\n    // Calculate lower limit based on Min Flaw Frequency\n    let minGames = 1; // Default for At Least One Game\n    if (precisionLevel === '10% of Games') {\n      minGames = 4;\n    } else if (precisionLevel === '3% of Games') {\n      minGames = 2;\n    }\n    console.log(\"minGames\");\n    console.log(minGames);\n\n    // Filter for lines which meet minimum number of games\n    const minGameFilteredDF = longDF.filter(row => row[\"#Games\"] >= minGames);\n    // Filter for lines with probability greater than 0.2\n    const filteredLongDF = minGameFilteredDF.filter(row => opponentColor === 'Black' && row.LineProbabilityB > 0.2 || opponentColor === 'White' && row.LineProbabilityW > 0.2);\n    console.log(\"filteredLongDF\");\n    console.log(filteredLongDF);\n    const groupedByLine = filteredLongDF.reduce((acc, row) => {\n      if (!acc[row.Line]) {\n        acc[row.Line] = {\n          Line: row.Line,\n          TotalGames: 0,\n          TotalWhitePoints: 0,\n          TotalLosses: 0,\n          AverageWhitePoints: 0,\n          GameIDs: []\n        };\n      }\n      acc[row.Line].TotalGames += 1;\n      acc[row.Line].TotalWhitePoints += row.WhiteResult;\n      acc[row.Line].TotalLosses += 1 - row.WhiteResult;\n      acc[row.Line].AverageWhitePoints = acc[row.Line].TotalWhitePoints / acc[row.Line].TotalGames;\n      acc[row.Line].GameIDs.push(row.GameID);\n      return acc;\n    }, {});\n    Object.values(groupedByLine).forEach(row => {\n      row['AvgPoints'] = opponentColor === \"White\" ? row.AverageWhitePoints : 1 - row.AverageWhitePoints;\n    });\n    console.log(\"groupedByLine\");\n    console.log(groupedByLine);\n\n    // Convert groupedByLine to an array and sort by WinPercentage\n    const groupedLongDF = Object.values(groupedByLine);\n    const sortedLongDF = groupedLongDF.sort((a, b) => {\n      return a.AvgPoints - b.AvgPoints;\n    });\n    console.log(\"sortedLongDF\");\n    console.log(sortedLongDF);\n    const definedDF = sortedLongDF.filter(row => row.Line !== undefined);\n    console.log(\"definedDF\");\n    console.log(definedDF);\n    let fullLinesStr = \"//\";\n    let partialLinesStr = \"//\";\n    const nonSubsetLongDF = definedDF.filter(row => {\n      const subsets = [];\n      const lineMoves = row.Line.split(\"*\").filter(Boolean);\n\n      // SUBSET CHECK\n      // Check if value already in partialLinesStr\n      if (partialLinesStr.includes(\"//\" + row.Line + \"//\")) {\n        return false;\n      }\n\n      // SUPERSET CHECK\n      // Check if any subset is already in fullLinesStr\n\n      // Generate all possible subsets of the current line\n      for (let i = 1; i <= lineMoves.length; i++) {\n        const subset = lineMoves.slice(0, i).join(\"*\") + \"*\";\n        if (fullLinesStr.includes(\"//\" + subset + \"//\")) {\n          return false;\n        }\n        partialLinesStr += subset + \"//\";\n      }\n      ;\n      fullLinesStr += row.Line + \"//\";\n      return true;\n    });\n    console.log(\"nonSubsetLongDF\");\n    console.log(nonSubsetLongDF);\n    const categorizedLines = categorizeLines(nonSubsetLongDF);\n    setFilteredData(categorizedLines);\n    console.log(\"filteredData\");\n    console.log(filteredData);\n    const commonLines = findCommonLines(movesList);\n    setCommonLines(commonLines);\n    setProcessing(false); // Stop processing\n  };\n  const findCommonLines = movesList => {\n    const lineCounts = {};\n    movesList.forEach(moves => {\n      moves.forEach((move, index) => {\n        const line = moves.slice(0, index + 1).join(' ');\n        if (!lineCounts[line]) {\n          lineCounts[line] = 0;\n        }\n        lineCounts[line]++;\n      });\n    });\n    const sortedLines = Object.entries(lineCounts).sort((a, b) => b[1] - a[1]);\n    return sortedLines.slice(0, 5);\n  };\n  const handleCancelFilter = () => {\n    setShowAdvancedFilter(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weakness-finder\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onMouseEnter: () => setIsLogoHovered(true),\n            onMouseLeave: () => setIsLogoHovered(false),\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: isLogoHovered ? logoWhite : logo,\n                alt: \"Home\",\n                style: {\n                  height: '39px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 910,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/blunder-punisher\",\n              className: \"prepare-link\",\n              children: \"Blunder Punisher\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 913,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 913,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/weakness-finder\",\n              children: \"Weakness Finder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 914,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 914,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/analysis-board\",\n              children: \"Analysis Board\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 915,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/about-player\",\n              children: \"About Player\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 916,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 916,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 904,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"hero3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Weakness Finder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 21\n        }, this), !showAdvancedFilter ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCancelProcess(true),\n            className: \"spec-button\",\n            style: {\n              marginTop: 6.5,\n              marginLeft: 10\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFilterClick,\n            className: \"spec-button\",\n            children: \"Advanced Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 929,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tab-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tab\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: inputMethod === 'chesscom' ? 'tablinks active' : 'tablinks',\n                onClick: () => setInputMethod('chesscom'),\n                children: \"Chess.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 932,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: inputMethod === 'lichess' ? 'tablinks active' : 'tablinks',\n                onClick: () => setInputMethod('lichess'),\n                children: \"Lichess\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 933,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: inputMethod === 'pgn' ? 'tablinks active' : 'tablinks',\n                onClick: () => setInputMethod('pgn'),\n                children: \"PGN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 934,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 931,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tabcontent\",\n              style: {\n                display: inputMethod === 'pgn' ? 'block' : 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  onChange: handleFileSelect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 938,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"opponentName\",\n                  children: \"Opponent Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 939,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"opponentName\",\n                  value: opponentName,\n                  onChange: e => setOpponentName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 940,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 937,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 936,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tabcontent\",\n              style: {\n                display: inputMethod === 'lichess' ? 'block' : 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"opponentUsername\",\n                  children: \"Opponent Username:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 950,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"opponentUsername\",\n                  value: opponentName,\n                  onChange: e => setOpponentName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 951,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 949,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 948,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tabcontent\",\n              style: {\n                display: inputMethod === 'chesscom' ? 'block' : 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"opponentUsername\",\n                  children: \"Opponent Username:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 961,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"opponentUsername\",\n                  value: opponentName,\n                  onChange: e => setOpponentName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 962,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 960,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 959,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"opponentColor\",\n                children: \"Opponent Color:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 971,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"opponentColor\",\n                value: opponentColor,\n                onChange: e => setOpponentColor(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"White\",\n                  children: \"White\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 977,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Black\",\n                  children: \"Black\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 978,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 972,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"precisionLevel\",\n                children: \"Min Flaw Frequency:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 982,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"precisionLevel\",\n                value: precisionLevel,\n                onChange: e => setPrecisionLevel(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"10% of Games\",\n                  children: \"10% of Games (Instant)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 988,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"3% of Games\",\n                  children: \"3% of Games (Instant)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 989,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"At Least 1 Game\",\n                  children: \"At Least 1 Game (Instant)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 990,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 983,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 981,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleStart,\n              className: \"spec-button\",\n              style: {\n                marginTop: 6.5,\n                marginLeft: 10\n              },\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 993,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleReset,\n              className: \"spec-button\",\n              style: {\n                marginTop: 6.5,\n                marginLeft: 10\n              },\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 994,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 930,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Elapsed Time: \", Math.floor(elapsedTime / 60), \":\", elapsedTime % 60 < 10 ? '0' : '', elapsedTime % 60]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 996,\n            columnNumber: 29\n          }, this), processing && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please wait, do not refresh or close the tab...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 998,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Games: \", gamesCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 999,\n            columnNumber: 29\n          }, this), processing ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"common-lines\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Most Common Lines\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1002,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: commonLines.map(([line, count], index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [line, \" - \", count]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1005,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1003,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1001,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleDropdown('Fatal Bafflements'),\n                children: [\"Fatal Bafflements: (\", filteredData.filter(line => line.MistakeType === 'Fatal Bafflement').length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1012,\n                columnNumber: 41\n              }, this), activeDropdown === 'Fatal Bafflements' && /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: filteredData.filter(line => line.MistakeType === 'Fatal Bafflement').map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"line-item\",\n                  onClick: () => handleLineClick(line.GameIDs),\n                  children: formatMovesWithNumbers(line)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1018,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1016,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1011,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleDropdown('Major Incompetencies'),\n                children: [\"Major Incompetencies: (\", filteredData.filter(line => line.MistakeType === 'Major Incompetence').length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1026,\n                columnNumber: 41\n              }, this), activeDropdown === 'Major Incompetencies' && /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: filteredData.filter(line => line.MistakeType === 'Major Incompetence').map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"line-item\",\n                  onClick: () => handleLineClick(line.GameIDs),\n                  children: formatMovesWithNumbers(line)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1032,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1030,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1025,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleDropdown('Slight Inconsistencies'),\n                children: [\"Slight Inconsistencies: (\", filteredData.filter(line => line.MistakeType === 'Slight Inconsistency').length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1040,\n                columnNumber: 41\n              }, this), activeDropdown === 'Slight Inconsistencies' && /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: filteredData.filter(line => line.MistakeType === 'Slight Inconsistency').map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"line-item\",\n                  onClick: () => handleLineClick(line.GameIDs),\n                  children: formatMovesWithNumbers(line)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1046,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1044,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1039,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1010,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(AdvancedFilter, {\n          onSave: handleSaveFilter,\n          onCancel: handleCancelFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1057,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2024 SquareChess.ai All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1062,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 903,\n    columnNumber: 9\n  }, this);\n};\n_s(WeaknessFinder, \"VqAA3cNWjUempcJSbY7H1mYmQg4=\");\n_c = WeaknessFinder;\nexport default WeaknessFinder;\nvar _c;\n$RefreshReg$(_c, \"WeaknessFinder\");","map":{"version":3,"names":["React","useState","useEffect","Link","Chess","AdvancedFilter","logo","logoWhite","jsxDEV","_jsxDEV","STOCKFISH","window","defaultState","importedGames","gamesCount","commonLines","filteredData","thePgnList","previousOutput","opponentName","opponentColor","precisionLevel","processing","activeDropdown","inputMethod","isLogoHovered","WeaknessFinder","_s","showAdvancedFilter","setShowAdvancedFilter","filterParams","setFilterParams","setIsLogoHovered","setImportedGames","JSON","parse","localStorage","getItem","setGamesCount","Number","setCommonLines","setFilteredData","setThePgnList","setPreviousOutput","setOpponentName","setOpponentColor","setPrecisionLevel","setProcessing","setActiveDropdown","setInputMethod","elapsedTime","setElapsedTime","cancelProcess","setCancelProcess","timerId","setTimerId","intervalId","setInterval","prev","clearInterval","setItem","stringify","handleReset","removeItem","stockfish","Worker","postMessage","handleFileSelect","event","file","target","files","reader","FileReader","onload","e","fullPgn","result","rawGames","split","filter","Boolean","games","map","game","trim","length","readAsText","openings","detectOpening","moves","movesSequence","join","opening","startsWith","fetchLichessGames","username","maxGames","timeControls","timeClasses","bullet","push","blitz","rapid","classical","timeClassFilter","response","fetch","data","text","fetchChessComGames","fetchGamesBatch","archiveUrl","ok","errorText","Error","statusText","json","filteredGames","time_class","error","console","message","archivesResponse","archivesData","archives","reverse","results","handleStart","pgn","i","log","batch","slice","processGames","toggleDropdown","dropdown","createPgnFromGameIDs","gameIDs","pgnList","id","handleLineClick","combinedPgn","location","href","handleFilterClick","handleSaveFilter","params","formatMovesWithNumbers","line","Line","formattedMoves","move","index","moveNumber","Math","floor","categorizeLines","finalLongDF","row","avgPointsColumn","avgPoints","MistakeType","eventList","siteList","whiteList","blackList","resultList","dateList","whiteEloList","blackEloList","fullValList","initialColnames","movesList","chess","forEach","loadPgn","deleteComments","history","valList","triangle","String","header","j","dataFrame","reduce","acc","val","Event","Site","White","Black","WhiteResult1","Date","WhiteElo","BlackElo","Pgn","GameID","filteredDF","moveProb1","Line1","totalGames","MoveProbability1","moveProb","key","lineCount","pw","pb","longDF","Ply","EVAL","WhiteResult","MoveProbability","LineProbabilityW","LineProbabilityB","lineCounts","minGames","minGameFilteredDF","filteredLongDF","groupedByLine","TotalGames","TotalWhitePoints","TotalLosses","AverageWhitePoints","GameIDs","Object","values","groupedLongDF","sortedLongDF","sort","a","b","AvgPoints","definedDF","undefined","fullLinesStr","partialLinesStr","nonSubsetLongDF","subsets","lineMoves","includes","subset","categorizedLines","findCommonLines","sortedLines","entries","handleCancelFilter","className","children","onMouseEnter","onMouseLeave","to","src","alt","style","height","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginTop","marginLeft","display","type","onChange","htmlFor","value","count","onSave","onCancel","_c","$RefreshReg$"],"sources":["/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/WeaknessFinder.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Chess } from 'chess.js';\nimport AdvancedFilter from './AdvancedFilter'; // Import the new component\nimport './styles.css';\n\n// Import both logo images\nimport logo from './squarechessai_transparent_new.png'; // Adjust the path as needed\nimport logoWhite from './squarechessai_no_black_new.png'; // Adjust the path as needed\n\nconst STOCKFISH = window.STOCKFISH;\n\nconst defaultState = {\n    importedGames: [],\n    gamesCount: 0,\n    commonLines: [],\n    filteredData: [],\n    thePgnList: [],\n    previousOutput: \"\",\n    opponentName: '',\n    opponentColor: 'White',\n    precisionLevel: '10% of Games',\n    processing: false,\n    activeDropdown: null,\n    inputMethod: 'chesscom',\n    isLogoHovered: false\n};\n\nconst WeaknessFinder = () => {\n    const [showAdvancedFilter, setShowAdvancedFilter] = useState(false);\n    const [filterParams, setFilterParams] = useState(null);\n    const [isLogoHovered, setIsLogoHovered] = useState(defaultState.isLogoHovered);\n    const [importedGames, setImportedGames] = useState(() => JSON.parse(localStorage.getItem('weaknessFinder_importedGames')) || defaultState.importedGames);\n    const [gamesCount, setGamesCount] = useState(() => Number(localStorage.getItem('weaknessFinder_gamesCount')) || defaultState.gamesCount);\n    const [commonLines, setCommonLines] = useState(() => JSON.parse(localStorage.getItem('weaknessFinder_commonLines')) || defaultState.commonLines);\n    const [filteredData, setFilteredData] = useState(() => JSON.parse(localStorage.getItem('weaknessFinder_filteredData')) || defaultState.filteredData);\n    const [thePgnList, setThePgnList] = useState(() => JSON.parse(localStorage.getItem('weaknessFinder_thePgnList')) || defaultState.thePgnList);\n    const [previousOutput, setPreviousOutput] = useState(defaultState.previousOutput);\n    const [opponentName, setOpponentName] = useState(() => localStorage.getItem('weaknessFinder_opponentName') || defaultState.opponentName);\n    const [opponentColor, setOpponentColor] = useState(() => localStorage.getItem('weaknessFinder_opponentColor') || defaultState.opponentColor);\n    const [precisionLevel, setPrecisionLevel] = useState(() => localStorage.getItem('weaknessFinder_precisionLevel') || defaultState.precisionLevel);\n    const [processing, setProcessing] = useState(defaultState.processing);\n    const [activeDropdown, setActiveDropdown] = useState(defaultState.activeDropdown);\n    const [inputMethod, setInputMethod] = useState(() => localStorage.getItem('weaknessFinder_inputMethod') || defaultState.inputMethod);\n    const [elapsedTime, setElapsedTime] = useState(0);  // State to track elapsed time in seconds\nconst [cancelProcess, setCancelProcess] = useState(false); // To cancel the processing\nconst [timerId, setTimerId] = useState(null); // To keep track of the timer\n\nuseEffect(() => {\n    let intervalId = null;\n    if (processing) {\n        intervalId = setInterval(() => {\n            setElapsedTime(prev => prev + 1); // Increment elapsed time every second\n        }, 1000);\n        setTimerId(intervalId);\n    } else if (!processing && elapsedTime !== 0) {\n        clearInterval(timerId); // Clear the timer if the process stops\n    }\n\n    return () => clearInterval(intervalId); // Cleanup interval on component unmount\n}, [processing]);\n\n\n    useEffect(() => {\n        localStorage.setItem('weaknessFinder_importedGames', JSON.stringify(importedGames));\n    }, [importedGames]);\n\n    useEffect(() => {\n        localStorage.setItem('weaknessFinder_gamesCount', gamesCount);\n    }, [gamesCount]);\n\n    useEffect(() => {\n        localStorage.setItem('weaknessFinder_commonLines', JSON.stringify(commonLines));\n    }, [commonLines]);\n\n    useEffect(() => {\n        localStorage.setItem('weaknessFinder_filteredData', JSON.stringify(filteredData));\n    }, [filteredData]);\n\n    useEffect(() => {\n        localStorage.setItem('weaknessFinder_thePgnList', JSON.stringify(thePgnList));\n    }, [thePgnList]);\n\n    useEffect(() => {\n        localStorage.setItem('weaknessFinder_opponentName', opponentName);\n    }, [opponentName]);\n\n    useEffect(() => {\n        localStorage.setItem('weaknessFinder_opponentColor', opponentColor);\n    }, [opponentColor]);\n\n    useEffect(() => {\n        localStorage.setItem('weaknessFinder_precisionLevel', precisionLevel);\n    }, [precisionLevel]);\n\n    useEffect(() => {\n        localStorage.setItem('weaknessFinder_inputMethod', inputMethod);\n    }, [inputMethod]);\n\n    \n\n    const handleReset = () => {\n        // Reset state to default values\n        setImportedGames(defaultState.importedGames);\n        setGamesCount(defaultState.gamesCount);\n        setCommonLines(defaultState.commonLines);\n        setFilteredData(defaultState.filteredData);\n        setThePgnList(defaultState.thePgnList);\n        setPreviousOutput(defaultState.previousOutput);\n        setOpponentName(defaultState.opponentName);\n        setOpponentColor(defaultState.opponentColor);\n        setPrecisionLevel(defaultState.precisionLevel);\n        setProcessing(defaultState.processing);\n        setActiveDropdown(defaultState.activeDropdown);\n        setInputMethod(defaultState.inputMethod);\n\n        // Clear localStorage\n        localStorage.removeItem('weaknessFinder_importedGames');\n        localStorage.removeItem('weaknessFinder_gamesCount');\n        localStorage.removeItem('weaknessFinder_commonLines');\n        localStorage.removeItem('weaknessFinder_filteredData');\n        localStorage.removeItem('weaknessFinder_thePgnList');\n        localStorage.removeItem('weaknessFinder_opponentName');\n        localStorage.removeItem('weaknessFinder_opponentColor');\n        localStorage.removeItem('weaknessFinder_precisionLevel');\n        localStorage.removeItem('weaknessFinder_inputMethod');\n        localStorage.removeItem('weaknessFinder_combinedPgn');\n    };\n\n    let stockfish = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(\"stockfish.js\");\n    stockfish.postMessage(\"uci\");\n    \n\n    \n\n    const handleFileSelect = (event) => {\n        const file = event.target.files[0];\n        if (!file) return;\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const fullPgn = e.target.result;\n            let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n            let games = rawGames.map(game => '[Event' + game.trim());\n\n            setImportedGames(games);\n            setGamesCount(games.length);\n        };\n        reader.readAsText(file);\n    };\n\n    const openings = {\n        // King's Pawn Openings\n        \"e4 e5\": \"Open Game\",\n        \"e4 e5 Nf3\": \"King's Knight Opening\",\n        \"e4 e5 Nf3 Nc6\": \"King's Knight Opening: Normal Variation\",\n        \"e4 e5 Nf3 Nc6 Bb5\": \"Ruy Lopez\",\n        \"e4 e5 Nf3 Nc6 Bc4\": \"Italian Game\",\n        \"e4 e5 Nf3 Nc6 Bc4 Bc5\": \"Italian Game: Giuoco Piano\",\n        \"e4 e5 Nf3 Nc6 Bc4 Nf6\": \"Two Knights Defense\",\n        \"e4 e5 Nf3 Nc6 d4\": \"Scotch Game\",\n        \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4\": \"Scotch Game: Scotch Gambit\",\n        \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4 Bc5\": \"Scotch Game: GÃ¶ring Gambit\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6\": \"Ruy Lopez: Morphy Defense\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4\": \"Ruy Lopez: Morphy Defense\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6\": \"Ruy Lopez: Morphy Defense, Closed\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O\": \"Ruy Lopez: Morphy Defense, Closed\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7\": \"Ruy Lopez: Closed, Morphy Defense\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1 b5 Bb3 d6 c3\": \"Ruy Lopez: Closed, Chigorin Defense\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1 b5 Bb3 d6 c3 O-O\": \"Ruy Lopez: Closed, Chigorin Defense, 12.d4\",\n        \"e4 e5 Nf3 d6\": \"Philidor Defense\",\n        \"e4 e5 f4\": \"King's Gambit\",\n        \"e4 e5 f4 exf4\": \"King's Gambit Accepted\",\n        \"e4 e5 f4 exf4 Nf3\": \"King's Gambit Accepted, King's Knight's Gambit\",\n        \"e4 e5 f4 exf4 Bc4\": \"King's Gambit Accepted, Bishop's Gambit\",\n        \"e4 e5 f4 d6\": \"King's Gambit Declined\",\n        \"e4 e5 Nf3 d6\": \"Philidor Defense\",\n        \"e4 e5 Nc3\": \"Vienna Game\",\n        \"e4 e5 Nc3 Nf6\": \"Vienna Game: Falkbeer Variation\",\n        \"e4 e5 Nc3 Nf6 g3\": \"Vienna Game: Mieses Variation\",\n        \"e4 e5 Nf3 Nc6 d3\": \"King's Indian Attack\",\n        \"e4 e5 d4\": \"Center Game\",\n        \"e4 e5 d4 exd4 Qxd4\": \"Center Game: Danish Gambit\",\n        \n        // Sicilian Defense\n        \"e4 c5\": \"Sicilian Defense\",\n        \"e4 c5 Nf3\": \"Sicilian Defense: Open\",\n        \"e4 c5 Nf3 d6\": \"Sicilian Defense: Najdorf Variation\",\n        \"e4 c5 Nf3 d6 d4\": \"Sicilian Defense: Open, Najdorf\",\n        \"e4 c5 Nf3 d6 d4 cxd4 Nxd4\": \"Sicilian Defense: Najdorf Variation, 6.Bg5\",\n        \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3\": \"Sicilian Defense: Classical\",\n        \"e4 c5 Nf3 e6\": \"Sicilian Defense: Taimanov\",\n        \"e4 c5 Nf3 e6 d4 cxd4 Nxd4 Nc6\": \"Sicilian Defense: Taimanov, Bastrikov\",\n        \"e4 c5 Nf3 e6 d4 cxd4 Nxd4 a6\": \"Sicilian Defense: Kan Variation\",\n        \"e4 c5 Nf3 Nc6\": \"Sicilian Defense: Closed\",\n        \"e4 c5 Nf3 Nc6 d4\": \"Sicilian Defense: Open\",\n        \"e4 c5 Nf3 Nc6 d4 cxd4 Nxd4\": \"Sicilian Defense: Accelerated Dragon\",\n        \"e4 c5 Nf3 Nc6 d4 cxd4 Nxd4 g6\": \"Sicilian Defense: Accelerated Dragon, Maroczy Bind\",\n        \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3 a6\": \"Sicilian Defense: Najdorf, English Attack\",\n        \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3 a6 Bg5\": \"Sicilian Defense: Najdorf, Main Line\",\n        \n        // French Defense\n        \"e4 e6\": \"French Defense\",\n        \"e4 e6 d4\": \"French Defense: Advance Variation\",\n        \"e4 e6 d4 d5\": \"French Defense: Advance\",\n        \"e4 e6 d4 d5 e5\": \"French Defense: Advance Variation\",\n        \"e4 e6 d4 d5 Nd2\": \"French Defense: Tarrasch\",\n        \"e4 e6 d4 d5 Nc3\": \"French Defense: Classical\",\n        \"e4 e6 d4 d5 Nc3 Nf6\": \"French Defense: Winawer Variation\",\n        \"e4 e6 d4 d5 Nc3 Bb4\": \"French Defense: Winawer\",\n        \"e4 e6 d4 d5 exd5 exd5 Bd3\": \"French Defense: Exchange Variation\",\n        \"e4 e6 d4 d5 exd5 exd5 Nc3\": \"French Defense: Exchange, Bogolyubov Variation\",\n        \"e4 e6 d4 d5 e5 c5\": \"French Defense: Advance Variation\",\n        \"e4 e6 d4 d5 Nf3\": \"French Defense: Two Knights\",\n        \n        // Caro-Kann Defense\n        \"e4 c6\": \"Caro-Kann Defense\",\n        \"e4 c6 d4 d5\": \"Caro-Kann Defense: Classical\",\n        \"e4 c6 d4 d5 Nc3\": \"Caro-Kann Defense: Advance\",\n        \"e4 c6 d4 d5 Nd2\": \"Caro-Kann Defense: Tarrasch\",\n        \"e4 c6 d4 d5 exd5\": \"Caro-Kann Defense: Exchange\",\n        \"e4 c6 d4 d5 e5\": \"Caro-Kann Defense: Advance Variation\",\n        \"e4 c6 d4 d5 exd5 cxd5 c4\": \"Caro-Kann Defense: Panov-Botvinnik Attack\",\n        \"e4 c6 d4 d5 Nc3 dxe4 Nxe4\": \"Caro-Kann Defense: Classical Variation\",\n        \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Bf5\": \"Caro-Kann Defense: Tartakower Variation\",\n        \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nd7\": \"Caro-Kann Defense: Karpov Variation\",\n        \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nd7 Nf3 Ngf6\": \"Caro-Kann Defense: Smyslov Variation\",\n        \n        // Queen's Gambit\n        \"d4 d5 c4\": \"Queen's Gambit\",\n        \"d4 d5 c4 c6\": \"Slav Defense\",\n        \"d4 d5 c4 e6\": \"Queen's Gambit Declined\",\n        \"d4 d5 c4 dxc4\": \"Queen's Gambit Accepted\",\n        \"d4 d5 c4 e6 Nc3 Nf6\": \"Queen's Gambit Declined\",\n        \"d4 d5 c4 e6 Nc3 Nf6 Bg5\": \"Queen's Gambit Declined: Orthodox Defense\",\n        \"d4 d5 c4 e6 Nc3 Nf6 Bg5 Be7\": \"Queen's Gambit Declined: Orthodox Defense, Main Line\",\n        \"d4 d5 c4 e6 Nc3 Nf6 Bg5 h6\": \"Queen's Gambit Declined: Orthodox Defense, Lasker Defense\",\n        \"d4 d5 c4 e6 Nf3\": \"Queen's Gambit Declined: 5.Nf3 Variation\",\n        \"d4 d5 c4 e6 Nf3 Nf6\": \"Queen's Gambit Declined: 5.Nf3 Variation, Main Line\",\n        \"d4 d5 c4 e6 Nf3 c5\": \"Tarrasch Defense\",\n        \"d4 d5 c4 e6 Nc3 c5\": \"Tarrasch Defense, Closed Variation\",\n        \"d4 d5 c4 e6 Nc3 c5 cxd5 exd5\": \"Tarrasch Defense, Classical Variation\",\n        \"d4 d5 c4 e6 Nc3 c5 cxd5 exd5 Nf3 Nc6\": \"Tarrasch Defense, Main Line\",\n        \"d4 d5 c4 e6 Nc3 Nf6 Nf3\": \"Queen's Gambit Declined: 6.Nf3\",\n        \"d4 d5 c4 e6 Nc3 Nf6 Nf3 Be7\": \"Queen's Gambit Declined: 7.Be7\",\n        \"d4 d5 c4 e6 Nc3 Nf6 Nf3 Be7 Bf4\": \"Queen's Gambit Declined: Harrwitz Attack\",\n        \n        // King's Indian Defense\n        \"d4 Nf6\": \"Indian Game\",\n        \"d4 Nf6 c4 g6\": \"King's Indian Defense\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7\": \"King's Indian Defense: Fianchetto\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6\": \"King's Indian Defense: Classical\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O\": \"King's Indian Defense: Mar del Plata\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 f3\": \"King's Indian Defense: Saemisch Variation\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2\": \"King's Indian Defense: Orthodox Variation\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2 O-O\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2 O-O Nf3\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O\": \"King's Indian Defense: Orthodox Variation, Classical System, 7.O-O\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O Nc6\": \"King's Indian Defense: Orthodox Variation, Classical System, 7...Nc6\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O Nbd7\": \"King's Indian Defense: Orthodox Variation, Classical System, 7...Nbd7\",\n        \n        // Nimzo-Indian Defense\n        \"d4 Nf6 c4 e6\": \"Indian Game\",\n        \"d4 Nf6 c4 e6 Nc3\": \"Nimzo-Indian Defense\",\n        \"d4 Nf6 c4 e6 Nc3 Bb4\": \"Nimzo-Indian Defense: Classical\",\n        \"d4 Nf6 c4 e6 Nc3 Bb4 Qc2\": \"Nimzo-Indian Defense: Classical, Capablanca Variation\",\n        \"d4 Nf6 c4 e6 Nc3 Bb4 e3\": \"Nimzo-Indian Defense: Rubinstein\",\n        \"d4 Nf6 c4 e6 Nc3 Bb4 e3 O-O\": \"Nimzo-Indian Defense: Rubinstein, 4...O-O\",\n        \"d4 Nf6 c4 e6 Nc3 Bb4 Qb3\": \"Nimzo-Indian Defense: SÃ¤misch Variation\",\n        \"d4 Nf6 c4 e6 Nc3 Bb4 a3\": \"Nimzo-Indian Defense: SÃ¤misch, Leningrad System\",\n        \n        // Ruy Lopez Variations\n        \"e4 e5 Nf3 Nc6 Bb5 a6\": \"Ruy Lopez: Morphy Defense\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4\": \"Ruy Lopez: Morphy Defense\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6\": \"Ruy Lopez: Closed\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O\": \"Ruy Lopez: Closed\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7\": \"Ruy Lopez: Closed, Morphy Defense\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1\": \"Ruy Lopez: Closed, Morphy Defense\",\n        \n        // English Opening\n        \"c4\": \"English Opening\",\n        \"c4 e5\": \"English Opening: Reversed Sicilian\",\n        \"c4 e5 Nc3 Nc6\": \"English Opening: Four Knights\",\n        \"c4 e5 Nc3 Nf6\": \"English Opening: Two Knights\",\n        \"c4 e5 g3\": \"English Opening: Botvinnik System\",\n        \n        // Other Common Openings\n        \"Nf3\": \"Reti Opening\",\n        \"b3\": \"Nimzowitsch-Larsen Attack\",\n        \"d4 f5\": \"Dutch Defense\",\n        \"f4\": \"Bird's Opening\",\n        \"g3\": \"King's Fianchetto Opening\",\n        // King's Pawn Openings\n    \"e4 e5\": \"Open Game\",\n    \"e4 c5\": \"Sicilian Defense\",\n    \"e4 e6\": \"French Defense\",\n    \"e4 c6\": \"Caro-Kann Defense\",\n    \"e4 d6\": \"Pirc Defense\",\n    \"e4 d5\": \"Scandinavian Defense\",\n    \"e4 Nf6\": \"Alekhine's Defense\",\n    \"e4 g6\": \"Modern Defense\",\n    \"e4 b6\": \"Owen's Defense\",\n    \"e4 Nc6\": \"Nimzowitsch Defense\",\n    \"e4 b5\": \"Polish Defense\",\n    \"e4 e5 Nf3\": \"King's Knight Opening\",\n    \"e4 e5 Nc3\": \"Vienna Game\",\n    \"e4 e5 f4\": \"King's Gambit\",\n    \"e4 e5 d4\": \"Center Game\",\n    \"e4 e5 Nf3 Nc6\": \"King's Knight Opening: Normal Variation\",\n    \"e4 e5 Nf3 Nc6 Bb5\": \"Ruy Lopez\",\n    \"e4 e5 Nf3 Nc6 Bc4\": \"Italian Game\",\n    \"e4 e5 Nf3 Nc6 Bc4 Bc5\": \"Italian Game: Giuoco Piano\",\n    \"e4 e5 Nf3 Nc6 Bc4 Nf6\": \"Two Knights Defense\",\n    \"e4 e5 Nf3 Nc6 d4\": \"Scotch Game\",\n    \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4\": \"Scotch Game: Scotch Gambit\",\n    \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4 Bc5\": \"Scotch Game: GÃ¶ring Gambit\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6\": \"Ruy Lopez: Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4\": \"Ruy Lopez: Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6\": \"Ruy Lopez: Morphy Defense, Closed\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O\": \"Ruy Lopez: Morphy Defense, Closed\",\n    \"e4 e5 Nf3 d6\": \"Philidor Defense\",\n    \"e4 e5 f4\": \"King's Gambit\",\n    \"e4 e5 f4 exf4\": \"King's Gambit Accepted\",\n    \"e4 e5 f4 d6\": \"King's Gambit Declined\",\n    \"e4 e5 Nc3\": \"Vienna Game\",\n    \"e4 e5 Nc3 Nf6\": \"Vienna Game: Falkbeer Variation\",\n    \"e4 e5 Nc3 Nf6 g3\": \"Vienna Game: Mieses Variation\",\n    \"e4 e5 d3\": \"King's Indian Attack\",\n    \"e4 e5 d4\": \"Center Game\",\n    \"e4 e5 d4 exd4 Qxd4\": \"Center Game: Danish Gambit\",\n    \n    // Sicilian Defense\n    \"e4 c5\": \"Sicilian Defense\",\n    \"e4 c5 Nf3\": \"Sicilian Defense: Open\",\n    \"e4 c5 c3\": \"Sicilian Defense: Alapin Variation\",\n    \"e4 c5 d4\": \"Sicilian Defense: Smith-Morra Gambit\",\n    \"e4 c5 Nc3\": \"Sicilian Defense: Closed\",\n    \"e4 c5 f4\": \"Sicilian Defense: Grand Prix Attack\",\n    \"e4 c5 b3\": \"Sicilian Defense: Nimzowitsch-Rossolimo Attack\",\n    \"e4 c5 g3\": \"Sicilian Defense: Fianchetto Variation\",\n    \"e4 c5 d3\": \"Sicilian Defense: King's Indian Attack\",\n    \n    // French Defense\n    \"e4 e6\": \"French Defense\",\n    \"e4 e6 d4\": \"French Defense: Advance Variation\",\n    \"e4 e6 d3\": \"French Defense: King's Indian Attack\",\n    \"e4 e6 c4\": \"French Defense: Franco-Hiva Gambit\",\n    \"e4 e6 Nf3\": \"French Defense: Two Knights\",\n    \"e4 e6 d4 d5\": \"French Defense: Main Line\",\n    \"e4 e6 d4 d5 e5\": \"French Defense: Advance Variation\",\n    \"e4 e6 d4 d5 Nd2\": \"French Defense: Tarrasch\",\n    \"e4 e6 d4 d5 Nc3\": \"French Defense: Classical\",\n    \"e4 e6 d4 d5 Nf3\": \"French Defense: Two Knights\",\n    \"e4 e6 d4 d5 exd5 exd5 Bd3\": \"French Defense: Exchange Variation\",\n    \n    // Caro-Kann Defense\n    \"e4 c6\": \"Caro-Kann Defense\",\n    \"e4 c6 d4\": \"Caro-Kann Defense: Main Line\",\n    \"e4 c6 c4\": \"Caro-Kann Defense: Panov-Botvinnik Attack\",\n    \"e4 c6 Nf3\": \"Caro-Kann Defense: Two Knights\",\n    \"e4 c6 d3\": \"Caro-Kann Defense: King's Indian Attack\",\n    \"e4 c6 g3\": \"Caro-Kann Defense: Fianchetto Variation\",\n    \n    // Pirc Defense and Modern Defense\n    \"e4 d6\": \"Pirc Defense\",\n    \"e4 g6\": \"Modern Defense\",\n    \"e4 d6 d4\": \"Pirc Defense\",\n    \"e4 g6 d4\": \"Modern Defense\",\n    \"e4 d6 d4 Nf6\": \"Pirc Defense: Classical\",\n    \"e4 g6 d4 Bg7\": \"Modern Defense: Robatsch Defense\",\n    \n    // Scandinavian Defense\n    \"e4 d5\": \"Scandinavian Defense\",\n    \"e4 d5 exd5\": \"Scandinavian Defense: Main Line\",\n    \"e4 d5 Nf3\": \"Scandinavian Defense: Gambit\",\n    \n    // Alekhine's Defense\n    \"e4 Nf6\": \"Alekhine's Defense\",\n    \"e4 Nf6 e5\": \"Alekhine's Defense: Chase Variation\",\n    \"e4 Nf6 d3\": \"Alekhine's Defense: King's Indian Attack\",\n    \n    // Nimzowitsch Defense\n    \"e4 Nc6\": \"Nimzowitsch Defense\",\n    \"e4 Nc6 d4\": \"Nimzowitsch Defense: Main Line\",\n    \n    // Dutch Defense\n    \"d4 f5\": \"Dutch Defense\",\n    \"d4 d6\": \"Old Indian Defense\",\n    \"d4 d5\": \"Queen's Gambit Declined\",\n    \"d4 Nf6\": \"Indian Game\",\n    \"d4 d5 c4\": \"Queen's Gambit\",\n    \"d4 d5 Nf3\": \"London System\",\n    \"d4 Nf6 Nf3\": \"King's Indian Attack\",\n    \"d4 f5\": \"Dutch Defense\",\n    \"d4 g6\": \"Modern Defense\",\n    \"d4 Nc6\": \"Chigorin Defense\",\n    \"d4 d6\": \"Old Indian Defense\",\n    \"d4 e6\": \"Horwitz Defense\",\n    \"d4 c5\": \"Benoni Defense\",\n    \"d4 Nf6 c4\": \"Indian Game\",\n    \"d4 f5 c4\": \"Dutch Defense\",\n    \n    // English Opening\n    \"c4\": \"English Opening\",\n    \"c4 c5\": \"English Opening: Symmetrical Variation\",\n    \"c4 e5\": \"English Opening: Reversed Sicilian\",\n    \"c4 Nf6\": \"English Opening: Anglo-Indian\",\n    \"c4 g6\": \"English Opening: Botvinnik System\",\n    \n    // Reti and Other Openings\n    \"Nf3\": \"Reti Opening\",\n    \"Nf3 d5\": \"Reti Opening: Main Line\",\n    \"Nf3 c5\": \"Reti Opening: Anglo-Slav\",\n    \"Nf3 c5 c4\": \"Reti Opening: King's Indian Attack\",\n    \"b3\": \"Nimzowitsch-Larsen Attack\",\n    \"g3\": \"King's Fianchetto Opening\",\n    \"f4\": \"Bird's Opening\",\n    \"f4 d5\": \"Bird's Opening: Dutch Variation\",\n    \"f4 e5\": \"From's Gambit\",\n    \"b4\": \"Polish Opening\",\n    \"b4 e5\": \"Polish Opening: Outflank Variation\",\n    \"a3\": \"Anderssen's Opening\",\n    \"h3\": \"Clemenz Opening\",\n    \"h4\": \"Desprez Opening\",\n    \"d3\": \"Mieses Opening\",\n    \"c3\": \"Saragossa Opening\",\n    \"Nc3\": \"Van Geet Opening\",\n    };\n\n    \n\n    const detectOpening = (moves) => {\n        const movesSequence = moves.join(\" \");\n        for (const opening in openings) {\n            if (movesSequence.startsWith(opening)) {\n                return openings[opening];\n            }\n        }\n        return \"Unknown Opening\"; // Fallback if the opening is not in the book\n    };\n\n    const fetchLichessGames = async (username, maxGames = 1000, timeControls) => {\n        const timeClasses = [];\n        if (timeControls.bullet) timeClasses.push('bullet');\n        if (timeControls.blitz) timeClasses.push('blitz');\n        if (timeControls.rapid) timeClasses.push('rapid');\n        if (timeControls.classical) timeClasses.push('classical');\n        \n        const timeClassFilter = timeClasses.length > 0 ? `&perfType=${timeClasses.join(',')}` : '';\n        const response = await fetch(`https://lichess.org/api/games/user/${username}?max=${maxGames}&moves=true&pgnInJson=false${timeClassFilter}`);\n        const data = await response.text(); // Get the response as text (PGN format)\n        return data;\n    };\n\n    const fetchChessComGames = async (username, maxGames = 1000, timeControls) => {\n        const fetchGamesBatch = async (archiveUrl) => {\n            try {\n                const response = await fetch(archiveUrl);\n                if (!response.ok) {\n                    const errorText = await response.text();\n                    throw new Error(`Error fetching data: ${response.statusText} - ${errorText}`);\n                }\n    \n                const data = await response.json();\n                // Filter by time controls if specified\n                const filteredGames = data.games.filter(game => {\n                    if (timeControls.bullet && game.time_class === 'bullet') return true;\n                    if (timeControls.blitz && game.time_class === 'blitz') return true;\n                    if (timeControls.rapid && game.time_class === 'rapid') return true;\n                    if (timeControls.classical && game.time_class === 'classical') return true;\n                    return false;\n                });\n    \n                return filteredGames;\n            } catch (error) {\n                console.error('Error fetching games batch:', error.message);\n                return []; // Return an empty array if there's an error\n            }\n        };\n    \n        try {\n            const archivesResponse = await fetch(`https://api.chess.com/pub/player/${username}/games/archives`);\n            if (!archivesResponse.ok) {\n                const errorText = await archivesResponse.text();\n                throw new Error(`Error fetching archives: ${archivesResponse.statusText} - ${errorText}`);\n            }\n            const archivesData = await archivesResponse.json();\n            const archives = archivesData.archives.reverse(); // Reverse to start from the most recent\n    \n            const results = [];\n            for (let archiveUrl of archives) {\n                if (results.length >= maxGames) break;\n    \n                const games = await fetchGamesBatch(archiveUrl);\n                results.push(...games);\n    \n                if (results.length >= maxGames) {\n                    results.length = maxGames; // Trim to the maxGames limit\n                    break;\n                }\n            }\n    \n            return results;\n        } catch (error) {\n            console.error('Error fetching games from Chess.com:', error.message);\n            throw error;\n        }\n    };\n    \n    \n    \n\n    const handleStart = async () => {\n        setProcessing(true);\n        setCancelProcess(false); // Reset cancel flag before starting\n    \n        let games = [];\n        const { maxGames, timeControls } = filterParams || { maxGames: 1000, timeControls: { bullet: true, blitz: true, rapid: true, classical: true } };\n    \n        if (inputMethod === 'lichess') {\n            const data = await fetchLichessGames(opponentName, maxGames, timeControls);\n            let rawGames = data.split(/\\[Event/gi).filter(Boolean);\n            games = rawGames.map(game => '[Event' + game.trim());\n        } else if (inputMethod === 'chesscom') {\n            const data = await fetchChessComGames(opponentName, maxGames, timeControls);\n            games = data.map(game => game.pgn);\n        } else {\n            games = importedGames;\n        }\n    \n        setGamesCount(games.length);\n    \n        // Start processing games in batches of 50\n        for (let i = 0; i < games.length; i += 50) {\n            if (cancelProcess) {\n                clearInterval(timerId);  // Stop the timer\n                setProcessing(false);\n            }\n            \n            if (cancelProcess) {\n                console.log(\"Process canceled by user.\");\n                break;\n            }\n\n            const batch = games.slice(i, i + 50);  // Process the next batch of 50 games\n            await processGames(batch);  // Your existing processGames function\n        }\n    \n        setProcessing(false); // End processing\n    };\n    \n\n    const toggleDropdown = (dropdown) => {\n        setActiveDropdown(activeDropdown === dropdown ? null : dropdown);\n    };\n\n    const createPgnFromGameIDs = (gameIDs, pgnList) => {\n        return gameIDs.map(id => pgnList[id]).join('\\n\\n');\n    };\n    \n    const handleLineClick = (gameIDs) => {\n        const combinedPgn = createPgnFromGameIDs(gameIDs, thePgnList);\n    \n        // Store the combined PGN in localStorage\n        localStorage.setItem('combinedPgn', combinedPgn);\n    \n        // Clear imported games\n        localStorage.removeItem('importedGames');\n    \n        // Redirect to analysis board\n        window.location.href = '/analysis-board';\n    };\n    \n    const handleFilterClick = () => {\n        setShowAdvancedFilter(true);\n    };\n    const handleSaveFilter = (params) => {\n        setFilterParams(params);\n        setShowAdvancedFilter(false);\n        // Apply the filters directly to the games list or during game fetching\n    };\n    \n    const formatMovesWithNumbers = (line) => {\n        const moves = line.Line.split(\"*\").filter(Boolean);\n        const opening = detectOpening(moves);\n        const formattedMoves = moves.map((move, index) => {\n            const moveNumber = Math.floor(index / 2) + 1;\n            return index % 2 === 0 ? `${moveNumber}. ${move}` : `${moveNumber}...${move}`;\n        }).join(\" \");\n    \n        return `${opening}: ${formattedMoves}`;\n    };\n\n    const categorizeLines = (finalLongDF) => {\n        return finalLongDF.map(row => {\n            const avgPointsColumn = \"AvgPoints\";\n            const avgPoints = row[avgPointsColumn];\n    \n                if (avgPoints <= 0) {\n                    row.MistakeType = \"Fatal Bafflement\";\n                } else if (avgPoints <= 0.2) {\n                    row.MistakeType = \"Major Incompetence\";\n                } else if (avgPoints <= 0.4) {\n                    row.MistakeType = \"Slight Inconsistency\";\n                } else {\n                    row.MistakeType = \"None\";\n                }\n            \n            return row;\n        }).filter(row => row.MistakeType !== \"None\");\n    };\n\n    const processGames = (games) => {\n        const eventList = [];\n        const siteList = [];\n        const whiteList = [];\n        const blackList = [];\n        const resultList = [];\n        const dateList = [];\n        const whiteEloList = [];\n        const blackEloList = [];\n        const fullValList = [];\n        const initialColnames = [];\n        const movesList = [];\n        const pgnList = [];\n        const chess = new Chess();\n    \n        games.forEach((game, index) => {\n            try {\n                chess.loadPgn(game);\n                chess.deleteComments();\n                let moves = chess.history();\n                movesList.push(moves);\n    \n                const valList = [];\n                let triangle = String(moves[0]) + \"*\";\n                valList.push(triangle);\n    \n                pgnList.push(chess.pgn());\n                eventList.push(chess.header()[\"Event\"]);\n                siteList.push(chess.header()[\"Site\"]);\n                whiteList.push(chess.header()[\"White\"]);\n                blackList.push(chess.header()[\"Black\"]);\n                resultList.push(chess.header()[\"Result\"]);\n                dateList.push(chess.header()[\"Date\"]);\n                whiteEloList.push(chess.header()[\"WhiteElo\"]);\n                blackEloList.push(chess.header()[\"BlackElo\"]);\n    \n                for (let i = 1; i < 25 && i < moves.length; i++) {\n                    triangle += String(moves[i]) + \"*\";\n                    valList.push(triangle);\n                }\n                fullValList.push(valList);\n            } catch (error) {\n                console.error(`Error processing game at index ${index}:`, error.message);\n                // Skip this game and continue with the next one\n            }\n        });\n        console.log(fullValList);\n\n        setThePgnList(pgnList); // Set the pgnList to the state variable thePgnList\n\n        for (let j = 1; j <= 25; j++) {\n            initialColnames.push(\"Line\" + String(j));\n        }\n\n        const dataFrame = fullValList.map((row, index) => ({\n            ...row.reduce((acc, val, i) => ({ ...acc, [initialColnames[i]]: val }), {}),\n            Event: eventList[index],\n            Site: siteList[index],\n            White: whiteList[index],\n            Black: blackList[index],\n            WhiteResult1: resultList[index] === '1-0' ? 1 : (resultList[index] === '1/2-1/2' ? 0.5 : 0),\n            Date: dateList[index],\n            WhiteElo: whiteEloList[index],\n            BlackElo: blackEloList[index],\n            Pgn: pgnList[index],\n            GameID: index\n        }));\n        console.log(\"dataFrame\");\n        console.log(dataFrame);\n\n        const filteredDF = dataFrame.filter(row => row[opponentColor] === opponentName);\n        console.log(1);\n        console.log(filteredDF);\n\n        const moveProb1 = filteredDF.reduce((acc, row) => {\n            acc[row.Line1] = (acc[row.Line1] || 0) + 1;\n            return acc;\n        }, {});\n        const totalGames = filteredDF.length;\n\n        filteredDF.forEach(row => {\n            row.MoveProbability1 = moveProb1[row.Line1] / totalGames;\n        });\n        console.log(2);\n        console.log(filteredDF);\n\n        for (let i = 1; i < 25; i++) {\n            filteredDF.forEach(row => {\n                row[`WhiteResult${i + 1}`] = row.WhiteResult1;\n            });\n\n            const moveProb = filteredDF.reduce((acc, row) => {\n                const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n                acc[key] = (acc[key] || 0) + 1;\n                return acc;\n            }, {});\n\n            const lineCount = filteredDF.reduce((acc, row) => {\n                acc[row[`Line${i}`]] = (acc[row[`Line${i}`]] || 0) + 1;\n                return acc;\n            }, {});\n\n            filteredDF.forEach(row => {\n                const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n                row[`MoveProbability${i + 1}`] = moveProb[key] / lineCount[row[`Line${i}`]];\n            });\n        }\n        console.log(3);\n        console.log(filteredDF);\n\n        filteredDF.forEach(row => {\n            let pw = 1;\n            let pb = 1;\n            for (let i = 1; i <= 25; i++) {\n                if (i % 2 === 1) {\n                    pw *= row[`MoveProbability${i}`] || 1;\n                } else {\n                    pb *= row[`MoveProbability${i}`] || 1;\n                }\n                row[`LineProbability(W)${i}`] = pw;\n                row[`LineProbability(B)${i}`] = pb;\n            }\n        });\n        console.log(4);\n        console.log(\"filteredDF\");\n        console.log(filteredDF);\n\n        const longDF = [];\n        filteredDF.forEach(row => {\n            for (let i = 1; i <= 25; i++) {\n                longDF.push({\n                    GameID: row.GameID,\n                    Ply: i,\n                    Line: row[`Line${i}`],\n                    EVAL: row[`EVAL${i}`],\n                    WhiteResult: row[`WhiteResult${i}`],\n                    MoveProbability: row[`MoveProbability${i}`],\n                    LineProbabilityW: row[`LineProbability(W)${i}`],\n                    LineProbabilityB: row[`LineProbability(B)${i}`],\n                    Pgn: row.Pgn\n                });\n            }\n        });\n        console.log(\"longDF\");\n        console.log(longDF);\n\n        // Add #Games column\n        const lineCounts = longDF.reduce((acc, row) => {\n            acc[row.Line] = (acc[row.Line] || 0) + 1;\n            return acc;\n        }, {});\n\n        longDF.forEach(row => {\n            row['#Games'] = lineCounts[row.Line];\n        });\n\n        // Calculate lower limit based on Min Flaw Frequency\n        let minGames = 1; // Default for At Least One Game\n        if (precisionLevel === '10% of Games') {\n            minGames = 4;\n        } else if (precisionLevel === '3% of Games') {\n            minGames = 2;\n        }\n\n        console.log(\"minGames\");\n        console.log(minGames);\n\n         // Filter for lines which meet minimum number of games\n         const minGameFilteredDF = longDF.filter(row => \n            (row[\"#Games\"] >= minGames)\n        );\n        // Filter for lines with probability greater than 0.2\n        const filteredLongDF = minGameFilteredDF.filter(row => \n            (opponentColor === 'Black' && row.LineProbabilityB > 0.2) ||\n            (opponentColor === 'White' && row.LineProbabilityW > 0.2)\n        );\n        console.log(\"filteredLongDF\");\n        console.log(filteredLongDF);\n\n        const groupedByLine = filteredLongDF.reduce((acc, row) => {\n            if (!acc[row.Line]) {\n                acc[row.Line] = {\n                    Line: row.Line,\n                    TotalGames: 0,\n                    TotalWhitePoints: 0,\n                    TotalLosses: 0,\n                    AverageWhitePoints: 0,\n                    GameIDs: []\n                };\n            }\n            acc[row.Line].TotalGames += 1;\n            acc[row.Line].TotalWhitePoints += row.WhiteResult;\n            acc[row.Line].TotalLosses += (1 - row.WhiteResult);\n            acc[row.Line].AverageWhitePoints = acc[row.Line].TotalWhitePoints / acc[row.Line].TotalGames;\n            acc[row.Line].GameIDs.push(row.GameID);\n            return acc;\n        }, {});\n\n        \n\n      \n\n        Object.values(groupedByLine).forEach(row => {\n            row['AvgPoints'] = opponentColor === \"White\" ? row.AverageWhitePoints : 1 - row.AverageWhitePoints;\n        });\n\n        console.log(\"groupedByLine\");\n        console.log(groupedByLine);\n        \n\n\n        // Convert groupedByLine to an array and sort by WinPercentage\n        const groupedLongDF = Object.values(groupedByLine);\n        const sortedLongDF = groupedLongDF.sort((a, b) => {\n        return a.AvgPoints - b.AvgPoints;\n    });\n        \n\n        console.log(\"sortedLongDF\");\n        console.log(sortedLongDF);\n        \n\n    const definedDF = sortedLongDF.filter(row => row.Line !== undefined);\n    console.log(\"definedDF\");\n        console.log(definedDF);\n \n        let fullLinesStr = \"//\";\n        let partialLinesStr = \"//\";\n    const nonSubsetLongDF = definedDF.filter(row => {\n        const subsets = [];\n        const lineMoves = row.Line.split(\"*\").filter(Boolean);\n        \n// SUBSET CHECK\n        // Check if value already in partialLinesStr\n        if (partialLinesStr.includes(\"//\" + row.Line +\"//\")) {\n                return false;\n            }\n        \n\n\n        // SUPERSET CHECK\n        // Check if any subset is already in fullLinesStr\n\n        // Generate all possible subsets of the current line\n        for (let i = 1; i <= lineMoves.length; i++) {\n            const subset = lineMoves.slice(0, i).join(\"*\") + \"*\"; \n            if (fullLinesStr.includes(\"//\" + subset+ \"//\")) {\n                return false;\n            }\n            partialLinesStr += subset + \"//\";\n    };\n        fullLinesStr += row.Line+ \"//\";\n        return true;\n    });\n\n    console.log(\"nonSubsetLongDF\");\n    console.log(nonSubsetLongDF);\n        const categorizedLines = categorizeLines(nonSubsetLongDF);\n        setFilteredData(categorizedLines);\n        console.log(\"filteredData\");\n    console.log(filteredData);\n\n        const commonLines = findCommonLines(movesList);\n        setCommonLines(commonLines);\n\n        setProcessing(false); // Stop processing\n    };\n\n    const findCommonLines = (movesList) => {\n        const lineCounts = {};\n\n        movesList.forEach(moves => {\n            moves.forEach((move, index) => {\n                const line = moves.slice(0, index + 1).join(' ');\n                if (!lineCounts[line]) {\n                    lineCounts[line] = 0;\n                }\n                lineCounts[line]++;\n            });\n        });\n\n        const sortedLines = Object.entries(lineCounts).sort((a, b) => b[1] - a[1]);\n        return sortedLines.slice(0, 5);\n    };\n    const handleCancelFilter = () => {\n        setShowAdvancedFilter(false);\n    };\n\n    return (\n        <div className=\"weakness-finder\">\n            <header>\n                <nav>\n                    <ul>\n                        <li onMouseEnter={() => setIsLogoHovered(true)}\n                            onMouseLeave={() => setIsLogoHovered(false)}>\n                            <Link to=\"/\">\n                                <img src={isLogoHovered ? logoWhite : logo} alt=\"Home\" style={{ height: '39px' }} />\n                            </Link>\n                        </li>\n                        <li><Link to=\"/blunder-punisher\" className=\"prepare-link\">Blunder Punisher</Link></li>\n                        <li><Link to=\"/weakness-finder\">Weakness Finder</Link></li>\n                        <li><Link to=\"/analysis-board\">Analysis Board</Link></li>\n                        <li><Link to=\"/about-player\">About Player</Link></li>\n                    </ul>\n                </nav>\n            </header>\n            <main>\n                <section className=\"hero3\">\n                    <h1>Weakness Finder</h1>\n                    {!showAdvancedFilter ? (\n                        <div className=\"filter-container\">\n                            <button onClick={() => setCancelProcess(true)} className=\"spec-button\" style={{ marginTop: 6.5, marginLeft: 10 }}>\n    Cancel\n</button>\n\n                            <button onClick={handleFilterClick} className=\"spec-button\">Advanced Filter</button>\n                            <div className=\"tab-container\">\n                                <div className=\"tab\">\n                                    <button className={inputMethod === 'chesscom' ? 'tablinks active' : 'tablinks'} onClick={() => setInputMethod('chesscom')}>Chess.com</button>\n                                    <button className={inputMethod === 'lichess' ? 'tablinks active' : 'tablinks'} onClick={() => setInputMethod('lichess')}>Lichess</button>\n                                    <button className={inputMethod === 'pgn' ? 'tablinks active' : 'tablinks'} onClick={() => setInputMethod('pgn')}>PGN</button>\n                                </div>\n                                <div className=\"tabcontent\" style={{ display: inputMethod === 'pgn' ? 'block' : 'none' }}>\n                                    <div className=\"form-group\">\n                                        <input type=\"file\" onChange={handleFileSelect} />\n                                        <label htmlFor=\"opponentName\">Opponent Name:</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"opponentName\"\n                                            value={opponentName}\n                                            onChange={(e) => setOpponentName(e.target.value)}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"tabcontent\" style={{ display: inputMethod === 'lichess' ? 'block' : 'none' }}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"opponentUsername\">Opponent Username:</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"opponentUsername\"\n                                            value={opponentName}\n                                            onChange={(e) => setOpponentName(e.target.value)}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"tabcontent\" style={{ display: inputMethod === 'chesscom' ? 'block' : 'none' }}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"opponentUsername\">Opponent Username:</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"opponentUsername\"\n                                            value={opponentName}\n                                            onChange={(e) => setOpponentName(e.target.value)}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"opponentColor\">Opponent Color:</label>\n                                    <select\n                                        id=\"opponentColor\"\n                                        value={opponentColor}\n                                        onChange={(e) => setOpponentColor(e.target.value)}\n                                    >\n                                        <option value=\"White\">White</option>\n                                        <option value=\"Black\">Black</option>\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"precisionLevel\">Min Flaw Frequency:</label>\n                                    <select\n                                        id=\"precisionLevel\"\n                                        value={precisionLevel}\n                                        onChange={(e) => setPrecisionLevel(e.target.value)}\n                                    >\n                                        <option value=\"10% of Games\">10% of Games (Instant)</option>\n                                        <option value=\"3% of Games\">3% of Games (Instant)</option>\n                                        <option value=\"At Least 1 Game\">At Least 1 Game (Instant)</option>\n                                    </select>\n                                </div>\n                                <button onClick={handleStart} className=\"spec-button\" style={{ marginTop: 6.5, marginLeft: 10 }}>Start</button>\n                                <button onClick={handleReset} className=\"spec-button\" style={{ marginTop: 6.5, marginLeft: 10 }}>Reset</button>\n                            </div>\n                            <p>Elapsed Time: {Math.floor(elapsedTime / 60)}:{elapsedTime % 60 < 10 ? '0' : ''}{elapsedTime % 60}</p>\n\n                            {processing && <p>Please wait, do not refresh or close the tab...</p>}\n                            <p>Total Games: {gamesCount}</p>\n                            {processing ? (\n                                <div className=\"common-lines\">\n                                    <h2>Most Common Lines</h2>\n                                    <ul>\n                                        {commonLines.map(([line, count], index) => (\n                                            <li key={index}>{line} - {count}</li>\n                                        ))}\n                                    </ul>\n                                </div>\n                            ) : (\n                                <div className=\"dropdown-container\">\n                                    <div className=\"dropdown\">\n                                        <button onClick={() => toggleDropdown('Fatal Bafflements')}>\n                                            Fatal Bafflements: ({filteredData.filter(line => line.MistakeType === 'Fatal Bafflement').length})\n                                        </button>\n                                        {activeDropdown === 'Fatal Bafflements' && (\n                                            <ul>\n                                                {filteredData.filter(line => line.MistakeType === 'Fatal Bafflement').map((line, index) => (\n                                                    <li key={index} className='line-item' onClick={() => handleLineClick(line.GameIDs)}>\n                                                        {formatMovesWithNumbers(line)}\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        )}\n                                    </div>\n                                    <div className=\"dropdown\">\n                                        <button onClick={() => toggleDropdown('Major Incompetencies')}>\n                                            Major Incompetencies: ({filteredData.filter(line => line.MistakeType === 'Major Incompetence').length})\n                                        </button>\n                                        {activeDropdown === 'Major Incompetencies' && (\n                                            <ul>\n                                                {filteredData.filter(line => line.MistakeType === 'Major Incompetence').map((line, index) => (\n                                                    <li key={index} className='line-item' onClick={() => handleLineClick(line.GameIDs)}>\n                                                        {formatMovesWithNumbers(line)}\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        )}\n                                    </div>\n                                    <div className=\"dropdown\">\n                                        <button onClick={() => toggleDropdown('Slight Inconsistencies')}>\n                                            Slight Inconsistencies: ({filteredData.filter(line => line.MistakeType === 'Slight Inconsistency').length})\n                                        </button>\n                                        {activeDropdown === 'Slight Inconsistencies' && (\n                                            <ul>\n                                                {filteredData.filter(line => line.MistakeType === 'Slight Inconsistency').map((line, index) => (\n                                                    <li key={index} className='line-item' onClick={() => handleLineClick(line.GameIDs)}>\n                                                        {formatMovesWithNumbers(line)}\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        )}\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    ) : (\n                        <AdvancedFilter onSave={handleSaveFilter} onCancel={handleCancelFilter} />\n                    )}\n                </section>\n            </main>\n            <footer>\n                <p>&copy; 2024 SquareChess.ai All rights reserved.</p>\n            </footer>\n        </div>\n    );\n};\n\nexport default WeaknessFinder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}