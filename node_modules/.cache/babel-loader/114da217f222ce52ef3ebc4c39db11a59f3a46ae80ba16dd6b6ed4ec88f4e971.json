{"ast":null,"code":"var _jsxFileName = \"/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/BlunderPunisher.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Chess } from 'chess.js';\nimport AdvancedFilter from './AdvancedFilter'; // Import the new component\n\nimport './styles.css';\n\n// Import both logo images\nimport logo from './checkmatewizard_transparent.png'; // Adjust the path as needed\nimport logoWhite from './checkmatewizard_no_black.png'; // Adjust the path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STOCKFISH = window.STOCKFISH;\nconst defaultState = {\n  importedGames: [],\n  gamesCount: 0,\n  commonLines: [],\n  filteredData: [],\n  thePgnList: [],\n  previousOutput: \"\",\n  opponentName: '',\n  opponentColor: 'White',\n  precisionLevel: '3% of Games',\n  processing: false,\n  activeDropdown: null,\n  inputMethod: 'chesscom',\n  isLogoHovered: false\n};\nconst BlunderPunisher = () => {\n  _s();\n  const [showAdvancedFilter, setShowAdvancedFilter] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [filterParams, setFilterParams] = useState(null);\n  const [finalLongDF, setFinalLongDF] = useState([]);\n  const [evaluation, setEvaluation] = useState(\"\");\n  const [bestLine, setBestLine] = useState(\"\");\n  const [filter, setFilter] = useState('blunderPunisher_all'); // Default filter is 'All Games'\n  const [totalGames, setTotalGames] = useState(0);\n  const [gameCounts, setGameCounts] = useState({});\n  const [oldestGame, setOldestGame] = useState('');\n  const [newestGame, setNewestGame] = useState('');\n  const [winLossRecord, setWinLossRecord] = useState('');\n  const [highestRatedWin, setHighestRatedWin] = useState('');\n  const [lowestRatedLoss, setLowestRatedLoss] = useState('');\n  const [gameLengthData, setGameLengthData] = useState([]);\n  const [isLogoHovered, setIsLogoHovered] = useState(defaultState.isLogoHovered);\n  const [importedGames, setImportedGames] = useState(() => JSON.parse(localStorage.getItem('blunderPunisher_importedGames')) || defaultState.importedGames);\n  const [gamesCount, setGamesCount] = useState(() => Number(localStorage.getItem('blunderPunisher_gamesCount')) || defaultState.gamesCount);\n  const [commonLines, setCommonLines] = useState(() => JSON.parse(localStorage.getItem('blunderPunisher_commonLines')) || defaultState.commonLines);\n  const [filteredData, setFilteredData] = useState(() => JSON.parse(localStorage.getItem('blunderPunisher_filteredData')) || defaultState.filteredData);\n  const [thePgnList, setThePgnList] = useState(() => JSON.parse(localStorage.getItem('blunderPunisher_thePgnList')) || defaultState.thePgnList);\n  const [previousOutput, setPreviousOutput] = useState(defaultState.previousOutput);\n  const [opponentName, setOpponentName] = useState(() => localStorage.getItem('blunderPunisher_opponentName') || defaultState.opponentName);\n  const [opponentColor, setOpponentColor] = useState(() => localStorage.getItem('blunderPunisher_opponentColor') || defaultState.opponentColor);\n  const [precisionLevel, setPrecisionLevel] = useState(() => localStorage.getItem('blunderPunisher_precisionLevel') || defaultState.precisionLevel);\n  const [processing, setProcessing] = useState(defaultState.processing);\n  const [activeDropdown, setActiveDropdown] = useState(defaultState.activeDropdown);\n  const [inputMethod, setInputMethod] = useState(() => localStorage.getItem('blunderPunisher_inputMethod') || defaultState.inputMethod);\n  useEffect(() => {\n    localStorage.setItem('blunderPunisher_importedGames', JSON.stringify(importedGames));\n  }, [importedGames]);\n  useEffect(() => {\n    localStorage.setItem('blunderPunisher_gamesCount', gamesCount);\n  }, [gamesCount]);\n  useEffect(() => {\n    localStorage.setItem('blunderPunisher_commonLines', JSON.stringify(commonLines));\n  }, [commonLines]);\n  useEffect(() => {\n    localStorage.setItem('blunderPunisher_filteredData', JSON.stringify(filteredData));\n  }, [filteredData]);\n  useEffect(() => {\n    localStorage.setItem('blunderPunisher_thePgnList', JSON.stringify(thePgnList));\n  }, [thePgnList]);\n  useEffect(() => {\n    localStorage.setItem('blunderPunisher_opponentName', opponentName);\n  }, [opponentName]);\n  useEffect(() => {\n    localStorage.setItem('blunderPunisher_opponentColor', opponentColor);\n  }, [opponentColor]);\n  useEffect(() => {\n    localStorage.setItem('blunderPunisher_precisionLevel', precisionLevel);\n  }, [precisionLevel]);\n  useEffect(() => {\n    localStorage.setItem('blunderPunisher_inputMethod', inputMethod);\n  }, [inputMethod]);\n  const handleReset = () => {\n    // Reset state to default values\n    setImportedGames(defaultState.importedGames);\n    setGamesCount(defaultState.gamesCount);\n    setCommonLines(defaultState.commonLines);\n    setFilteredData(defaultState.filteredData);\n    setThePgnList(defaultState.thePgnList);\n    setPreviousOutput(defaultState.previousOutput);\n    setOpponentName(defaultState.opponentName);\n    setOpponentColor(defaultState.opponentColor);\n    setPrecisionLevel(defaultState.precisionLevel);\n    setProcessing(defaultState.processing);\n    setActiveDropdown(defaultState.activeDropdown);\n    setInputMethod(defaultState.inputMethod);\n\n    // Clear localStorage\n    localStorage.removeItem('blunderPunisher_importedGames');\n    localStorage.removeItem('blunderPunisher_gamesCount');\n    localStorage.removeItem('blunderPunisher_commonLines');\n    localStorage.removeItem('blunderPunisher_filteredData');\n    localStorage.removeItem('blunderPunisher_thePgnList');\n    localStorage.removeItem('blunderPunisher_opponentName');\n    localStorage.removeItem('blunderPunisher_opponentColor');\n    localStorage.removeItem('blunderPunisher_precisionLevel');\n    localStorage.removeItem('blunderPunisher_inputMethod');\n    localStorage.removeItem('blunderPunisher_combinedPgn');\n  };\n  let stockfish = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(\"stockfish.js\");\n  stockfish.postMessage(\"uci\");\n  useEffect(() => {}, [thePgnList]);\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const fullPgn = e.target.result;\n      let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n      let games = rawGames.map(game => '[Event' + game.trim());\n      setImportedGames(games);\n      setGamesCount(games.length);\n    };\n    reader.readAsText(file);\n  };\n  const fetchLichessGames = async (username, maxGames = 1000, timeControls) => {\n    const timeClasses = [];\n    if (timeControls.bullet) timeClasses.push('bullet');\n    if (timeControls.blitz) timeClasses.push('blitz');\n    if (timeControls.rapid) timeClasses.push('rapid');\n    if (timeControls.classical) timeClasses.push('classical');\n    try {\n      const timeClassFilter = timeClasses.length > 0 ? `&perfType=${timeClasses.join(',')}` : '';\n      const response = await fetch(`https://lichess.org/api/games/user/${username}?max=${maxGames}&moves=true&pgnInJson=false${timeClassFilter}`);\n      const data = await response.text(); // Get the response as text (PGN format)\n      console.log(data);\n      return data;\n    } catch (error) {\n      setErrorMessage(`Error fetching Lichess games for \"${username}\"`);\n      return [];\n    }\n  };\n  const handleFilterClick = () => {\n    setShowAdvancedFilter(true);\n  };\n  const handleSaveFilter = params => {\n    setFilterParams(params);\n    setShowAdvancedFilter(false);\n    // Apply the filters directly to the games list or during game fetching\n  };\n  const handleCancelFilter = () => {\n    setShowAdvancedFilter(false);\n  };\n  const fetchChessComGames = async (username, maxGames = 1000, timeControls) => {\n    const fetchGamesBatch = async archiveUrl => {\n      try {\n        const response = await fetch(archiveUrl);\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Error fetching data: ${response.statusText} - ${errorText}`);\n        }\n        const data = await response.json();\n        // Filter by time controls if specified\n        console.log(data);\n        const filteredGames = data.games.filter(game => {\n          if (game.rules != \"chess\") return false;\n          if (timeControls.bullet && game.time_class === 'bullet') return true;\n          if (timeControls.blitz && game.time_class === 'blitz') return true;\n          if (timeControls.rapid && game.time_class === 'rapid') return true;\n          if (timeControls.classical && game.time_class === 'classical') return true;\n          return false;\n        });\n        return filteredGames;\n      } catch (error) {\n        console.error('Error fetching games batch:', error.message);\n        return []; // Return an empty array if there's an error\n      }\n    };\n    try {\n      const archivesResponse = await fetch(`https://api.chess.com/pub/player/${username}/games/archives`);\n      if (!archivesResponse.ok) {\n        const errorText = await archivesResponse.text();\n        throw new Error(`Error fetching archives: ${archivesResponse.statusText} - ${errorText}`);\n      }\n      const archivesData = await archivesResponse.json();\n      const archives = archivesData.archives.reverse(); // Reverse to start from the most recent\n\n      const results = [];\n      for (let archiveUrl of archives) {\n        if (results.length >= maxGames) break;\n        const games = await fetchGamesBatch(archiveUrl);\n        results.push(...games);\n        if (results.length >= maxGames) {\n          results.length = maxGames; // Trim to the maxGames limit\n          break;\n        }\n      }\n      return results;\n    } catch (error) {\n      console.error('Error fetching games from Chess.com:', error.message);\n      throw error;\n    }\n  };\n  const handleLoadGames = () => {\n    // Logic to load games based on the selected filter (all or last 1000 games)\n    // Update the state variables such as totalGames, gameCounts, oldestGame, newestGame, etc.\n    console.log(`Loading games with filter: ${filter}`);\n  };\n  const openings = {\n    // King's Pawn Openings\n    \"e4\": \"King's Pawn Opening\",\n    \"e4 e5\": \"Open Game\",\n    \"e4 e5 Nf3\": \"King's Knight Opening\",\n    \"e4 e5 Nf3 Nc6\": \"King's Knight Opening: Normal Variation\",\n    \"e4 e5 Nf3 Nc6 Bb5\": \"Ruy Lopez\",\n    \"e4 e5 Nf3 Nc6 Bc4\": \"Italian Game\",\n    \"e4 e5 Nf3 Nc6 Bc4 Bc5\": \"Italian Game: Giuoco Piano\",\n    \"e4 e5 Nf3 Nc6 Bc4 Nf6\": \"Two Knights Defense\",\n    \"e4 e5 Nf3 Nc6 d4\": \"Scotch Game\",\n    \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4\": \"Scotch Game: Scotch Gambit\",\n    \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4 Bc5\": \"Scotch Game: Göring Gambit\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6\": \"Ruy Lopez: Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4\": \"Ruy Lopez: Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6\": \"Ruy Lopez: Morphy Defense, Closed\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O\": \"Ruy Lopez: Morphy Defense, Closed\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7\": \"Ruy Lopez: Closed, Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1 b5 Bb3 d6 c3\": \"Ruy Lopez: Closed, Chigorin Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1 b5 Bb3 d6 c3 O-O\": \"Ruy Lopez: Closed, Chigorin Defense, 12.d4\",\n    \"e4 e5 Nf3 d6\": \"Philidor Defense\",\n    \"e4 e5 f4\": \"King's Gambit\",\n    \"e4 e5 f4 exf4\": \"King's Gambit Accepted\",\n    \"e4 e5 f4 exf4 Nf3\": \"King's Gambit Accepted, King's Knight's Gambit\",\n    \"e4 e5 f4 exf4 Bc4\": \"King's Gambit Accepted, Bishop's Gambit\",\n    \"e4 e5 f4 d6\": \"King's Gambit Declined\",\n    \"e4 e5 Nf3 d6\": \"Philidor Defense\",\n    \"e4 e5 Nc3\": \"Vienna Game\",\n    \"e4 e5 Nc3 Nf6\": \"Vienna Game: Falkbeer Variation\",\n    \"e4 e5 Nc3 Nf6 g3\": \"Vienna Game: Mieses Variation\",\n    \"e4 e5 Nf3 Nc6 d3\": \"King's Indian Attack\",\n    \"e4 e5 d4\": \"Center Game\",\n    \"e4 e5 d4 exd4 Qxd4\": \"Center Game: Danish Gambit\",\n    // Sicilian Defense\n    \"e4 c5\": \"Sicilian Defense\",\n    \"e4 c5 Nf3\": \"Sicilian Defense: Open\",\n    \"e4 c5 Nf3 d6\": \"Sicilian Defense: Najdorf Variation\",\n    \"e4 c5 Nf3 d6 d4\": \"Sicilian Defense: Open, Najdorf\",\n    \"e4 c5 Nf3 d6 d4 cxd4 Nxd4\": \"Sicilian Defense: Najdorf Variation, 6.Bg5\",\n    \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3\": \"Sicilian Defense: Classical\",\n    \"e4 c5 Nf3 e6\": \"Sicilian Defense: Taimanov\",\n    \"e4 c5 Nf3 e6 d4 cxd4 Nxd4 Nc6\": \"Sicilian Defense: Taimanov, Bastrikov\",\n    \"e4 c5 Nf3 e6 d4 cxd4 Nxd4 a6\": \"Sicilian Defense: Kan Variation\",\n    \"e4 c5 Nf3 Nc6\": \"Sicilian Defense: Closed\",\n    \"e4 c5 Nf3 Nc6 d4\": \"Sicilian Defense: Open\",\n    \"e4 c5 Nf3 Nc6 d4 cxd4 Nxd4\": \"Sicilian Defense: Accelerated Dragon\",\n    \"e4 c5 Nf3 Nc6 d4 cxd4 Nxd4 g6\": \"Sicilian Defense: Accelerated Dragon, Maroczy Bind\",\n    \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3 a6\": \"Sicilian Defense: Najdorf, English Attack\",\n    \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3 a6 Bg5\": \"Sicilian Defense: Najdorf, Main Line\",\n    // French Defense\n    \"e4 e6\": \"French Defense\",\n    \"e4 e6 d4\": \"French Defense: Advance Variation\",\n    \"e4 e6 d4 d5\": \"French Defense: Advance\",\n    \"e4 e6 d4 d5 e5\": \"French Defense: Advance Variation\",\n    \"e4 e6 d4 d5 Nd2\": \"French Defense: Tarrasch\",\n    \"e4 e6 d4 d5 Nc3\": \"French Defense: Classical\",\n    \"e4 e6 d4 d5 Nc3 Nf6\": \"French Defense: Winawer Variation\",\n    \"e4 e6 d4 d5 Nc3 Bb4\": \"French Defense: Winawer\",\n    \"e4 e6 d4 d5 exd5 exd5 Bd3\": \"French Defense: Exchange Variation\",\n    \"e4 e6 d4 d5 exd5 exd5 Nc3\": \"French Defense: Exchange, Bogolyubov Variation\",\n    \"e4 e6 d4 d5 e5 c5\": \"French Defense: Advance Variation\",\n    \"e4 e6 d4 d5 Nf3\": \"French Defense: Two Knights\",\n    // Caro-Kann Defense\n    \"e4 c6\": \"Caro-Kann Defense\",\n    \"e4 c6 d4 d5\": \"Caro-Kann Defense: Classical\",\n    \"e4 c6 d4 d5 Nc3\": \"Caro-Kann Defense: Advance\",\n    \"e4 c6 d4 d5 Nd2\": \"Caro-Kann Defense: Tarrasch\",\n    \"e4 c6 d4 d5 exd5\": \"Caro-Kann Defense: Exchange\",\n    \"e4 c6 d4 d5 e5\": \"Caro-Kann Defense: Advance Variation\",\n    \"e4 c6 d4 d5 exd5 cxd5 c4\": \"Caro-Kann Defense: Panov-Botvinnik Attack\",\n    \"e4 c6 d4 d5 Nc3 dxe4 Nxe4\": \"Caro-Kann Defense: Classical Variation\",\n    \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Bf5\": \"Caro-Kann Defense: Tartakower Variation\",\n    \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nd7\": \"Caro-Kann Defense: Karpov Variation\",\n    \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nd7 Nf3 Ngf6\": \"Caro-Kann Defense: Smyslov Variation\",\n    // Queen's Gambit\n    \"d4\": \"Queen's Pawn Opening\",\n    \"d4 d5 c4\": \"Queen's Gambit\",\n    \"d4 d5 c4 c6\": \"Slav Defense\",\n    \"d4 d5 c4 e6\": \"Queen's Gambit Declined\",\n    \"d4 d5 c4 dxc4\": \"Queen's Gambit Accepted\",\n    \"d4 d5 c4 e6 Nc3 Nf6\": \"Queen's Gambit Declined\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Bg5\": \"Queen's Gambit Declined: Orthodox Defense\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Bg5 Be7\": \"Queen's Gambit Declined: Orthodox Defense, Main Line\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Bg5 h6\": \"Queen's Gambit Declined: Orthodox Defense, Lasker Defense\",\n    \"d4 d5 c4 e6 Nf3\": \"Queen's Gambit Declined: 5.Nf3 Variation\",\n    \"d4 d5 c4 e6 Nf3 Nf6\": \"Queen's Gambit Declined: 5.Nf3 Variation, Main Line\",\n    \"d4 d5 c4 e6 Nf3 c5\": \"Tarrasch Defense\",\n    \"d4 d5 c4 e6 Nc3 c5\": \"Tarrasch Defense, Closed Variation\",\n    \"d4 d5 c4 e6 Nc3 c5 cxd5 exd5\": \"Tarrasch Defense, Classical Variation\",\n    \"d4 d5 c4 e6 Nc3 c5 cxd5 exd5 Nf3 Nc6\": \"Tarrasch Defense, Main Line\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Nf3\": \"Queen's Gambit Declined: 6.Nf3\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Nf3 Be7\": \"Queen's Gambit Declined: 7.Be7\",\n    \"d4 d5 c4 e6 Nc3 Nf6 Nf3 Be7 Bf4\": \"Queen's Gambit Declined: Harrwitz Attack\",\n    // King's Indian Defense\n    \"d4 Nf6\": \"Indian Game\",\n    \"d4 Nf6 c4 g6\": \"King's Indian Defense\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7\": \"King's Indian Defense: Fianchetto\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6\": \"King's Indian Defense: Classical\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O\": \"King's Indian Defense: Mar del Plata\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 f3\": \"King's Indian Defense: Saemisch Variation\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2\": \"King's Indian Defense: Orthodox Variation\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2 O-O\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2 O-O Nf3\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O\": \"King's Indian Defense: Orthodox Variation, Classical System, 7.O-O\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O Nc6\": \"King's Indian Defense: Orthodox Variation, Classical System, 7...Nc6\",\n    \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O Nbd7\": \"King's Indian Defense: Orthodox Variation, Classical System, 7...Nbd7\",\n    // Nimzo-Indian Defense\n    \"d4 Nf6 c4 e6\": \"Indian Game\",\n    \"d4 Nf6 c4 e6 Nc3\": \"Nimzo-Indian Defense\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4\": \"Nimzo-Indian Defense: Classical\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4 Qc2\": \"Nimzo-Indian Defense: Classical, Capablanca Variation\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4 e3\": \"Nimzo-Indian Defense: Rubinstein\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4 e3 O-O\": \"Nimzo-Indian Defense: Rubinstein, 4...O-O\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4 Qb3\": \"Nimzo-Indian Defense: Sämisch Variation\",\n    \"d4 Nf6 c4 e6 Nc3 Bb4 a3\": \"Nimzo-Indian Defense: Sämisch, Leningrad System\",\n    // Ruy Lopez Variations\n    \"e4 e5 Nf3 Nc6 Bb5 a6\": \"Ruy Lopez: Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4\": \"Ruy Lopez: Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6\": \"Ruy Lopez: Closed\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O\": \"Ruy Lopez: Closed\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7\": \"Ruy Lopez: Closed, Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1\": \"Ruy Lopez: Closed, Morphy Defense\",\n    // English Opening\n    \"c4\": \"English Opening\",\n    \"c4 e5\": \"English Opening: Reversed Sicilian\",\n    \"c4 e5 Nc3 Nc6\": \"English Opening: Four Knights\",\n    \"c4 e5 Nc3 Nf6\": \"English Opening: Two Knights\",\n    \"c4 e5 g3\": \"English Opening: Botvinnik System\",\n    // Other Common Openings\n    \"Nf3\": \"Reti Opening\",\n    \"b3\": \"Nimzowitsch-Larsen Attack\",\n    \"d4 f5\": \"Dutch Defense\",\n    \"f4\": \"Bird's Opening\",\n    \"g3\": \"King's Fianchetto Opening\",\n    // King's Pawn Openings\n    \"e4 e5\": \"Open Game\",\n    \"e4 c5\": \"Sicilian Defense\",\n    \"e4 e6\": \"French Defense\",\n    \"e4 c6\": \"Caro-Kann Defense\",\n    \"e4 d6\": \"Pirc Defense\",\n    \"e4 d5\": \"Scandinavian Defense\",\n    \"e4 Nf6\": \"Alekhine's Defense\",\n    \"e4 g6\": \"Modern Defense\",\n    \"e4 b6\": \"Owen's Defense\",\n    \"e4 Nc6\": \"Nimzowitsch Defense\",\n    \"e4 b5\": \"Polish Defense\",\n    \"e4 e5 Nf3\": \"King's Knight Opening\",\n    \"e4 e5 Nc3\": \"Vienna Game\",\n    \"e4 e5 f4\": \"King's Gambit\",\n    \"e4 e5 d4\": \"Center Game\",\n    \"e4 e5 Nf3 Nc6\": \"King's Knight Opening: Normal Variation\",\n    \"e4 e5 Nf3 Nc6 Bb5\": \"Ruy Lopez\",\n    \"e4 e5 Nf3 Nc6 Bc4\": \"Italian Game\",\n    \"e4 e5 Nf3 Nc6 Bc4 Bc5\": \"Italian Game: Giuoco Piano\",\n    \"e4 e5 Nf3 Nc6 Bc4 Nf6\": \"Two Knights Defense\",\n    \"e4 e5 Nf3 Nc6 d4\": \"Scotch Game\",\n    \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4\": \"Scotch Game: Scotch Gambit\",\n    \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4 Bc5\": \"Scotch Game: Göring Gambit\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6\": \"Ruy Lopez: Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4\": \"Ruy Lopez: Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6\": \"Ruy Lopez: Morphy Defense, Closed\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O\": \"Ruy Lopez: Morphy Defense, Closed\",\n    \"e4 e5 Nf3 d6\": \"Philidor Defense\",\n    \"e4 e5 f4\": \"King's Gambit\",\n    \"e4 e5 f4 exf4\": \"King's Gambit Accepted\",\n    \"e4 e5 f4 d6\": \"King's Gambit Declined\",\n    \"e4 e5 Nc3\": \"Vienna Game\",\n    \"e4 e5 Nc3 Nf6\": \"Vienna Game: Falkbeer Variation\",\n    \"e4 e5 Nc3 Nf6 g3\": \"Vienna Game: Mieses Variation\",\n    \"e4 e5 d3\": \"King's Indian Attack\",\n    \"e4 e5 d4\": \"Center Game\",\n    \"e4 e5 d4 exd4 Qxd4\": \"Center Game: Danish Gambit\",\n    // Sicilian Defense\n    \"e4 c5\": \"Sicilian Defense\",\n    \"e4 c5 Nf3\": \"Sicilian Defense: Open\",\n    \"e4 c5 c3\": \"Sicilian Defense: Alapin Variation\",\n    \"e4 c5 d4\": \"Sicilian Defense: Smith-Morra Gambit\",\n    \"e4 c5 Nc3\": \"Sicilian Defense: Closed\",\n    \"e4 c5 f4\": \"Sicilian Defense: Grand Prix Attack\",\n    \"e4 c5 b3\": \"Sicilian Defense: Nimzowitsch-Rossolimo Attack\",\n    \"e4 c5 g3\": \"Sicilian Defense: Fianchetto Variation\",\n    \"e4 c5 d3\": \"Sicilian Defense: King's Indian Attack\",\n    // French Defense\n    \"e4 e6\": \"French Defense\",\n    \"e4 e6 d4\": \"French Defense: Advance Variation\",\n    \"e4 e6 d3\": \"French Defense: King's Indian Attack\",\n    \"e4 e6 c4\": \"French Defense: Franco-Hiva Gambit\",\n    \"e4 e6 Nf3\": \"French Defense: Two Knights\",\n    \"e4 e6 d4 d5\": \"French Defense: Main Line\",\n    \"e4 e6 d4 d5 e5\": \"French Defense: Advance Variation\",\n    \"e4 e6 d4 d5 Nd2\": \"French Defense: Tarrasch\",\n    \"e4 e6 d4 d5 Nc3\": \"French Defense: Classical\",\n    \"e4 e6 d4 d5 Nf3\": \"French Defense: Two Knights\",\n    \"e4 e6 d4 d5 exd5 exd5 Bd3\": \"French Defense: Exchange Variation\",\n    // Caro-Kann Defense\n    \"e4 c6\": \"Caro-Kann Defense\",\n    \"e4 c6 d4\": \"Caro-Kann Defense: Main Line\",\n    \"e4 c6 c4\": \"Caro-Kann Defense: Panov-Botvinnik Attack\",\n    \"e4 c6 Nf3\": \"Caro-Kann Defense: Two Knights\",\n    \"e4 c6 d3\": \"Caro-Kann Defense: King's Indian Attack\",\n    \"e4 c6 g3\": \"Caro-Kann Defense: Fianchetto Variation\",\n    // Pirc Defense and Modern Defense\n    \"e4 d6\": \"Pirc Defense\",\n    \"e4 g6\": \"Modern Defense\",\n    \"e4 d6 d4\": \"Pirc Defense\",\n    \"e4 g6 d4\": \"Modern Defense\",\n    \"e4 d6 d4 Nf6\": \"Pirc Defense: Classical\",\n    \"e4 g6 d4 Bg7\": \"Modern Defense: Robatsch Defense\",\n    // Scandinavian Defense\n    \"e4 d5\": \"Scandinavian Defense\",\n    \"e4 d5 exd5\": \"Scandinavian Defense: Main Line\",\n    \"e4 d5 Nf3\": \"Scandinavian Defense: Gambit\",\n    // Alekhine's Defense\n    \"e4 Nf6\": \"Alekhine's Defense\",\n    \"e4 Nf6 e5\": \"Alekhine's Defense: Chase Variation\",\n    \"e4 Nf6 d3\": \"Alekhine's Defense: King's Indian Attack\",\n    // Nimzowitsch Defense\n    \"e4 Nc6\": \"Nimzowitsch Defense\",\n    \"e4 Nc6 d4\": \"Nimzowitsch Defense: Main Line\",\n    // Dutch Defense\n    \"d4 f5\": \"Dutch Defense\",\n    \"d4 d6\": \"Old Indian Defense\",\n    \"d4 d5\": \"Queen's Gambit Declined\",\n    \"d4 Nf6\": \"Indian Game\",\n    \"d4 d5 c4\": \"Queen's Gambit\",\n    \"d4 d5 Nf3\": \"London System\",\n    \"d4 Nf6 Nf3\": \"King's Indian Attack\",\n    \"d4 f5\": \"Dutch Defense\",\n    \"d4 g6\": \"Modern Defense\",\n    \"d4 Nc6\": \"Chigorin Defense\",\n    \"d4 d6\": \"Old Indian Defense\",\n    \"d4 e6\": \"Horwitz Defense\",\n    \"d4 c5\": \"Benoni Defense\",\n    \"d4 Nf6 c4\": \"Indian Game\",\n    \"d4 f5 c4\": \"Dutch Defense\",\n    // English Opening\n    \"c4\": \"English Opening\",\n    \"c4 c5\": \"English Opening: Symmetrical Variation\",\n    \"c4 e5\": \"English Opening: Reversed Sicilian\",\n    \"c4 Nf6\": \"English Opening: Anglo-Indian\",\n    \"c4 g6\": \"English Opening: Botvinnik System\",\n    // Reti and Other Openings\n    \"Nf3\": \"Reti Opening\",\n    \"Nf3 d5\": \"Reti Opening: Main Line\",\n    \"Nf3 c5\": \"Reti Opening: Anglo-Slav\",\n    \"Nf3 c5 c4\": \"Reti Opening: King's Indian Attack\",\n    \"e4 e5 Nf3 Nc6 Bc4 Nd4\": \"Blackburne Shilling Gambit\",\n    \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nf6 Ng5 h6 Nxf7\": \"Witty Alien Gambit\",\n    \"e4 e5 Nf3 Nf6 Nxe5 Nc6\": \"Stafford Gambit\",\n    \"b3\": \"Nimzowitsch-Larsen Attack\",\n    \"g3\": \"King's Fianchetto Opening\",\n    \"f4\": \"Bird's Opening\",\n    \"f4 d5\": \"Bird's Opening: Dutch Variation\",\n    \"f4 e5\": \"From's Gambit\",\n    \"b4\": \"Polish Opening\",\n    \"b4 e5\": \"Polish Opening: Outflank Variation\",\n    \"e3\": \"Van 't Kruijs Opening\",\n    \"a3\": \"Anderssen's Opening\",\n    \"h3\": \"Clemenz Opening\",\n    \"h4\": \"Desprez Opening\",\n    \"d3\": \"Mieses Opening\",\n    \"c3\": \"Saragossa Opening\",\n    \"Nc3\": \"Van Geet Opening\",\n    \"g4\": \"Grob's Attack\",\n    \"Na3\": \"Sodium Attack\",\n    \"Nh3\": \"Amar Opening\",\n    \"e3\": \"Van 't Kruijs Opening\",\n    \"f3\": \"Barnes Opening\",\n    \"a4\": \"Ware Opening\"\n  };\n  const detectOpening = moves => {\n    const movesSequence = moves.join(\" \");\n    for (const opening in openings) {\n      if (movesSequence.startsWith(opening)) {\n        return openings[opening];\n      }\n    }\n    return \"Unknown Opening\"; // Fallback if the opening is not in the book\n  };\n  const handleStart = async () => {\n    setProcessing(true);\n    let games = [];\n    const {\n      maxGames,\n      timeControls\n    } = filterParams || {\n      maxGames: 1000,\n      timeControls: {\n        bullet: true,\n        blitz: true,\n        rapid: true,\n        classical: true\n      }\n    };\n    if (inputMethod === 'lichess') {\n      const data = await fetchLichessGames(opponentName, maxGames, timeControls);\n      let rawGames = data.split(/\\[Event/gi).filter(Boolean);\n      games = rawGames.map(game => '[Event' + game.trim());\n    } else if (inputMethod === 'chesscom') {\n      const data = await fetchChessComGames(opponentName, maxGames, timeControls);\n      games = data.map(game => game.pgn);\n    } else {\n      games = importedGames;\n    }\n    setGamesCount(games.length);\n    processGames(games);\n  };\n  const processGames = games => {\n    console.log(4);\n    const eventList = [];\n    const siteList = [];\n    const whiteList = [];\n    const blackList = [];\n    const resultList = [];\n    const dateList = [];\n    const whiteEloList = [];\n    const blackEloList = [];\n    const fullValList = [];\n    const initialColnames = [];\n    const movesList = [];\n    const pgnList = [];\n    const chess = new Chess();\n    console.log(5);\n    const minProbability = filterParams ? filterParams.minProbability : 0.2; // Default to 0.2\n\n    games.forEach((game, index) => {\n      if (game) {\n        chess.loadPgn(game);\n        chess.deleteComments();\n        let moves = chess.history();\n        movesList.push(moves);\n        const valList = [];\n        let triangle = String(moves[0]) + \"*\";\n        valList.push(triangle);\n        pgnList.push(chess.pgn());\n        eventList.push(chess.header()[\"Event\"]);\n        siteList.push(chess.header()[\"Site\"]);\n        whiteList.push(chess.header()[\"White\"]);\n        blackList.push(chess.header()[\"Black\"]);\n        resultList.push(chess.header()[\"Result\"]);\n        dateList.push(chess.header()[\"Date\"]);\n        whiteEloList.push(chess.header()[\"WhiteElo\"]);\n        blackEloList.push(chess.header()[\"BlackElo\"]);\n        for (let i = 1; i < 25 && i < moves.length; i++) {\n          triangle += String(moves[i]) + \"*\";\n          valList.push(triangle);\n        }\n        fullValList.push(valList);\n      }\n      ;\n    });\n    setThePgnList(pgnList); // Set the pgnList to the state variable thePgnList\n\n    for (let j = 1; j <= 25; j++) {\n      initialColnames.push(\"Line\" + String(j));\n    }\n    console.log(6);\n    const dataFrame = fullValList.map((row, index) => ({\n      ...row.reduce((acc, val, i) => ({\n        ...acc,\n        [initialColnames[i]]: val\n      }), {}),\n      Event: eventList[index],\n      Site: siteList[index],\n      White: whiteList[index],\n      Black: blackList[index],\n      WhiteResult1: resultList[index] === '1-0' ? 1 : 0,\n      Date: dateList[index],\n      WhiteElo: whiteEloList[index],\n      BlackElo: blackEloList[index],\n      Pgn: pgnList[index],\n      GameID: index\n    }));\n    console.log(\"dataFrame\");\n    console.log(dataFrame);\n    console.log(7);\n    const filteredDF = dataFrame.filter(row => row[opponentColor] === opponentName);\n    const moveProb1 = filteredDF.reduce((acc, row) => {\n      acc[row.Line1] = (acc[row.Line1] || 0) + 1;\n      return acc;\n    }, {});\n    const totalGames = filteredDF.length;\n    filteredDF.forEach(row => {\n      row.MoveProbability1 = moveProb1[row.Line1] / totalGames;\n    });\n    for (let i = 1; i < 25; i++) {\n      filteredDF.forEach(row => {\n        row[`WhiteResult${i + 1}`] = row.WhiteResult1;\n      });\n      const moveProb = filteredDF.reduce((acc, row) => {\n        const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n        acc[key] = (acc[key] || 0) + 1;\n        return acc;\n      }, {});\n      const lineCount = filteredDF.reduce((acc, row) => {\n        acc[row[`Line${i}`]] = (acc[row[`Line${i}`]] || 0) + 1;\n        return acc;\n      }, {});\n      filteredDF.forEach(row => {\n        const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n        row[`MoveProbability${i + 1}`] = moveProb[key] / lineCount[row[`Line${i}`]];\n      });\n    }\n    console.log(\"filteredDF\");\n    console.log(filteredDF);\n    filteredDF.forEach(row => {\n      let pw = 1;\n      let pb = 1;\n      for (let i = 1; i <= 25; i++) {\n        if (i % 2 === 1) {\n          pw *= row[`MoveProbability${i}`] || 1;\n        } else {\n          pb *= row[`MoveProbability${i}`] || 1;\n        }\n        row[`LineProbability(W)${i}`] = pw;\n        row[`LineProbability(B)${i}`] = pb;\n      }\n    });\n    console.log(\"filteredDF\");\n    console.log(filteredDF);\n    console.log(6);\n    const longDF = [];\n    filteredDF.forEach(row => {\n      for (let i = 1; i <= 25; i++) {\n        longDF.push({\n          GameID: row.GameID,\n          Ply: i,\n          Line: row[`Line${i}`],\n          EVAL: row[`EVAL${i}`],\n          WhiteResult: row[`WhiteResult${i}`],\n          MoveProbability: row[`MoveProbability${i}`],\n          LineProbabilityW: row[`LineProbability(W)${i}`],\n          LineProbabilityB: row[`LineProbability(B)${i}`],\n          Pgn: row.Pgn\n        });\n      }\n    });\n    console.log(\"longDF\");\n    console.log(longDF);\n\n    // Add #Games column\n    const lineCounts = longDF.reduce((acc, row) => {\n      acc[row.Line] = (acc[row.Line] || 0) + 1;\n      return acc;\n    }, {});\n    longDF.forEach(row => {\n      row['#Games'] = lineCounts[row.Line];\n    });\n    const filteredLongDF2 = longDF.filter(row => opponentColor === 'Black' && row.LineProbabilityB > minProbability || opponentColor === 'White' && row.LineProbabilityW > minProbability);\n\n    //#\n    // Calculate lower limit based on precision level\n    let minGames = 1; // Default for At least 1\n    if (precisionLevel === '10% of Games') {\n      minGames = Math.ceil(totalGames / 10);\n    } else if (precisionLevel === '3% of Games') {\n      minGames = Math.ceil(totalGames / 35);\n    }\n    console.log(\"minGames\");\n    console.log(minGames);\n\n    // Filter for lines with more than minGames played\n    const filteredLongDFUnsorted = filteredLongDF2.filter(row => row.Line !== undefined && row['#Games'] > minGames);\n    console.log(\"filteredLongDFUnsorted\");\n    console.log(filteredLongDFUnsorted);\n    const filteredLongDF = filteredLongDFUnsorted.sort((a, b) => b.Ply - a.Ply);\n    console.log(\"filteredLongDF\");\n    console.log(filteredLongDF);\n    const sortedByLengthDF = filteredLongDFUnsorted.sort((a, b) => b.Line.length - a.Line.length);\n    console.log(\"sortedByLengthDF\");\n    console.log(sortedByLengthDF);\n\n    // Initialize a set to store lines that are not proper subsets\n    let uniqueLinesStr = \"//\";\n\n    // Filter out rows where Line is a proper subset of any other row\n    const nonSubsetLongDF = sortedByLengthDF.filter(row => {\n      if (uniqueLinesStr.includes(\"//\" + row.Line)) {\n        uniqueLinesStr += row.Line;\n        uniqueLinesStr += \"//\";\n        return false;\n      } else {\n        uniqueLinesStr += row.Line;\n        uniqueLinesStr += \"//\";\n        return true;\n      }\n    });\n    console.log(7);\n    console.log(\"nonSubsetLongDF\");\n    console.log(nonSubsetLongDF);\n    const groupedByLine = nonSubsetLongDF.reduce((acc, row) => {\n      if (!acc[row.Line]) {\n        acc[row.Line] = {\n          Line: row.Line,\n          EVAL: !isNaN(row.EVAL) ? row.EVAL : -Infinity,\n          Ply: row.Ply,\n          WhiteResult: row.WhiteResult,\n          LineProbabilityB: row.LineProbabilityB,\n          LineProbabilityW: row.LineProbabilityW,\n          GameID: row.GameID,\n          GameIDs: [row.GameID]\n        };\n      } else {\n        acc[row.Line].EVAL = Math.max(acc[row.Line].EVAL, !isNaN(row.EVAL) ? row.EVAL : -Infinity);\n        acc[row.Line].Ply = Math.max(acc[row.Line].Ply, row.Ply);\n        acc[row.Line].WhiteResult = Math.max(acc[row.Line].WhiteResult, row.WhiteResult);\n        acc[row.Line].LineProbabilityB = Math.max(acc[row.Line].LineProbabilityB, row.LineProbabilityB);\n        acc[row.Line].LineProbabilityW = Math.max(acc[row.Line].LineProbabilityW, row.LineProbabilityW);\n        acc[row.Line].GameID = Math.max(acc[row.Line].GameID, row.GameID);\n        acc[row.Line].GameIDs.push(row.GameID);\n      }\n      return acc;\n    }, {});\n\n    // Replace -Infinity back with NaN if no valid EVAL was found\n    Object.values(groupedByLine).forEach(row => {\n      if (row.EVAL === -Infinity) {\n        row.EVAL = NaN;\n      }\n    });\n    console.log(\"groupedByLine\");\n    console.log(groupedByLine);\n\n    // Convert groupedByLine to an array and sort\n    const groupedLongDF = Object.values(groupedByLine);\n    const sortedLongDF = groupedLongDF.sort((a, b) => {\n      if (opponentColor === \"Black\") {\n        return b.EVAL - a.EVAL;\n      } else {\n        return a.EVAL - b.EVAL;\n      }\n    });\n\n    // Consolidate LineProbability and drop irrelevant columns\n    sortedLongDF.forEach(row => {\n      if (opponentColor === \"Black\") {\n        row.LineProbability = row.LineProbabilityB;\n        delete row.LineProbabilityW;\n        delete row.LineProbabilityB;\n      } else {\n        row.LineProbability = row.LineProbabilityW;\n        delete row.LineProbabilityB;\n        delete row.LineProbabilityW;\n      }\n    });\n    console.log(\"sortedLongDF\");\n    console.log(sortedLongDF);\n    const categorizedLines = categorizeLines(sortedLongDF, opponentColor);\n    setFilteredData(categorizedLines);\n    const commonLines = findCommonLines(movesList);\n    setCommonLines(commonLines);\n    evaluateAndAnnotateGames(sortedLongDF, pgnList); // Pass pgnList as an argument\n  };\n  const evaluateAndAnnotateGames = async (minimalGroupedDF, pgnList) => {\n    const chess = new Chess();\n    const evaluatedGames = [];\n    const maxPly = Math.max(...minimalGroupedDF.map(row => row.Ply));\n    console.log(\"maxPly\");\n    console.log(maxPly);\n    const uniqueGameIDs = [...new Set(minimalGroupedDF.map(row => row.GameID))];\n    console.log(uniqueGameIDs);\n    for (let gameID = 0; gameID < pgnList.length; gameID++) {\n      if (uniqueGameIDs.includes(gameID)) {\n        const pgn = pgnList[gameID]; // Assuming all rows for the same game have the same PGN\n        chess.loadPgn(pgn);\n        const chess2 = new Chess();\n        chess2.loadPgn(pgn);\n        chess2.load(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\", {\n          preserveHeaders: true\n        });\n        const moves = chess.history();\n        for (let i = 0; i < maxPly && i < moves.length; i++) {\n          chess2.move(moves[i]);\n          const fen = chess2.fen();\n          const origevaluation = await evaluatePosition(fen);\n          const evaluation = i % 2 == 0 ? String(parseFloat(origevaluation) * -1) : String(parseFloat(origevaluation));\n          chess2.setComment(evaluation);\n        }\n        evaluatedGames.push(chess2.pgn());\n      } else {\n        evaluatedGames.push(pgnList[gameID]);\n      }\n    }\n    processEvaluatedGames(evaluatedGames, maxPly);\n  };\n  const processEvaluatedGames = (evaluatedPGNs, maxPly) => {\n    const chess = new Chess();\n    const movesList = [];\n    const fullValList = [];\n    const eventList = [];\n    const siteList = [];\n    const whiteList = [];\n    const blackList = [];\n    const resultList = [];\n    const dateList = [];\n    const whiteEloList = [];\n    const blackEloList = [];\n    const initialColnames = [];\n    chess.loadPgn(evaluatedPGNs[0]);\n    evaluatedPGNs.forEach((pgn, index) => {\n      console.log(\"pgn\");\n      console.log(pgn);\n      try {\n        chess.loadPgn(pgn);\n        console.log('a');\n        let moves = chess.history();\n        console.log('b');\n        movesList.push(moves);\n        console.log('c');\n        const commentsWithFens = chess.getComments();\n        const comments = commentsWithFens.map(item => item.comment);\n        const valList = [];\n        let triangle = String(moves[0]) + \"*\";\n        valList.push(triangle);\n        valList.push(parseFloat(comments[0]));\n        eventList.push(chess.header()[\"Event\"]);\n        siteList.push(chess.header()[\"Site\"]);\n        whiteList.push(chess.header()[\"White\"]);\n        blackList.push(chess.header()[\"Black\"]);\n        resultList.push(chess.header()[\"Result\"]);\n        dateList.push(chess.header()[\"Date\"]);\n        whiteEloList.push(chess.header()[\"WhiteElo\"]);\n        blackEloList.push(chess.header()[\"BlackElo\"]);\n        for (let i = 1; i < maxPly && i < moves.length; i++) {\n          triangle += String(moves[i]) + \"*\";\n          valList.push(triangle);\n          valList.push(parseFloat(comments[i]));\n        }\n        fullValList.push(valList);\n      } catch (error) {\n        fullValList.push([]);\n        eventList.push(\"\");\n        siteList.push(\"\");\n        whiteList.push(\"\");\n        blackList.push(\"\");\n        resultList.push(\"\");\n        dateList.push(\"\");\n        whiteEloList.push(\"\");\n        blackEloList.push(\"\");\n      }\n    });\n    console.log(\"fullValList\");\n    console.log(fullValList);\n    console.log(\"fullValList\");\n    console.log(fullValList);\n    for (let j = 1; j <= maxPly; j++) {\n      initialColnames.push(\"Line\" + String(j));\n      initialColnames.push(\"EVAL\" + String(j));\n    }\n    const dataFrame = fullValList.map((row, index) => ({\n      ...row.reduce((acc, val, i) => ({\n        ...acc,\n        [initialColnames[i]]: val\n      }), {}),\n      Event: eventList[index],\n      Site: siteList[index],\n      White: whiteList[index],\n      Black: blackList[index],\n      WhiteResult1: resultList[index] === '1-0' ? 1 : 0,\n      Date: dateList[index],\n      WhiteElo: whiteEloList[index],\n      BlackElo: blackEloList[index],\n      GameID: index\n    }));\n    console.log(\"dataFrame\");\n    console.log(dataFrame);\n    const filteredDF = dataFrame.filter(row => row[opponentColor] === opponentName);\n    const moveProb1 = filteredDF.reduce((acc, row) => {\n      acc[row.Line1] = (acc[row.Line1] || 0) + 1;\n      return acc;\n    }, {});\n    const totalGames = filteredDF.length;\n    filteredDF.forEach(row => {\n      row.MoveProbability1 = moveProb1[row.Line1] / totalGames;\n    });\n    for (let i = 1; i < maxPly; i++) {\n      filteredDF.forEach(row => {\n        row[`WhiteResult${i + 1}`] = row.WhiteResult1;\n      });\n      const moveProb = filteredDF.reduce((acc, row) => {\n        const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n        acc[key] = (acc[key] || 0) + 1;\n        return acc;\n      }, {});\n      const lineCount = filteredDF.reduce((acc, row) => {\n        acc[row[`Line${i}`]] = (acc[row[`Line${i}`]] || 0) + 1;\n        return acc;\n      }, {});\n      filteredDF.forEach(row => {\n        const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n        row[`MoveProbability${i + 1}`] = moveProb[key] / lineCount[row[`Line${i}`]];\n      });\n    }\n    filteredDF.forEach(row => {\n      let pw = 1;\n      let pb = 1;\n      for (let i = 1; i <= maxPly; i++) {\n        if (i % 2 === 1) {\n          pw *= row[`MoveProbability${i}`] || 1;\n        } else {\n          pb *= row[`MoveProbability${i}`] || 1;\n        }\n        row[`LineProbability(W)${i}`] = pw;\n        row[`LineProbability(B)${i}`] = pb;\n      }\n    });\n    const longDF = [];\n    filteredDF.forEach(row => {\n      for (let i = 1; i <= maxPly; i++) {\n        longDF.push({\n          GameID: row.GameID,\n          Ply: i,\n          Line: row[`Line${i}`],\n          EVAL: row[`EVAL${i}`],\n          WhiteResult: row[`WhiteResult${i}`],\n          MoveProbability: row[`MoveProbability${i}`],\n          LineProbabilityW: row[`LineProbability(W)${i}`],\n          LineProbabilityB: row[`LineProbability(B)${i}`],\n          Pgn: row.Pgn\n        });\n      }\n    });\n    console.log(\"longDF\");\n    console.log(longDF);\n\n    // Add #Games column\n    const lineCounts = longDF.reduce((acc, row) => {\n      acc[row.Line] = (acc[row.Line] || 0) + 1;\n      return acc;\n    }, {});\n    longDF.forEach(row => {\n      row['#Games'] = lineCounts[row.Line];\n    });\n\n    // Calculate lower limit based on precision level\n    let minGames = 1; // Default for At least 1\n    if (precisionLevel === '10% of Games') {\n      minGames = Math.ceil(totalGames / 10);\n    } else if (precisionLevel === '3% of Games') {\n      minGames = Math.ceil(totalGames / 35);\n    }\n    console.log(\"minGames\");\n    console.log(minGames);\n\n    // Filter for lines with more than minGames played\n    const filteredLongDFUnsorted = longDF.filter(row => row['#Games'] > minGames);\n    console.log(\"filteredLongDFUnsorted\");\n    console.log(filteredLongDFUnsorted);\n    const filteredLongDF = filteredLongDFUnsorted.sort((a, b) => b.Ply - a.Ply);\n    console.log(\"filteredLongDF\");\n    console.log(filteredLongDF);\n    const groupedByLine = filteredLongDF.reduce((acc, row) => {\n      if (!acc[row.Line]) {\n        acc[row.Line] = {\n          Line: row.Line,\n          EVAL: !isNaN(row.EVAL) ? row.EVAL : -Infinity,\n          Ply: row.Ply,\n          WhiteResult: row.WhiteResult,\n          LineProbabilityB: row.LineProbabilityB,\n          LineProbabilityW: row.LineProbabilityW,\n          GameIDs: [row.GameID]\n        };\n      } else {\n        acc[row.Line].EVAL = Math.max(acc[row.Line].EVAL, !isNaN(row.EVAL) ? row.EVAL : -Infinity);\n        acc[row.Line].Ply = Math.max(acc[row.Line].Ply, row.Ply);\n        acc[row.Line].WhiteResult = Math.max(acc[row.Line].WhiteResult, row.WhiteResult);\n        acc[row.Line].LineProbabilityB = Math.max(acc[row.Line].LineProbabilityB, row.LineProbabilityB);\n        acc[row.Line].LineProbabilityW = Math.max(acc[row.Line].LineProbabilityW, row.LineProbabilityW);\n        acc[row.Line].GameIDs.push(row.GameID);\n      }\n      return acc;\n    }, {});\n\n    // Replace -Infinity back with NaN if no valid EVAL was found\n    Object.values(groupedByLine).forEach(row => {\n      if (row.EVAL === -Infinity) {\n        row.EVAL = NaN;\n      }\n    });\n    console.log(\"groupedByLine\");\n    console.log(groupedByLine);\n\n    // Convert groupedByLine to an array and sort\n    const groupedLongDF = Object.values(groupedByLine);\n    const sortedLongDF = groupedLongDF.sort((a, b) => {\n      if (opponentColor === \"Black\") {\n        return b.EVAL - a.EVAL;\n      } else {\n        return a.EVAL - b.EVAL;\n      }\n    });\n\n    // Consolidate LineProbability and drop irrelevant columns\n    sortedLongDF.forEach(row => {\n      if (opponentColor === \"Black\") {\n        row.LineProbability = row.LineProbabilityB;\n        delete row.LineProbabilityW;\n        delete row.LineProbabilityB;\n      } else {\n        row.LineProbability = row.LineProbabilityW;\n        delete row.LineProbabilityB;\n        delete row.LineProbabilityW;\n      }\n    });\n    console.log(\"sortedLongDF\");\n    console.log(sortedLongDF);\n    const definedDF = sortedLongDF.filter(row => row.Line !== undefined);\n    console.log(\"definedDF\");\n    console.log(definedDF);\n    let fullLinesStr = \"//\";\n    let partialLinesStr = \"//\";\n    const nonSubsetLongDF = definedDF.filter(row => {\n      const subsets = [];\n      const lineMoves = row.Line.split(\"*\").filter(Boolean);\n\n      // SUBSET CHECK\n      // Check if value already in partialLinesStr\n      if (partialLinesStr.includes(\"//\" + row.Line + \"//\")) {\n        return false;\n      }\n\n      // SUPERSET CHECK\n      // Check if any subset is already in fullLinesStr\n\n      // Generate all possible subsets of the current line\n      for (let i = 1; i <= lineMoves.length; i++) {\n        const subset = lineMoves.slice(0, i).join(\"*\") + \"*\";\n        if (fullLinesStr.includes(\"//\" + subset + \"//\")) {\n          return false;\n        }\n        partialLinesStr += subset + \"//\";\n      }\n      ;\n      fullLinesStr += row.Line + \"//\";\n      return true;\n    });\n    console.log(\"nonSubsetLongDF\");\n    console.log(nonSubsetLongDF);\n    const categorizedLines = categorizeLines(nonSubsetLongDF, opponentColor);\n    setFilteredData(categorizedLines);\n    const commonLines = findCommonLines(movesList);\n    setCommonLines(commonLines);\n    setProcessing(false); // Stop processing\n  };\n  const evaluatePosition = fen => {\n    return new Promise(resolve => {\n      stockfish.postMessage(`position fen ${fen}`);\n      stockfish.postMessage(\"go depth 16\");\n      stockfish.onmessage = event => {\n        const line = event.data;\n        const depthMatch = line.match(/depth (\\d+)/);\n        const evalMatch = line.match(/score cp (-?\\d+)/);\n        if (depthMatch && evalMatch) {\n          const depth = parseInt(depthMatch[1], 10);\n          if (depth === 15) {\n            const evaluation = (parseInt(evalMatch[1], 10) / 100).toFixed(2);\n            resolve(evaluation);\n          }\n        }\n      };\n    });\n  };\n  const createPgnFromGameIDs = (gameIDs, pgnList) => {\n    return gameIDs.map(id => pgnList[id]).join('\\n\\n');\n  };\n  const handleLineClick = gameIDs => {\n    const combinedPgn = createPgnFromGameIDs(gameIDs, thePgnList);\n\n    // Store the combined PGN in localStorage\n    localStorage.setItem('combinedPgn', combinedPgn);\n\n    // Clear imported games\n    localStorage.removeItem('importedGames');\n\n    // Redirect to analysis board\n    window.location.href = '/analysis-board';\n  };\n  const categorizeLines = (finalLongDF, opponentColor) => {\n    return finalLongDF.map(row => {\n      const evalColumn = \"EVAL\";\n      const evaluation = row[evalColumn];\n      if (opponentColor === \"Black\") {\n        if (evaluation >= 2) {\n          row.MistakeType = \"Fatal Blunder\";\n        } else if (evaluation >= 1.0) {\n          row.MistakeType = \"Major Mistake\";\n        } else if (evaluation >= 0.6) {\n          row.MistakeType = \"Slight Inaccuracy\";\n        } else {\n          row.MistakeType = \"None\";\n        }\n      } else {\n        if (evaluation <= -1.6) {\n          row.MistakeType = \"Fatal Blunder\";\n        } else if (evaluation <= -0.6) {\n          row.MistakeType = \"Major Mistake\";\n        } else if (evaluation <= -0.2) {\n          row.MistakeType = \"Slight Inaccuracy\";\n        } else {\n          row.MistakeType = \"None\";\n        }\n      }\n      return row;\n    }).filter(row => row.MistakeType !== \"None\" && row.LineProbability > 0.2);\n  };\n  const findCommonLines = movesList => {\n    const lineCounts = {};\n    movesList.forEach(moves => {\n      moves.forEach((move, index) => {\n        const line = moves.slice(0, index + 1).join(' ');\n        if (!lineCounts[line]) {\n          lineCounts[line] = 0;\n        }\n        lineCounts[line]++;\n      });\n    });\n    const sortedLines = Object.entries(lineCounts).sort((a, b) => b[1] - a[1]);\n    return sortedLines.slice(0, 5);\n  };\n  const toggleDropdown = dropdown => {\n    setActiveDropdown(activeDropdown === dropdown ? null : dropdown);\n  };\n  const formatMovesWithNumbers = line => {\n    const moves = line.Line.split(\"*\").filter(Boolean);\n    const opening = detectOpening(moves);\n    const formattedMoves = moves.map((move, index) => {\n      const moveNumber = Math.floor(index / 2) + 1;\n      return index % 2 === 0 ? `${moveNumber}. ${move}` : `${moveNumber}...${move}`;\n    }).join(\" \");\n    return `${opening}: ${formattedMoves}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blunder-punisher\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onMouseEnter: () => setIsLogoHovered(true),\n            onMouseLeave: () => setIsLogoHovered(false),\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: isLogoHovered ? logoWhite : logo,\n                alt: \"Home\",\n                style: {\n                  height: '39px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1267,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1266,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1264,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/blunder-punisher\",\n              className: \"prepare-link\",\n              children: \"Blunder Punisher\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1270,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1270,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/weakness-finder\",\n              children: \"Weakness Finder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1271,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/analysis-board\",\n              children: \"Analysis Board\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1272,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1272,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/about-player\",\n              children: \"About Player\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1273,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1273,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1263,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1262,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1261,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"hero4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            style: {\n              position: 'absolute',\n              left: '50%',\n              transform: 'translateX(-50%)'\n            },\n            children: \"Blunder Punisher\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1280,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontStyle: 'italic',\n              fontSize: 20,\n              marginLeft: 'auto'\n            },\n            children: \"Punish your opponent's recurrent mistakes!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1281,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1279,\n          columnNumber: 17\n        }, this), !showAdvancedFilter ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFilterClick,\n            className: \"adv-filter-button\",\n            children: \"\\uD83D\\uDD0D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1286,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tab-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tab\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: inputMethod === 'chesscom' ? 'tablinks active' : 'tablinks',\n                onClick: () => setInputMethod('chesscom'),\n                children: \"Chess.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1290,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: inputMethod === 'lichess' ? 'tablinks active' : 'tablinks',\n                onClick: () => setInputMethod('lichess'),\n                children: \"Lichess\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1291,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: inputMethod === 'pgn' ? 'tablinks active' : 'tablinks',\n                onClick: () => setInputMethod('pgn'),\n                children: \"PGN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1292,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1289,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tabcontent\",\n              style: {\n                display: inputMethod === 'pgn' ? 'block' : 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  onChange: handleFileSelect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1297,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"opponentName\",\n                  children: \"Opponent Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1298,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"opponentName\",\n                  value: opponentName,\n                  onChange: e => setOpponentName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1299,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1296,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1295,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tabcontent\",\n              style: {\n                display: inputMethod === 'lichess' ? 'block' : 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"opponentUsername\",\n                  children: \"Opponent Username:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1310,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"opponentUsername\",\n                  value: opponentName,\n                  onChange: e => setOpponentName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1311,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1309,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1308,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tabcontent\",\n              style: {\n                display: inputMethod === 'chesscom' ? 'block' : 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"opponentUsername\",\n                  children: \"Opponent Username:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1322,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"opponentUsername\",\n                  value: opponentName,\n                  onChange: e => setOpponentName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1323,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1321,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1320,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"opponentColor\",\n                children: \"Opponent Color:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1333,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"opponentColor\",\n                value: opponentColor,\n                onChange: e => setOpponentColor(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"White\",\n                  children: \"White\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1339,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Black\",\n                  children: \"Black\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1340,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1334,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1332,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"precisionLevel\",\n                children: \"Min Mistake Frequency:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1345,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"precisionLevel\",\n                value: precisionLevel,\n                onChange: e => setPrecisionLevel(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"10% of Games\",\n                  children: \"10% of Games (5s-1min)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1351,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"3% of Games\",\n                  children: \"3% of Games (30s-4min)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1352,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"At Least 1 Game\",\n                  children: \"At Least 1 Game (1-30min)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1353,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1346,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1344,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleStart,\n              className: \"spec-button\",\n              style: {\n                marginTop: 6.5,\n                marginLeft: 10\n              },\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1357,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleReset,\n              className: \"spec-button\",\n              style: {\n                marginTop: 6.5,\n                marginLeft: 10\n              },\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1358,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1288,\n            columnNumber: 21\n          }, this), processing && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please wait, do not refresh or close the tab...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1360,\n            columnNumber: 36\n          }, this), processing ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"common-lines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1363,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Total Games: \", gamesCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1367,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleDropdown('Fatal Blunders'),\n                  children: [\"Fatal Blunders: (\", filteredData.filter(line => line.MistakeType === 'Fatal Blunder').length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1370,\n                  columnNumber: 33\n                }, this), activeDropdown === 'Fatal Blunders' && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: filteredData.filter(line => line.MistakeType === 'Fatal Blunder').map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"line-item\",\n                    onClick: () => handleLineClick(line.GameIDs),\n                    children: [formatMovesWithNumbers(line), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Evaluation: \", Math.round(line.EVAL * 100) / 100, \" w/ Trap Probability: \", Math.round(line.LineProbability * 100), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1378,\n                      columnNumber: 45\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1376,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1374,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1369,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleDropdown('Major Mistakes'),\n                  children: [\"Major Mistakes: (\", filteredData.filter(line => line.MistakeType === 'Major Mistake').length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1385,\n                  columnNumber: 33\n                }, this), activeDropdown === 'Major Mistakes' && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: filteredData.filter(line => line.MistakeType === 'Major Mistake').map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"line-item\",\n                    onClick: () => handleLineClick(line.GameIDs),\n                    children: [formatMovesWithNumbers(line), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Evaluation: \", Math.round(line.EVAL * 100) / 100, \" w/ Trap Probability: \", Math.round(line.LineProbability * 100), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1393,\n                      columnNumber: 44\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1391,\n                    columnNumber: 44\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1389,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1384,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleDropdown('Slight Inaccuracies'),\n                  children: [\"Slight Inaccuracies: (\", filteredData.filter(line => line.MistakeType === 'Slight Inaccuracy').length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1400,\n                  columnNumber: 33\n                }, this), activeDropdown === 'Slight Inaccuracies' && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: filteredData.filter(line => line.MistakeType === 'Slight Inaccuracy').map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"line-item\",\n                    onClick: () => handleLineClick(line.GameIDs),\n                    children: [formatMovesWithNumbers(line), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Evaluation: \", Math.round(line.EVAL * 100) / 100, \" w/ Trap Probability: \", Math.round(line.LineProbability * 100), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1408,\n                      columnNumber: 44\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1406,\n                    columnNumber: 44\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1404,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1399,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1368,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1366,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1285,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(AdvancedFilter, {\n          onSave: handleSaveFilter,\n          onCancel: handleCancelFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1419,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1278,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1277,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2024 CheckmateWizard.com All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1424,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1423,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1260,\n    columnNumber: 9\n  }, this);\n};\n_s(BlunderPunisher, \"UXzO5O7tXqhlWnz3vyUFMRQ0ESQ=\");\n_c = BlunderPunisher;\nexport default BlunderPunisher;\nvar _c;\n$RefreshReg$(_c, \"BlunderPunisher\");","map":{"version":3,"names":["React","useState","useEffect","Link","Chess","AdvancedFilter","logo","logoWhite","jsxDEV","_jsxDEV","STOCKFISH","window","defaultState","importedGames","gamesCount","commonLines","filteredData","thePgnList","previousOutput","opponentName","opponentColor","precisionLevel","processing","activeDropdown","inputMethod","isLogoHovered","BlunderPunisher","_s","showAdvancedFilter","setShowAdvancedFilter","errorMessage","setErrorMessage","filterParams","setFilterParams","finalLongDF","setFinalLongDF","evaluation","setEvaluation","bestLine","setBestLine","filter","setFilter","totalGames","setTotalGames","gameCounts","setGameCounts","oldestGame","setOldestGame","newestGame","setNewestGame","winLossRecord","setWinLossRecord","highestRatedWin","setHighestRatedWin","lowestRatedLoss","setLowestRatedLoss","gameLengthData","setGameLengthData","setIsLogoHovered","setImportedGames","JSON","parse","localStorage","getItem","setGamesCount","Number","setCommonLines","setFilteredData","setThePgnList","setPreviousOutput","setOpponentName","setOpponentColor","setPrecisionLevel","setProcessing","setActiveDropdown","setInputMethod","setItem","stringify","handleReset","removeItem","stockfish","Worker","postMessage","handleFileSelect","event","file","target","files","reader","FileReader","onload","e","fullPgn","result","rawGames","split","Boolean","games","map","game","trim","length","readAsText","fetchLichessGames","username","maxGames","timeControls","timeClasses","bullet","push","blitz","rapid","classical","timeClassFilter","join","response","fetch","data","text","console","log","error","handleFilterClick","handleSaveFilter","params","handleCancelFilter","fetchChessComGames","fetchGamesBatch","archiveUrl","ok","errorText","Error","statusText","json","filteredGames","rules","time_class","message","archivesResponse","archivesData","archives","reverse","results","handleLoadGames","openings","detectOpening","moves","movesSequence","opening","startsWith","handleStart","pgn","processGames","eventList","siteList","whiteList","blackList","resultList","dateList","whiteEloList","blackEloList","fullValList","initialColnames","movesList","pgnList","chess","minProbability","forEach","index","loadPgn","deleteComments","history","valList","triangle","String","header","i","j","dataFrame","row","reduce","acc","val","Event","Site","White","Black","WhiteResult1","Date","WhiteElo","BlackElo","Pgn","GameID","filteredDF","moveProb1","Line1","MoveProbability1","moveProb","key","lineCount","pw","pb","longDF","Ply","Line","EVAL","WhiteResult","MoveProbability","LineProbabilityW","LineProbabilityB","lineCounts","filteredLongDF2","minGames","Math","ceil","filteredLongDFUnsorted","undefined","filteredLongDF","sort","a","b","sortedByLengthDF","uniqueLinesStr","nonSubsetLongDF","includes","groupedByLine","isNaN","Infinity","GameIDs","max","Object","values","NaN","groupedLongDF","sortedLongDF","LineProbability","categorizedLines","categorizeLines","findCommonLines","evaluateAndAnnotateGames","minimalGroupedDF","evaluatedGames","maxPly","uniqueGameIDs","Set","gameID","chess2","load","preserveHeaders","move","fen","origevaluation","evaluatePosition","parseFloat","setComment","processEvaluatedGames","evaluatedPGNs","commentsWithFens","getComments","comments","item","comment","definedDF","fullLinesStr","partialLinesStr","subsets","lineMoves","subset","slice","Promise","resolve","onmessage","line","depthMatch","match","evalMatch","depth","parseInt","toFixed","createPgnFromGameIDs","gameIDs","id","handleLineClick","combinedPgn","location","href","evalColumn","MistakeType","sortedLines","entries","toggleDropdown","dropdown","formatMovesWithNumbers","formattedMoves","moveNumber","floor","className","children","onMouseEnter","onMouseLeave","to","src","alt","style","height","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","position","left","transform","fontStyle","fontSize","marginLeft","onClick","type","onChange","htmlFor","value","marginTop","round","onSave","onCancel","_c","$RefreshReg$"],"sources":["/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/BlunderPunisher.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Chess } from 'chess.js';\nimport AdvancedFilter from './AdvancedFilter'; // Import the new component\n\nimport './styles.css';\n\n\n// Import both logo images\nimport logo from './checkmatewizard_transparent.png'; // Adjust the path as needed\nimport logoWhite from './checkmatewizard_no_black.png'; // Adjust the path as needed\n\nconst STOCKFISH = window.STOCKFISH;\nconst defaultState = {\n    importedGames: [],\n    gamesCount: 0,\n    commonLines: [],\n    filteredData: [],\n    thePgnList: [],\n    previousOutput: \"\",\n    opponentName: '',\n    opponentColor: 'White',\n    precisionLevel: '3% of Games',\n    processing: false,\n    activeDropdown: null,\n    inputMethod: 'chesscom',\n    isLogoHovered: false\n};\nconst BlunderPunisher = () => {\n    const [showAdvancedFilter, setShowAdvancedFilter] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [filterParams, setFilterParams] = useState(null);\n    const [finalLongDF, setFinalLongDF] = useState([]);\n    const [evaluation, setEvaluation] = useState(\"\");\n    const [bestLine, setBestLine] = useState(\"\");\n    const [filter, setFilter] = useState('blunderPunisher_all'); // Default filter is 'All Games'\n    const [totalGames, setTotalGames] = useState(0);\n    const [gameCounts, setGameCounts] = useState({});\n    const [oldestGame, setOldestGame] = useState('');\n    const [newestGame, setNewestGame] = useState('');\n    const [winLossRecord, setWinLossRecord] = useState('');\n    const [highestRatedWin, setHighestRatedWin] = useState('');\n    const [lowestRatedLoss, setLowestRatedLoss] = useState('');\n    const [gameLengthData, setGameLengthData] = useState([]);\n    const [isLogoHovered, setIsLogoHovered] = useState(defaultState.isLogoHovered);\n    const [importedGames, setImportedGames] = useState(() => JSON.parse(localStorage.getItem('blunderPunisher_importedGames')) || defaultState.importedGames);\n    const [gamesCount, setGamesCount] = useState(() => Number(localStorage.getItem('blunderPunisher_gamesCount')) || defaultState.gamesCount);\n    const [commonLines, setCommonLines] = useState(() => JSON.parse(localStorage.getItem('blunderPunisher_commonLines')) || defaultState.commonLines);\n    const [filteredData, setFilteredData] = useState(() => JSON.parse(localStorage.getItem('blunderPunisher_filteredData')) || defaultState.filteredData);\n    const [thePgnList, setThePgnList] = useState(() => JSON.parse(localStorage.getItem('blunderPunisher_thePgnList')) || defaultState.thePgnList);\n    const [previousOutput, setPreviousOutput] = useState(defaultState.previousOutput);\n    const [opponentName, setOpponentName] = useState(() => localStorage.getItem('blunderPunisher_opponentName') || defaultState.opponentName);\n    const [opponentColor, setOpponentColor] = useState(() => localStorage.getItem('blunderPunisher_opponentColor') || defaultState.opponentColor);\n    const [precisionLevel, setPrecisionLevel] = useState(() => localStorage.getItem('blunderPunisher_precisionLevel') || defaultState.precisionLevel);\n    const [processing, setProcessing] = useState(defaultState.processing);\n    const [activeDropdown, setActiveDropdown] = useState(defaultState.activeDropdown);\n    const [inputMethod, setInputMethod] = useState(() => localStorage.getItem('blunderPunisher_inputMethod') || defaultState.inputMethod);\n\n    useEffect(() => {\n        localStorage.setItem('blunderPunisher_importedGames', JSON.stringify(importedGames));\n    }, [importedGames]);\n\n    useEffect(() => {\n        localStorage.setItem('blunderPunisher_gamesCount', gamesCount);\n    }, [gamesCount]);\n\n    useEffect(() => {\n        localStorage.setItem('blunderPunisher_commonLines', JSON.stringify(commonLines));\n    }, [commonLines]);\n\n    useEffect(() => {\n        localStorage.setItem('blunderPunisher_filteredData', JSON.stringify(filteredData));\n    }, [filteredData]);\n\n    useEffect(() => {\n        localStorage.setItem('blunderPunisher_thePgnList', JSON.stringify(thePgnList));\n    }, [thePgnList]);\n\n    useEffect(() => {\n        localStorage.setItem('blunderPunisher_opponentName', opponentName);\n    }, [opponentName]);\n\n    useEffect(() => {\n        localStorage.setItem('blunderPunisher_opponentColor', opponentColor);\n    }, [opponentColor]);\n\n    useEffect(() => {\n        localStorage.setItem('blunderPunisher_precisionLevel', precisionLevel);\n    }, [precisionLevel]);\n\n    useEffect(() => {\n        localStorage.setItem('blunderPunisher_inputMethod', inputMethod);\n    }, [inputMethod]);\n\n    const handleReset = () => {\n        // Reset state to default values\n        setImportedGames(defaultState.importedGames);\n        setGamesCount(defaultState.gamesCount);\n        setCommonLines(defaultState.commonLines);\n        setFilteredData(defaultState.filteredData);\n        setThePgnList(defaultState.thePgnList);\n        setPreviousOutput(defaultState.previousOutput);\n        setOpponentName(defaultState.opponentName);\n        setOpponentColor(defaultState.opponentColor);\n        setPrecisionLevel(defaultState.precisionLevel);\n        setProcessing(defaultState.processing);\n        setActiveDropdown(defaultState.activeDropdown);\n        setInputMethod(defaultState.inputMethod);\n\n        // Clear localStorage\n        localStorage.removeItem('blunderPunisher_importedGames');\n        localStorage.removeItem('blunderPunisher_gamesCount');\n        localStorage.removeItem('blunderPunisher_commonLines');\n        localStorage.removeItem('blunderPunisher_filteredData');\n        localStorage.removeItem('blunderPunisher_thePgnList');\n        localStorage.removeItem('blunderPunisher_opponentName');\n        localStorage.removeItem('blunderPunisher_opponentColor');\n        localStorage.removeItem('blunderPunisher_precisionLevel');\n        localStorage.removeItem('blunderPunisher_inputMethod');\n        localStorage.removeItem('blunderPunisher_combinedPgn');\n    };\n\n    let stockfish = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(\"stockfish.js\");\n    stockfish.postMessage(\"uci\");\n\n    useEffect(() => {}, [thePgnList]);\n\n    const handleFileSelect = (event) => {\n        const file = event.target.files[0];\n        if (!file) return;\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const fullPgn = e.target.result;\n            let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n            let games = rawGames.map(game => '[Event' + game.trim());\n\n            setImportedGames(games);\n            setGamesCount(games.length);\n        };\n        reader.readAsText(file);\n    };\n\n    const fetchLichessGames = async (username, maxGames = 1000, timeControls) => {\n        const timeClasses = [];\n        if (timeControls.bullet) timeClasses.push('bullet');\n        if (timeControls.blitz) timeClasses.push('blitz');\n        if (timeControls.rapid) timeClasses.push('rapid');\n        if (timeControls.classical) timeClasses.push('classical');\n        try {\n        const timeClassFilter = timeClasses.length > 0 ? `&perfType=${timeClasses.join(',')}` : '';\n        const response = await fetch(`https://lichess.org/api/games/user/${username}?max=${maxGames}&moves=true&pgnInJson=false${timeClassFilter}`);\n        const data = await response.text(); // Get the response as text (PGN format)\n        console.log(data);\n        return data;\n    } catch (error) {\n        setErrorMessage(`Error fetching Lichess games for \"${username}\"`);\n        return [];\n    }\n    };\n\n    const handleFilterClick = () => {\n        setShowAdvancedFilter(true);\n    };\n    const handleSaveFilter = (params) => {\n        setFilterParams(params);\n        setShowAdvancedFilter(false);\n        // Apply the filters directly to the games list or during game fetching\n    };\n\n    const handleCancelFilter = () => {\n        setShowAdvancedFilter(false);\n    };\n\n    const fetchChessComGames = async (username, maxGames = 1000, timeControls) => {\n        const fetchGamesBatch = async (archiveUrl) => {\n            try {\n                const response = await fetch(archiveUrl);\n                if (!response.ok) {\n                    const errorText = await response.text();\n                    throw new Error(`Error fetching data: ${response.statusText} - ${errorText}`);\n                }\n    \n                const data = await response.json();\n                // Filter by time controls if specified\n                console.log(data);\n                const filteredGames = data.games.filter(game => {\n                    if(game.rules!=\"chess\") return false;\n                    if (timeControls.bullet && game.time_class === 'bullet') return true;\n                    if (timeControls.blitz && game.time_class === 'blitz') return true;\n                    if (timeControls.rapid && game.time_class === 'rapid') return true;\n                    if (timeControls.classical && game.time_class === 'classical') return true;\n                    return false;\n                });\n    \n                return filteredGames;\n            } catch (error) {\n                console.error('Error fetching games batch:', error.message);\n                return []; // Return an empty array if there's an error\n            }\n        };\n    \n        try {\n            const archivesResponse = await fetch(`https://api.chess.com/pub/player/${username}/games/archives`);\n            if (!archivesResponse.ok) {\n                const errorText = await archivesResponse.text();\n                throw new Error(`Error fetching archives: ${archivesResponse.statusText} - ${errorText}`);\n            }\n            const archivesData = await archivesResponse.json();\n            const archives = archivesData.archives.reverse(); // Reverse to start from the most recent\n    \n            const results = [];\n            for (let archiveUrl of archives) {\n                if (results.length >= maxGames) break;\n    \n                const games = await fetchGamesBatch(archiveUrl);\n                results.push(...games);\n    \n                if (results.length >= maxGames) {\n                    results.length = maxGames; // Trim to the maxGames limit\n                    break;\n                }\n            }\n    \n            return results;\n        } catch (error) {\n            console.error('Error fetching games from Chess.com:', error.message);\n            throw error;\n        }\n    };\n\n\n    const handleLoadGames = () => {\n        // Logic to load games based on the selected filter (all or last 1000 games)\n        // Update the state variables such as totalGames, gameCounts, oldestGame, newestGame, etc.\n        console.log(`Loading games with filter: ${filter}`);\n    };\n\n    const openings = {\n        // King's Pawn Openings\n        \"e4\": \"King's Pawn Opening\",\n        \"e4 e5\": \"Open Game\",\n        \"e4 e5 Nf3\": \"King's Knight Opening\",\n        \"e4 e5 Nf3 Nc6\": \"King's Knight Opening: Normal Variation\",\n        \"e4 e5 Nf3 Nc6 Bb5\": \"Ruy Lopez\",\n        \"e4 e5 Nf3 Nc6 Bc4\": \"Italian Game\",\n        \"e4 e5 Nf3 Nc6 Bc4 Bc5\": \"Italian Game: Giuoco Piano\",\n        \"e4 e5 Nf3 Nc6 Bc4 Nf6\": \"Two Knights Defense\",\n        \"e4 e5 Nf3 Nc6 d4\": \"Scotch Game\",\n        \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4\": \"Scotch Game: Scotch Gambit\",\n        \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4 Bc5\": \"Scotch Game: Göring Gambit\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6\": \"Ruy Lopez: Morphy Defense\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4\": \"Ruy Lopez: Morphy Defense\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6\": \"Ruy Lopez: Morphy Defense, Closed\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O\": \"Ruy Lopez: Morphy Defense, Closed\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7\": \"Ruy Lopez: Closed, Morphy Defense\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1 b5 Bb3 d6 c3\": \"Ruy Lopez: Closed, Chigorin Defense\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1 b5 Bb3 d6 c3 O-O\": \"Ruy Lopez: Closed, Chigorin Defense, 12.d4\",\n        \"e4 e5 Nf3 d6\": \"Philidor Defense\",\n        \"e4 e5 f4\": \"King's Gambit\",\n        \"e4 e5 f4 exf4\": \"King's Gambit Accepted\",\n        \"e4 e5 f4 exf4 Nf3\": \"King's Gambit Accepted, King's Knight's Gambit\",\n        \"e4 e5 f4 exf4 Bc4\": \"King's Gambit Accepted, Bishop's Gambit\",\n        \"e4 e5 f4 d6\": \"King's Gambit Declined\",\n        \"e4 e5 Nf3 d6\": \"Philidor Defense\",\n        \"e4 e5 Nc3\": \"Vienna Game\",\n        \"e4 e5 Nc3 Nf6\": \"Vienna Game: Falkbeer Variation\",\n        \"e4 e5 Nc3 Nf6 g3\": \"Vienna Game: Mieses Variation\",\n        \"e4 e5 Nf3 Nc6 d3\": \"King's Indian Attack\",\n        \"e4 e5 d4\": \"Center Game\",\n        \"e4 e5 d4 exd4 Qxd4\": \"Center Game: Danish Gambit\",\n        \n        // Sicilian Defense\n        \"e4 c5\": \"Sicilian Defense\",\n        \"e4 c5 Nf3\": \"Sicilian Defense: Open\",\n        \"e4 c5 Nf3 d6\": \"Sicilian Defense: Najdorf Variation\",\n        \"e4 c5 Nf3 d6 d4\": \"Sicilian Defense: Open, Najdorf\",\n        \"e4 c5 Nf3 d6 d4 cxd4 Nxd4\": \"Sicilian Defense: Najdorf Variation, 6.Bg5\",\n        \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3\": \"Sicilian Defense: Classical\",\n        \"e4 c5 Nf3 e6\": \"Sicilian Defense: Taimanov\",\n        \"e4 c5 Nf3 e6 d4 cxd4 Nxd4 Nc6\": \"Sicilian Defense: Taimanov, Bastrikov\",\n        \"e4 c5 Nf3 e6 d4 cxd4 Nxd4 a6\": \"Sicilian Defense: Kan Variation\",\n        \"e4 c5 Nf3 Nc6\": \"Sicilian Defense: Closed\",\n        \"e4 c5 Nf3 Nc6 d4\": \"Sicilian Defense: Open\",\n        \"e4 c5 Nf3 Nc6 d4 cxd4 Nxd4\": \"Sicilian Defense: Accelerated Dragon\",\n        \"e4 c5 Nf3 Nc6 d4 cxd4 Nxd4 g6\": \"Sicilian Defense: Accelerated Dragon, Maroczy Bind\",\n        \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3 a6\": \"Sicilian Defense: Najdorf, English Attack\",\n        \"e4 c5 Nf3 d6 d4 cxd4 Nxd4 Nf6 Nc3 a6 Bg5\": \"Sicilian Defense: Najdorf, Main Line\",\n        \n        // French Defense\n        \"e4 e6\": \"French Defense\",\n        \"e4 e6 d4\": \"French Defense: Advance Variation\",\n        \"e4 e6 d4 d5\": \"French Defense: Advance\",\n        \"e4 e6 d4 d5 e5\": \"French Defense: Advance Variation\",\n        \"e4 e6 d4 d5 Nd2\": \"French Defense: Tarrasch\",\n        \"e4 e6 d4 d5 Nc3\": \"French Defense: Classical\",\n        \"e4 e6 d4 d5 Nc3 Nf6\": \"French Defense: Winawer Variation\",\n        \"e4 e6 d4 d5 Nc3 Bb4\": \"French Defense: Winawer\",\n        \"e4 e6 d4 d5 exd5 exd5 Bd3\": \"French Defense: Exchange Variation\",\n        \"e4 e6 d4 d5 exd5 exd5 Nc3\": \"French Defense: Exchange, Bogolyubov Variation\",\n        \"e4 e6 d4 d5 e5 c5\": \"French Defense: Advance Variation\",\n        \"e4 e6 d4 d5 Nf3\": \"French Defense: Two Knights\",\n        \n        // Caro-Kann Defense\n        \"e4 c6\": \"Caro-Kann Defense\",\n        \"e4 c6 d4 d5\": \"Caro-Kann Defense: Classical\",\n        \"e4 c6 d4 d5 Nc3\": \"Caro-Kann Defense: Advance\",\n        \"e4 c6 d4 d5 Nd2\": \"Caro-Kann Defense: Tarrasch\",\n        \"e4 c6 d4 d5 exd5\": \"Caro-Kann Defense: Exchange\",\n        \"e4 c6 d4 d5 e5\": \"Caro-Kann Defense: Advance Variation\",\n        \"e4 c6 d4 d5 exd5 cxd5 c4\": \"Caro-Kann Defense: Panov-Botvinnik Attack\",\n        \"e4 c6 d4 d5 Nc3 dxe4 Nxe4\": \"Caro-Kann Defense: Classical Variation\",\n        \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Bf5\": \"Caro-Kann Defense: Tartakower Variation\",\n        \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nd7\": \"Caro-Kann Defense: Karpov Variation\",\n        \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nd7 Nf3 Ngf6\": \"Caro-Kann Defense: Smyslov Variation\",\n        \n        // Queen's Gambit\n        \"d4\": \"Queen's Pawn Opening\",\n        \"d4 d5 c4\": \"Queen's Gambit\",\n        \"d4 d5 c4 c6\": \"Slav Defense\",\n        \"d4 d5 c4 e6\": \"Queen's Gambit Declined\",\n        \"d4 d5 c4 dxc4\": \"Queen's Gambit Accepted\",\n        \"d4 d5 c4 e6 Nc3 Nf6\": \"Queen's Gambit Declined\",\n        \"d4 d5 c4 e6 Nc3 Nf6 Bg5\": \"Queen's Gambit Declined: Orthodox Defense\",\n        \"d4 d5 c4 e6 Nc3 Nf6 Bg5 Be7\": \"Queen's Gambit Declined: Orthodox Defense, Main Line\",\n        \"d4 d5 c4 e6 Nc3 Nf6 Bg5 h6\": \"Queen's Gambit Declined: Orthodox Defense, Lasker Defense\",\n        \"d4 d5 c4 e6 Nf3\": \"Queen's Gambit Declined: 5.Nf3 Variation\",\n        \"d4 d5 c4 e6 Nf3 Nf6\": \"Queen's Gambit Declined: 5.Nf3 Variation, Main Line\",\n        \"d4 d5 c4 e6 Nf3 c5\": \"Tarrasch Defense\",\n        \"d4 d5 c4 e6 Nc3 c5\": \"Tarrasch Defense, Closed Variation\",\n        \"d4 d5 c4 e6 Nc3 c5 cxd5 exd5\": \"Tarrasch Defense, Classical Variation\",\n        \"d4 d5 c4 e6 Nc3 c5 cxd5 exd5 Nf3 Nc6\": \"Tarrasch Defense, Main Line\",\n        \"d4 d5 c4 e6 Nc3 Nf6 Nf3\": \"Queen's Gambit Declined: 6.Nf3\",\n        \"d4 d5 c4 e6 Nc3 Nf6 Nf3 Be7\": \"Queen's Gambit Declined: 7.Be7\",\n        \"d4 d5 c4 e6 Nc3 Nf6 Nf3 Be7 Bf4\": \"Queen's Gambit Declined: Harrwitz Attack\",\n        \n        // King's Indian Defense\n        \"d4 Nf6\": \"Indian Game\",\n        \"d4 Nf6 c4 g6\": \"King's Indian Defense\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7\": \"King's Indian Defense: Fianchetto\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6\": \"King's Indian Defense: Classical\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O\": \"King's Indian Defense: Mar del Plata\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 f3\": \"King's Indian Defense: Saemisch Variation\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2\": \"King's Indian Defense: Orthodox Variation\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2 O-O\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Be2 O-O Nf3\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5\": \"King's Indian Defense: Orthodox Variation, Classical System\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O\": \"King's Indian Defense: Orthodox Variation, Classical System, 7.O-O\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O Nc6\": \"King's Indian Defense: Orthodox Variation, Classical System, 7...Nc6\",\n        \"d4 Nf6 c4 g6 Nc3 Bg7 e4 d6 Nf3 O-O Be2 e5 O-O Nbd7\": \"King's Indian Defense: Orthodox Variation, Classical System, 7...Nbd7\",\n        \n        // Nimzo-Indian Defense\n        \"d4 Nf6 c4 e6\": \"Indian Game\",\n        \"d4 Nf6 c4 e6 Nc3\": \"Nimzo-Indian Defense\",\n        \"d4 Nf6 c4 e6 Nc3 Bb4\": \"Nimzo-Indian Defense: Classical\",\n        \"d4 Nf6 c4 e6 Nc3 Bb4 Qc2\": \"Nimzo-Indian Defense: Classical, Capablanca Variation\",\n        \"d4 Nf6 c4 e6 Nc3 Bb4 e3\": \"Nimzo-Indian Defense: Rubinstein\",\n        \"d4 Nf6 c4 e6 Nc3 Bb4 e3 O-O\": \"Nimzo-Indian Defense: Rubinstein, 4...O-O\",\n        \"d4 Nf6 c4 e6 Nc3 Bb4 Qb3\": \"Nimzo-Indian Defense: Sämisch Variation\",\n        \"d4 Nf6 c4 e6 Nc3 Bb4 a3\": \"Nimzo-Indian Defense: Sämisch, Leningrad System\",\n        \n        // Ruy Lopez Variations\n        \"e4 e5 Nf3 Nc6 Bb5 a6\": \"Ruy Lopez: Morphy Defense\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4\": \"Ruy Lopez: Morphy Defense\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6\": \"Ruy Lopez: Closed\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O\": \"Ruy Lopez: Closed\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7\": \"Ruy Lopez: Closed, Morphy Defense\",\n        \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O Be7 Re1\": \"Ruy Lopez: Closed, Morphy Defense\",\n        \n        // English Opening\n        \"c4\": \"English Opening\",\n        \"c4 e5\": \"English Opening: Reversed Sicilian\",\n        \"c4 e5 Nc3 Nc6\": \"English Opening: Four Knights\",\n        \"c4 e5 Nc3 Nf6\": \"English Opening: Two Knights\",\n        \"c4 e5 g3\": \"English Opening: Botvinnik System\",\n        \n        // Other Common Openings\n        \"Nf3\": \"Reti Opening\",\n        \"b3\": \"Nimzowitsch-Larsen Attack\",\n        \"d4 f5\": \"Dutch Defense\",\n        \"f4\": \"Bird's Opening\",\n        \"g3\": \"King's Fianchetto Opening\",\n        // King's Pawn Openings\n    \"e4 e5\": \"Open Game\",\n    \"e4 c5\": \"Sicilian Defense\",\n    \"e4 e6\": \"French Defense\",\n    \"e4 c6\": \"Caro-Kann Defense\",\n    \"e4 d6\": \"Pirc Defense\",\n    \"e4 d5\": \"Scandinavian Defense\",\n    \"e4 Nf6\": \"Alekhine's Defense\",\n    \"e4 g6\": \"Modern Defense\",\n    \"e4 b6\": \"Owen's Defense\",\n    \"e4 Nc6\": \"Nimzowitsch Defense\",\n    \"e4 b5\": \"Polish Defense\",\n    \"e4 e5 Nf3\": \"King's Knight Opening\",\n    \"e4 e5 Nc3\": \"Vienna Game\",\n    \"e4 e5 f4\": \"King's Gambit\",\n    \"e4 e5 d4\": \"Center Game\",\n    \"e4 e5 Nf3 Nc6\": \"King's Knight Opening: Normal Variation\",\n    \"e4 e5 Nf3 Nc6 Bb5\": \"Ruy Lopez\",\n    \"e4 e5 Nf3 Nc6 Bc4\": \"Italian Game\",\n    \"e4 e5 Nf3 Nc6 Bc4 Bc5\": \"Italian Game: Giuoco Piano\",\n    \"e4 e5 Nf3 Nc6 Bc4 Nf6\": \"Two Knights Defense\",\n    \"e4 e5 Nf3 Nc6 d4\": \"Scotch Game\",\n    \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4\": \"Scotch Game: Scotch Gambit\",\n    \"e4 e5 Nf3 Nc6 d4 exd4 Nxd4 Bc5\": \"Scotch Game: Göring Gambit\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6\": \"Ruy Lopez: Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4\": \"Ruy Lopez: Morphy Defense\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6\": \"Ruy Lopez: Morphy Defense, Closed\",\n    \"e4 e5 Nf3 Nc6 Bb5 a6 Ba4 Nf6 O-O\": \"Ruy Lopez: Morphy Defense, Closed\",\n    \"e4 e5 Nf3 d6\": \"Philidor Defense\",\n    \"e4 e5 f4\": \"King's Gambit\",\n    \"e4 e5 f4 exf4\": \"King's Gambit Accepted\",\n    \"e4 e5 f4 d6\": \"King's Gambit Declined\",\n    \"e4 e5 Nc3\": \"Vienna Game\",\n    \"e4 e5 Nc3 Nf6\": \"Vienna Game: Falkbeer Variation\",\n    \"e4 e5 Nc3 Nf6 g3\": \"Vienna Game: Mieses Variation\",\n    \"e4 e5 d3\": \"King's Indian Attack\",\n    \"e4 e5 d4\": \"Center Game\",\n    \"e4 e5 d4 exd4 Qxd4\": \"Center Game: Danish Gambit\",\n    \n    // Sicilian Defense\n    \"e4 c5\": \"Sicilian Defense\",\n    \"e4 c5 Nf3\": \"Sicilian Defense: Open\",\n    \"e4 c5 c3\": \"Sicilian Defense: Alapin Variation\",\n    \"e4 c5 d4\": \"Sicilian Defense: Smith-Morra Gambit\",\n    \"e4 c5 Nc3\": \"Sicilian Defense: Closed\",\n    \"e4 c5 f4\": \"Sicilian Defense: Grand Prix Attack\",\n    \"e4 c5 b3\": \"Sicilian Defense: Nimzowitsch-Rossolimo Attack\",\n    \"e4 c5 g3\": \"Sicilian Defense: Fianchetto Variation\",\n    \"e4 c5 d3\": \"Sicilian Defense: King's Indian Attack\",\n    \n    // French Defense\n    \"e4 e6\": \"French Defense\",\n    \"e4 e6 d4\": \"French Defense: Advance Variation\",\n    \"e4 e6 d3\": \"French Defense: King's Indian Attack\",\n    \"e4 e6 c4\": \"French Defense: Franco-Hiva Gambit\",\n    \"e4 e6 Nf3\": \"French Defense: Two Knights\",\n    \"e4 e6 d4 d5\": \"French Defense: Main Line\",\n    \"e4 e6 d4 d5 e5\": \"French Defense: Advance Variation\",\n    \"e4 e6 d4 d5 Nd2\": \"French Defense: Tarrasch\",\n    \"e4 e6 d4 d5 Nc3\": \"French Defense: Classical\",\n    \"e4 e6 d4 d5 Nf3\": \"French Defense: Two Knights\",\n    \"e4 e6 d4 d5 exd5 exd5 Bd3\": \"French Defense: Exchange Variation\",\n    \n    // Caro-Kann Defense\n    \"e4 c6\": \"Caro-Kann Defense\",\n    \"e4 c6 d4\": \"Caro-Kann Defense: Main Line\",\n    \"e4 c6 c4\": \"Caro-Kann Defense: Panov-Botvinnik Attack\",\n    \"e4 c6 Nf3\": \"Caro-Kann Defense: Two Knights\",\n    \"e4 c6 d3\": \"Caro-Kann Defense: King's Indian Attack\",\n    \"e4 c6 g3\": \"Caro-Kann Defense: Fianchetto Variation\",\n    \n    // Pirc Defense and Modern Defense\n    \"e4 d6\": \"Pirc Defense\",\n    \"e4 g6\": \"Modern Defense\",\n    \"e4 d6 d4\": \"Pirc Defense\",\n    \"e4 g6 d4\": \"Modern Defense\",\n    \"e4 d6 d4 Nf6\": \"Pirc Defense: Classical\",\n    \"e4 g6 d4 Bg7\": \"Modern Defense: Robatsch Defense\",\n    \n    // Scandinavian Defense\n    \"e4 d5\": \"Scandinavian Defense\",\n    \"e4 d5 exd5\": \"Scandinavian Defense: Main Line\",\n    \"e4 d5 Nf3\": \"Scandinavian Defense: Gambit\",\n    \n    // Alekhine's Defense\n    \"e4 Nf6\": \"Alekhine's Defense\",\n    \"e4 Nf6 e5\": \"Alekhine's Defense: Chase Variation\",\n    \"e4 Nf6 d3\": \"Alekhine's Defense: King's Indian Attack\",\n    \n    // Nimzowitsch Defense\n    \"e4 Nc6\": \"Nimzowitsch Defense\",\n    \"e4 Nc6 d4\": \"Nimzowitsch Defense: Main Line\",\n    \n    // Dutch Defense\n    \"d4 f5\": \"Dutch Defense\",\n    \"d4 d6\": \"Old Indian Defense\",\n    \"d4 d5\": \"Queen's Gambit Declined\",\n    \"d4 Nf6\": \"Indian Game\",\n    \"d4 d5 c4\": \"Queen's Gambit\",\n    \"d4 d5 Nf3\": \"London System\",\n    \"d4 Nf6 Nf3\": \"King's Indian Attack\",\n    \"d4 f5\": \"Dutch Defense\",\n    \"d4 g6\": \"Modern Defense\",\n    \"d4 Nc6\": \"Chigorin Defense\",\n    \"d4 d6\": \"Old Indian Defense\",\n    \"d4 e6\": \"Horwitz Defense\",\n    \"d4 c5\": \"Benoni Defense\",\n    \"d4 Nf6 c4\": \"Indian Game\",\n    \"d4 f5 c4\": \"Dutch Defense\",\n    \n    // English Opening\n    \"c4\": \"English Opening\",\n    \"c4 c5\": \"English Opening: Symmetrical Variation\",\n    \"c4 e5\": \"English Opening: Reversed Sicilian\",\n    \"c4 Nf6\": \"English Opening: Anglo-Indian\",\n    \"c4 g6\": \"English Opening: Botvinnik System\",\n    \n    // Reti and Other Openings\n    \"Nf3\": \"Reti Opening\",\n    \"Nf3 d5\": \"Reti Opening: Main Line\",\n    \"Nf3 c5\": \"Reti Opening: Anglo-Slav\",\n    \"Nf3 c5 c4\": \"Reti Opening: King's Indian Attack\",\n    \"e4 e5 Nf3 Nc6 Bc4 Nd4\": \"Blackburne Shilling Gambit\",\n    \"e4 c6 d4 d5 Nc3 dxe4 Nxe4 Nf6 Ng5 h6 Nxf7\": \"Witty Alien Gambit\",\n    \"e4 e5 Nf3 Nf6 Nxe5 Nc6\": \"Stafford Gambit\",\n    \"b3\": \"Nimzowitsch-Larsen Attack\",\n    \"g3\": \"King's Fianchetto Opening\",\n    \"f4\": \"Bird's Opening\",\n    \"f4 d5\": \"Bird's Opening: Dutch Variation\",\n    \"f4 e5\": \"From's Gambit\",\n    \"b4\": \"Polish Opening\",\n    \"b4 e5\": \"Polish Opening: Outflank Variation\",\n    \"e3\": \"Van 't Kruijs Opening\",\n    \"a3\": \"Anderssen's Opening\",\n    \"h3\": \"Clemenz Opening\",\n    \"h4\": \"Desprez Opening\",\n    \"d3\": \"Mieses Opening\",\n    \"c3\": \"Saragossa Opening\",\n    \"Nc3\": \"Van Geet Opening\",\n    \"g4\": \"Grob's Attack\",\n    \"Na3\": \"Sodium Attack\",\n    \"Nh3\": \"Amar Opening\",\n    \"e3\": \"Van 't Kruijs Opening\",\n    \"f3\": \"Barnes Opening\",\n    \"a4\": \"Ware Opening\",\n    };\n\n    const detectOpening = (moves) => {\n        const movesSequence = moves.join(\" \");\n        for (const opening in openings) {\n            if (movesSequence.startsWith(opening)) {\n                return openings[opening];\n            }\n        }\n        return \"Unknown Opening\"; // Fallback if the opening is not in the book\n    };\n\n    const handleStart = async () => {\n        setProcessing(true);\n        let games = [];\n        const { maxGames, timeControls } = filterParams || { maxGames: 1000, timeControls: { bullet: true, blitz: true, rapid: true, classical: true } };\n\n        if (inputMethod === 'lichess') {\n            const data = await fetchLichessGames(opponentName, maxGames, timeControls);\n            let rawGames = data.split(/\\[Event/gi).filter(Boolean);\n            games = rawGames.map(game => '[Event' + game.trim());\n        } else if (inputMethod === 'chesscom') {\n            const data = await fetchChessComGames(opponentName, maxGames, timeControls);\n            games = data.map(game => game.pgn);\n        } else {\n            games = importedGames;\n        }\n        setGamesCount(games.length);\n\n        processGames(games);\n\n    };\n\n\n\n    \n    const processGames = (games) => {\n        console.log(4);\n        const eventList = [];\n        const siteList = [];\n        const whiteList = [];\n        const blackList = [];\n        const resultList = [];\n        const dateList = [];\n        const whiteEloList = [];\n        const blackEloList = [];\n        const fullValList = [];\n        const initialColnames = [];\n        const movesList = [];\n        const pgnList = [];\n        const chess = new Chess();\n        console.log(5);\n        const minProbability = filterParams ? filterParams.minProbability : 0.2; // Default to 0.2\n\n\n        games.forEach((game, index) => {\n            if (game){\n            chess.loadPgn(game);\n            chess.deleteComments();\n            let moves = chess.history();\n            movesList.push(moves);\n\n            const valList = [];\n            let triangle = String(moves[0]) + \"*\";\n            valList.push(triangle);\n\n            pgnList.push(chess.pgn());\n            eventList.push(chess.header()[\"Event\"]);\n            siteList.push(chess.header()[\"Site\"]);\n            whiteList.push(chess.header()[\"White\"]);\n            blackList.push(chess.header()[\"Black\"]);\n            resultList.push(chess.header()[\"Result\"]);\n            dateList.push(chess.header()[\"Date\"]);\n            whiteEloList.push(chess.header()[\"WhiteElo\"]);\n            blackEloList.push(chess.header()[\"BlackElo\"]);\n\n            for (let i = 1; i < 25 && i < moves.length; i++) {\n                triangle += String(moves[i]) + \"*\";\n                valList.push(triangle);\n            }\n            fullValList.push(valList);\n        };\n    });\n\n        setThePgnList(pgnList); // Set the pgnList to the state variable thePgnList\n\n        for (let j = 1; j <= 25; j++) {\n            initialColnames.push(\"Line\" + String(j));\n        }\n        console.log(6);\n\n        const dataFrame = fullValList.map((row, index) => ({\n            ...row.reduce((acc, val, i) => ({ ...acc, [initialColnames[i]]: val }), {}),\n            Event: eventList[index],\n            Site: siteList[index],\n            White: whiteList[index],\n            Black: blackList[index],\n            WhiteResult1: resultList[index] === '1-0' ? 1 : 0,\n            Date: dateList[index],\n            WhiteElo: whiteEloList[index],\n            BlackElo: blackEloList[index],\n            Pgn: pgnList[index],\n            GameID: index\n        }));\n        console.log(\"dataFrame\");\n        console.log(dataFrame);\n        console.log(7);\n\n        const filteredDF = dataFrame.filter(row => row[opponentColor] === opponentName);\n\n        const moveProb1 = filteredDF.reduce((acc, row) => {\n            acc[row.Line1] = (acc[row.Line1] || 0) + 1;\n            return acc;\n        }, {});\n        const totalGames = filteredDF.length;\n\n        filteredDF.forEach(row => {\n            row.MoveProbability1 = moveProb1[row.Line1] / totalGames;\n        });\n\n        for (let i = 1; i < 25; i++) {\n            filteredDF.forEach(row => {\n                row[`WhiteResult${i + 1}`] = row.WhiteResult1;\n            });\n\n            const moveProb = filteredDF.reduce((acc, row) => {\n                const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n                acc[key] = (acc[key] || 0) + 1;\n                return acc;\n            }, {});\n\n            const lineCount = filteredDF.reduce((acc, row) => {\n                acc[row[`Line${i}`]] = (acc[row[`Line${i}`]] || 0) + 1;\n                return acc;\n            }, {});\n\n            filteredDF.forEach(row => {\n                const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n                row[`MoveProbability${i + 1}`] = moveProb[key] / lineCount[row[`Line${i}`]];\n            });\n        }\n        console.log(\"filteredDF\");\n        console.log(filteredDF);\n\n        filteredDF.forEach(row => {\n            let pw = 1;\n            let pb = 1;\n            for (let i = 1; i <= 25; i++) {\n                if (i % 2 === 1) {\n                    pw *= row[`MoveProbability${i}`] || 1;\n                } else {\n                    pb *= row[`MoveProbability${i}`] || 1;\n                }\n                row[`LineProbability(W)${i}`] = pw;\n                row[`LineProbability(B)${i}`] = pb;\n            }\n        });\n        console.log(\"filteredDF\");\n        console.log(filteredDF);\n        console.log(6);\n\n        const longDF = [];\n        filteredDF.forEach(row => {\n            for (let i = 1; i <= 25; i++) {\n                longDF.push({\n                    GameID: row.GameID,\n                    Ply: i,\n                    Line: row[`Line${i}`],\n                    EVAL: row[`EVAL${i}`],\n                    WhiteResult: row[`WhiteResult${i}`],\n                    MoveProbability: row[`MoveProbability${i}`],\n                    LineProbabilityW: row[`LineProbability(W)${i}`],\n                    LineProbabilityB: row[`LineProbability(B)${i}`],\n                    Pgn: row.Pgn\n                });\n            }\n        });\n        console.log(\"longDF\");\n        console.log(longDF);\n\n        // Add #Games column\n        const lineCounts = longDF.reduce((acc, row) => {\n            acc[row.Line] = (acc[row.Line] || 0) + 1;\n            return acc;\n        }, {});\n\n        longDF.forEach(row => {\n            row['#Games'] = lineCounts[row.Line];\n        });\n        const filteredLongDF2 = longDF.filter(row => \n            (opponentColor === 'Black' && row.LineProbabilityB > minProbability) ||\n            (opponentColor === 'White' && row.LineProbabilityW > minProbability)\n        );\n\n        //#\n        // Calculate lower limit based on precision level\n        let minGames = 1; // Default for At least 1\n        if (precisionLevel === '10% of Games') {\n            minGames = Math.ceil(totalGames / 10);\n        } else if (precisionLevel === '3% of Games') {\n            minGames = Math.ceil(totalGames / 35);\n        }\n        console.log(\"minGames\");\n        console.log(minGames);\n\n        // Filter for lines with more than minGames played\n        const filteredLongDFUnsorted = filteredLongDF2.filter(row => row.Line !== undefined && row['#Games'] > minGames);\n        console.log(\"filteredLongDFUnsorted\");\n        console.log(filteredLongDFUnsorted);\n        const filteredLongDF = filteredLongDFUnsorted.sort((a, b) => b.Ply - a.Ply);\n        console.log(\"filteredLongDF\");\n        console.log(filteredLongDF);\n\n        const sortedByLengthDF = filteredLongDFUnsorted.sort((a, b) => b.Line.length - a.Line.length);\n        console.log(\"sortedByLengthDF\");\n        console.log(sortedByLengthDF);\n\n        // Initialize a set to store lines that are not proper subsets\n        let uniqueLinesStr = \"//\";\n\n        // Filter out rows where Line is a proper subset of any other row\n        const nonSubsetLongDF = sortedByLengthDF.filter(row => {\n            if(uniqueLinesStr.includes( \"//\"+row.Line)){\n                uniqueLinesStr += row.Line;\n                uniqueLinesStr += \"//\";\n                return false;}\n            else{\n                uniqueLinesStr += row.Line;\n                uniqueLinesStr += \"//\";\n                return true;\n            }\n        });\n        console.log(7);\n\n        console.log(\"nonSubsetLongDF\");\n        console.log(nonSubsetLongDF);\n\n        const groupedByLine = nonSubsetLongDF.reduce((acc, row) => {\n            if (!acc[row.Line]) {\n                acc[row.Line] = {\n                    Line: row.Line,\n                    EVAL: !isNaN(row.EVAL) ? row.EVAL : -Infinity,\n                    Ply: row.Ply,\n                    WhiteResult: row.WhiteResult,\n                    LineProbabilityB: row.LineProbabilityB,\n                    LineProbabilityW: row.LineProbabilityW,\n                    GameID: row.GameID,\n                    GameIDs: [row.GameID]\n                };\n            } else {\n                acc[row.Line].EVAL = Math.max(acc[row.Line].EVAL, !isNaN(row.EVAL) ? row.EVAL : -Infinity);\n                acc[row.Line].Ply = Math.max(acc[row.Line].Ply, row.Ply);\n                acc[row.Line].WhiteResult = Math.max(acc[row.Line].WhiteResult, row.WhiteResult);\n                acc[row.Line].LineProbabilityB = Math.max(acc[row.Line].LineProbabilityB, row.LineProbabilityB);\n                acc[row.Line].LineProbabilityW = Math.max(acc[row.Line].LineProbabilityW, row.LineProbabilityW);\n                acc[row.Line].GameID = Math.max(acc[row.Line].GameID, row.GameID);\n                acc[row.Line].GameIDs.push(row.GameID);\n            }\n            return acc;\n        }, {});\n        \n        // Replace -Infinity back with NaN if no valid EVAL was found\n        Object.values(groupedByLine).forEach(row => {\n            if (row.EVAL === -Infinity) {\n                row.EVAL = NaN;\n            }\n        });\n        console.log(\"groupedByLine\");\n        console.log(groupedByLine);\n        \n        // Convert groupedByLine to an array and sort\n        const groupedLongDF = Object.values(groupedByLine);\n        const sortedLongDF = groupedLongDF.sort((a, b) => {\n            if (opponentColor === \"Black\") {\n                return b.EVAL - a.EVAL;\n            } else {\n                return a.EVAL - b.EVAL;\n            }\n        });\n        \n        // Consolidate LineProbability and drop irrelevant columns\n        sortedLongDF.forEach(row => {\n            if (opponentColor === \"Black\") {\n                row.LineProbability = row.LineProbabilityB;\n                delete row.LineProbabilityW;\n                delete row.LineProbabilityB;\n            } else {\n                row.LineProbability = row.LineProbabilityW;\n                delete row.LineProbabilityB;\n                delete row.LineProbabilityW;\n            }\n        });\n        \n        console.log(\"sortedLongDF\");\n        console.log(sortedLongDF);\n        \n        const categorizedLines = categorizeLines(sortedLongDF, opponentColor);\n        setFilteredData(categorizedLines);\n\n        const commonLines = findCommonLines(movesList);\n        setCommonLines(commonLines);\n\n        evaluateAndAnnotateGames(sortedLongDF, pgnList); // Pass pgnList as an argument\n    };\n\n    const evaluateAndAnnotateGames = async (minimalGroupedDF, pgnList) => {\n        const chess = new Chess();\n        const evaluatedGames = [];\n        const maxPly = Math.max(...minimalGroupedDF.map(row => row.Ply));\n        console.log(\"maxPly\");\n        console.log(maxPly);\n\n        const uniqueGameIDs = [...new Set(minimalGroupedDF.map(row => row.GameID))];\n        console.log(uniqueGameIDs);\n        for (let gameID = 0; gameID < pgnList.length; gameID++) {\n            if (uniqueGameIDs.includes(gameID)) {\n                const pgn = pgnList[gameID]; // Assuming all rows for the same game have the same PGN\n                chess.loadPgn(pgn);\n                const chess2 = new Chess();\n                chess2.loadPgn(pgn);\n                chess2.load(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\", { preserveHeaders: true });\n                const moves = chess.history();\n\n                for (let i = 0; i < maxPly && i < moves.length; i++) {\n                    chess2.move(moves[i]);\n                    const fen = chess2.fen();\n                    const origevaluation = await evaluatePosition(fen);\n                    const evaluation = i%2==0?String(parseFloat(origevaluation)*(-1)):String(parseFloat(origevaluation));\n\n                    chess2.setComment(evaluation);\n                }\n\n                evaluatedGames.push(chess2.pgn());\n            } else {\n                evaluatedGames.push(pgnList[gameID]);\n            }\n\n        }\n\n        processEvaluatedGames(evaluatedGames, maxPly);\n    };\n\n    const processEvaluatedGames = (evaluatedPGNs, maxPly) => {\n        const chess = new Chess();\n        const movesList = [];\n        const fullValList = [];\n        const eventList = [];\n        const siteList = [];\n        const whiteList = [];\n        const blackList = [];\n        const resultList = [];\n        const dateList = [];\n        const whiteEloList = [];\n        const blackEloList = [];\n        const initialColnames = [];\n        chess.loadPgn(evaluatedPGNs[0]);\n\n\n        evaluatedPGNs.forEach((pgn, index) => {\n            console.log(\"pgn\");\n            console.log(pgn);\n            try{\n            chess.loadPgn(pgn);\n            console.log('a')\n            let moves = chess.history();\n            console.log('b')\n\n            movesList.push(moves);\n            console.log('c')\n            const commentsWithFens = chess.getComments();\n            const comments = commentsWithFens.map(item => item.comment);\n\n            const valList = [];\n            let triangle = String(moves[0]) + \"*\";\n            valList.push(triangle);\n            valList.push(parseFloat(comments[0]));\n\n            eventList.push(chess.header()[\"Event\"]);\n            siteList.push(chess.header()[\"Site\"]);\n            whiteList.push(chess.header()[\"White\"]);\n            blackList.push(chess.header()[\"Black\"]);\n            resultList.push(chess.header()[\"Result\"]);\n            dateList.push(chess.header()[\"Date\"]);\n            whiteEloList.push(chess.header()[\"WhiteElo\"]);\n            blackEloList.push(chess.header()[\"BlackElo\"]);\n\n            for (let i = 1; i < maxPly && i < moves.length; i++) {\n                triangle += String(moves[i]) + \"*\";\n                valList.push(triangle);\n                valList.push(parseFloat(comments[i]));\n            }\n            fullValList.push(valList);\n        }catch(error){\n            fullValList.push([]);\n            eventList.push(\"\");\n            siteList.push(\"\");\n            whiteList.push(\"\");\n            blackList.push(\"\");\n            resultList.push(\"\");\n            dateList.push(\"\");\n            whiteEloList.push(\"\");\n            blackEloList.push(\"\");}\n        });\n\n        console.log(\"fullValList\");\n        console.log(fullValList);\n        console.log(\"fullValList\");\n        console.log(fullValList);\n\n        for (let j = 1; j <= maxPly; j++) {\n            initialColnames.push(\"Line\" + String(j));\n            initialColnames.push(\"EVAL\" + String(j));\n        }\n\n        const dataFrame = fullValList.map((row, index) => ({\n            ...row.reduce((acc, val, i) => ({ ...acc, [initialColnames[i]]: val }), {}),\n            Event: eventList[index],\n            Site: siteList[index],\n            White: whiteList[index],\n            Black: blackList[index],\n            WhiteResult1: resultList[index] === '1-0' ? 1 : 0,\n            Date: dateList[index],\n            WhiteElo: whiteEloList[index],\n            BlackElo: blackEloList[index],\n            GameID: index\n        }));\n\n        console.log(\"dataFrame\");\n        console.log(dataFrame);\n\n        const filteredDF = dataFrame.filter(row => row[opponentColor] === opponentName);\n\n        const moveProb1 = filteredDF.reduce((acc, row) => {\n            acc[row.Line1] = (acc[row.Line1] || 0) + 1;\n            return acc;\n        }, {});\n        const totalGames = filteredDF.length;\n\n        filteredDF.forEach(row => {\n            row.MoveProbability1 = moveProb1[row.Line1] / totalGames;\n        });\n\n        for (let i = 1; i < maxPly; i++) {\n            filteredDF.forEach(row => {\n                row[`WhiteResult${i + 1}`] = row.WhiteResult1;\n            });\n\n            const moveProb = filteredDF.reduce((acc, row) => {\n                const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n                acc[key] = (acc[key] || 0) + 1;\n                return acc;\n            }, {});\n\n            const lineCount = filteredDF.reduce((acc, row) => {\n                acc[row[`Line${i}`]] = (acc[row[`Line${i}`]] || 0) + 1;\n                return acc;\n            }, {});\n\n            filteredDF.forEach(row => {\n                const key = `${row[`Line${i}`]}|${row[`Line${i + 1}`]}`;\n                row[`MoveProbability${i + 1}`] = moveProb[key] / lineCount[row[`Line${i}`]];\n            });\n        }\n\n        filteredDF.forEach(row => {\n            let pw = 1;\n            let pb = 1;\n            for (let i = 1; i <= maxPly; i++) {\n                if (i % 2 === 1) {\n                    pw *= row[`MoveProbability${i}`] || 1;\n                } else {\n                    pb *= row[`MoveProbability${i}`] || 1;\n                }\n                row[`LineProbability(W)${i}`] = pw;\n                row[`LineProbability(B)${i}`] = pb;\n            }\n        });\n\n        const longDF = [];\n        filteredDF.forEach(row => {\n            for (let i = 1; i <= maxPly; i++) {\n                longDF.push({\n                    GameID: row.GameID,\n                    Ply: i,\n                    Line: row[`Line${i}`],\n                    EVAL: row[`EVAL${i}`],\n                    WhiteResult: row[`WhiteResult${i}`],\n                    MoveProbability: row[`MoveProbability${i}`],\n                    LineProbabilityW: row[`LineProbability(W)${i}`],\n                    LineProbabilityB: row[`LineProbability(B)${i}`],\n                    Pgn: row.Pgn\n                });\n            }\n        });\n\n        console.log(\"longDF\");\n        console.log(longDF);\n\n        // Add #Games column\n        const lineCounts = longDF.reduce((acc, row) => {\n            acc[row.Line] = (acc[row.Line] || 0) + 1;\n            return acc;\n        }, {});\n\n        longDF.forEach(row => {\n            row['#Games'] = lineCounts[row.Line];\n        });\n\n        // Calculate lower limit based on precision level\n        let minGames = 1; // Default for At least 1\n        if (precisionLevel === '10% of Games') {\n            minGames = Math.ceil(totalGames / 10);\n        } else if (precisionLevel === '3% of Games') {\n            minGames = Math.ceil(totalGames / 35);\n        }\n        console.log(\"minGames\");\n        console.log(minGames);\n\n        // Filter for lines with more than minGames played\n        const filteredLongDFUnsorted = longDF.filter(row => row['#Games'] > minGames);\n        console.log(\"filteredLongDFUnsorted\");\n        console.log(filteredLongDFUnsorted);\n        const filteredLongDF = filteredLongDFUnsorted.sort((a, b) => b.Ply - a.Ply);\n        console.log(\"filteredLongDF\");\n        console.log(filteredLongDF);\n\n        const groupedByLine = filteredLongDF.reduce((acc, row) => {\n            if (!acc[row.Line]) {\n                acc[row.Line] = {\n                    Line: row.Line,\n                    EVAL: !isNaN(row.EVAL) ? row.EVAL : -Infinity,\n                    Ply: row.Ply,\n                    WhiteResult: row.WhiteResult,\n                    LineProbabilityB: row.LineProbabilityB,\n                    LineProbabilityW: row.LineProbabilityW,\n                    GameIDs: [row.GameID]\n                };\n            } else {\n                acc[row.Line].EVAL = Math.max(acc[row.Line].EVAL, !isNaN(row.EVAL) ? row.EVAL : -Infinity);\n                acc[row.Line].Ply = Math.max(acc[row.Line].Ply, row.Ply);\n                acc[row.Line].WhiteResult = Math.max(acc[row.Line].WhiteResult, row.WhiteResult);\n                acc[row.Line].LineProbabilityB = Math.max(acc[row.Line].LineProbabilityB, row.LineProbabilityB);\n                acc[row.Line].LineProbabilityW = Math.max(acc[row.Line].LineProbabilityW, row.LineProbabilityW);\n                acc[row.Line].GameIDs.push(row.GameID);\n            }\n            return acc;\n        }, {});\n        \n        // Replace -Infinity back with NaN if no valid EVAL was found\n        Object.values(groupedByLine).forEach(row => {\n            if (row.EVAL === -Infinity) {\n                row.EVAL = NaN;\n            }\n        });\n        \n        console.log(\"groupedByLine\");\n        console.log(groupedByLine);\n\n        // Convert groupedByLine to an array and sort\n        const groupedLongDF = Object.values(groupedByLine);\n        const sortedLongDF = groupedLongDF.sort((a, b) => {\n            if (opponentColor === \"Black\") {\n                return b.EVAL - a.EVAL;\n            } else {\n                return a.EVAL - b.EVAL;\n            }\n        });\n\n        // Consolidate LineProbability and drop irrelevant columns\n        sortedLongDF.forEach(row => {\n            if (opponentColor === \"Black\") {\n                row.LineProbability = row.LineProbabilityB;\n                delete row.LineProbabilityW;\n                delete row.LineProbabilityB;\n            } else {\n                row.LineProbability = row.LineProbabilityW;\n                delete row.LineProbabilityB;\n                delete row.LineProbabilityW;\n            }\n        });\n\n        console.log(\"sortedLongDF\");\n        console.log(sortedLongDF);\n        \n\n    const definedDF = sortedLongDF.filter(row => row.Line !== undefined);\n    console.log(\"definedDF\");\n        console.log(definedDF);\n \n        let fullLinesStr = \"//\";\n        let partialLinesStr = \"//\";\n    const nonSubsetLongDF = definedDF.filter(row => {\n        const subsets = [];\n        const lineMoves = row.Line.split(\"*\").filter(Boolean);\n        \n// SUBSET CHECK\n        // Check if value already in partialLinesStr\n        if (partialLinesStr.includes(\"//\" + row.Line +\"//\")) {\n                return false;\n            }\n        \n\n\n        // SUPERSET CHECK\n        // Check if any subset is already in fullLinesStr\n\n        // Generate all possible subsets of the current line\n        for (let i = 1; i <= lineMoves.length; i++) {\n            const subset = lineMoves.slice(0, i).join(\"*\") + \"*\"; \n            if (fullLinesStr.includes(\"//\" + subset+ \"//\")) {\n                return false;\n            }\n            partialLinesStr += subset + \"//\";\n    };\n        fullLinesStr += row.Line+ \"//\";\n        return true;\n    });\n\n    console.log(\"nonSubsetLongDF\");\n    console.log(nonSubsetLongDF);\n    \n        const categorizedLines = categorizeLines(nonSubsetLongDF, opponentColor);\n        setFilteredData(categorizedLines);\n\n        const commonLines = findCommonLines(movesList);\n        setCommonLines(commonLines);\n        setProcessing(false); // Stop processing\n    };\n    const evaluatePosition = (fen) => {\n        return new Promise((resolve) => {\n            stockfish.postMessage(`position fen ${fen}`);\n            stockfish.postMessage(\"go depth 16\");\n\n            stockfish.onmessage = (event) => {\n                const line = event.data;\n                const depthMatch = line.match(/depth (\\d+)/);\n                const evalMatch = line.match(/score cp (-?\\d+)/);\n\n                if (depthMatch && evalMatch) {\n                    const depth = parseInt(depthMatch[1], 10);\n                    if (depth === 15) {\n                        const evaluation = (parseInt(evalMatch[1], 10) / 100).toFixed(2);\n                        resolve(evaluation);\n                    }\n                }\n            };\n        });\n    };\n\n    const createPgnFromGameIDs = (gameIDs, pgnList) => {\n        return gameIDs.map(id => pgnList[id]).join('\\n\\n');\n    };\n    \n    const handleLineClick = (gameIDs) => {\n        const combinedPgn = createPgnFromGameIDs(gameIDs, thePgnList);\n    \n        // Store the combined PGN in localStorage\n        localStorage.setItem('combinedPgn', combinedPgn);\n    \n        // Clear imported games\n        localStorage.removeItem('importedGames');\n    \n        // Redirect to analysis board\n        window.location.href = '/analysis-board';\n    };\n    \n    \n\n    const categorizeLines = (finalLongDF, opponentColor) => {\n        return finalLongDF.map(row => {\n            const evalColumn = \"EVAL\";\n            const evaluation = row[evalColumn];\n\n            if (opponentColor === \"Black\") {\n                if (evaluation >= 2) {\n                    row.MistakeType = \"Fatal Blunder\";\n                } else if (evaluation >= 1.0) {\n                    row.MistakeType = \"Major Mistake\";\n                } else if (evaluation >= 0.6) {\n                    row.MistakeType = \"Slight Inaccuracy\";\n                } else {\n                    row.MistakeType = \"None\";\n                }\n            } else {\n                if (evaluation <= -1.6) {\n                    row.MistakeType = \"Fatal Blunder\";\n                } else if (evaluation <= -0.6) {\n                    row.MistakeType = \"Major Mistake\";\n                } else if (evaluation <= -0.2) {\n                    row.MistakeType = \"Slight Inaccuracy\";\n                } else {\n                    row.MistakeType = \"None\";\n                }\n            }\n\n            return row;\n        }).filter(row => row.MistakeType !== \"None\" && row.LineProbability > 0.2);\n    };\n\n    const findCommonLines = (movesList) => {\n        const lineCounts = {};\n\n        movesList.forEach(moves => {\n            moves.forEach((move, index) => {\n                const line = moves.slice(0, index + 1).join(' ');\n                if (!lineCounts[line]) {\n                    lineCounts[line] = 0;\n                }\n                lineCounts[line]++;\n            });\n        });\n\n        const sortedLines = Object.entries(lineCounts).sort((a, b) => b[1] - a[1]);\n        return sortedLines.slice(0, 5);\n    };\n\n    const toggleDropdown = (dropdown) => {\n        setActiveDropdown(activeDropdown === dropdown ? null : dropdown);\n    };\n\n     const formatMovesWithNumbers = (line) => {\n        const moves = line.Line.split(\"*\").filter(Boolean);\n        const opening = detectOpening(moves);\n        const formattedMoves = moves.map((move, index) => {\n            const moveNumber = Math.floor(index / 2) + 1;\n            return index % 2 === 0 ? `${moveNumber}. ${move}` : `${moveNumber}...${move}`;\n        }).join(\" \");\n    \n        return `${opening}: ${formattedMoves}`;\n    };\n\n    return (\n        <div className=\"blunder-punisher\">\n            <header>\n                <nav>\n                    <ul>\n                        <li onMouseEnter={() => setIsLogoHovered(true)}\n                            onMouseLeave={() => setIsLogoHovered(false)}>\n                            <Link to=\"/\">\n                                <img src={isLogoHovered ? logoWhite : logo} alt=\"Home\" style={{ height: '39px' }} />\n                            </Link>\n                        </li>\n                        <li><Link to=\"/blunder-punisher\" className=\"prepare-link\">Blunder Punisher</Link></li>\n                        <li><Link to=\"/weakness-finder\">Weakness Finder</Link></li>\n                        <li><Link to=\"/analysis-board\">Analysis Board</Link></li>\n                        <li><Link to=\"/about-player\">About Player</Link></li>\n                    </ul>\n                </nav>\n            </header>\n            <main>\n                <section className=\"hero4\">\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\n    <h1 className=\"title\" style={{ position: 'absolute', left: '50%', transform: 'translateX(-50%)' }}>Blunder Punisher</h1>\n    <p style={{ fontStyle: 'italic', fontSize: 20, marginLeft: 'auto' }}>Punish your opponent's recurrent mistakes!</p>\n</div>\n\n                    {!showAdvancedFilter ? (\n                        <div className=\"filter-container\">\n                            <button onClick={handleFilterClick} className=\"adv-filter-button\">🔍</button>\n                            \n                    <div className=\"tab-container\">\n                        <div className=\"tab\">\n                            <button className={inputMethod === 'chesscom' ? 'tablinks active' : 'tablinks'} onClick={() => setInputMethod('chesscom')}>Chess.com</button>\n                            <button className={inputMethod === 'lichess' ? 'tablinks active' : 'tablinks'} onClick={() => setInputMethod('lichess')}>Lichess</button>\n                            <button className={inputMethod === 'pgn' ? 'tablinks active' : 'tablinks'} onClick={() => setInputMethod('pgn')}>PGN</button>\n                        </div>\n\n                        <div className=\"tabcontent\" style={{ display: inputMethod === 'pgn' ? 'block' : 'none' }}>\n                            <div className=\"form-group\">\n                                <input type=\"file\" onChange={handleFileSelect} />\n                                <label htmlFor=\"opponentName\">Opponent Name:</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"opponentName\" \n                                    value={opponentName} \n                                    onChange={(e) => setOpponentName(e.target.value)} \n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"tabcontent\" style={{ display: inputMethod === 'lichess' ? 'block' : 'none' }}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"opponentUsername\">Opponent Username:</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"opponentUsername\" \n                                    value={opponentName} \n                                    onChange={(e) => setOpponentName(e.target.value)} \n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"tabcontent\" style={{ display: inputMethod === 'chesscom' ? 'block' : 'none' }}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"opponentUsername\">Opponent Username:</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"opponentUsername\" \n                                    value={opponentName} \n                                    onChange={(e) => setOpponentName(e.target.value)} \n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"opponentColor\">Opponent Color:</label>\n                            <select \n                                id=\"opponentColor\" \n                                value={opponentColor} \n                                onChange={(e) => setOpponentColor(e.target.value)}\n                            >\n                                <option value=\"White\">White</option>\n                                <option value=\"Black\">Black</option>\n                            </select>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"precisionLevel\">Min Mistake Frequency:</label>\n                            <select \n                                id=\"precisionLevel\" \n                                value={precisionLevel} \n                                onChange={(e) => setPrecisionLevel(e.target.value)}\n                            >\n                                <option value=\"10% of Games\">10% of Games (5s-1min)</option>\n                                <option value=\"3% of Games\">3% of Games (30s-4min)</option>\n                                <option value=\"At Least 1 Game\">At Least 1 Game (1-30min)</option>\n                            </select>\n                        </div>\n                        \n                        <button onClick={handleStart} className=\"spec-button\" style={{marginTop:6.5, marginLeft:10}}>Start</button>\n                        <button onClick={handleReset}  className=\"spec-button\" style={{marginTop:6.5, marginLeft:10}} >Reset</button>\n                    </div>\n                    {processing && <p>Please wait, do not refresh or close the tab...</p>}\n                    \n                    {processing ? (\n                        <div className=\"common-lines\">\n                        </div>\n                    ) : (\n                        <div>\n                            <p>Total Games: {gamesCount}</p>\n                        <div className=\"dropdown-container\">\n                            <div className=\"dropdown\">\n                                <button onClick={() => toggleDropdown('Fatal Blunders')}>\n                                    Fatal Blunders: ({filteredData.filter(line => line.MistakeType === 'Fatal Blunder').length})\n                                </button>\n                                {activeDropdown === 'Fatal Blunders' && (\n                                    <ul>\n                                        {filteredData.filter(line => line.MistakeType === 'Fatal Blunder').map((line, index) => (\n                                            <li key={index} className='line-item' onClick={() => handleLineClick(line.GameIDs)}>\n                                            {formatMovesWithNumbers(line)}\n                                            <p>Evaluation: {Math.round(line.EVAL * 100) / 100} w/ Trap Probability: {Math.round(line.LineProbability * 100)}%</p>\n                                        </li>\n                                        ))}\n                                    </ul>\n                                )}\n                            </div>\n                            <div className=\"dropdown\">\n                                <button onClick={() => toggleDropdown('Major Mistakes')}>\n                                    Major Mistakes: ({filteredData.filter(line => line.MistakeType === 'Major Mistake').length})\n                                </button>\n                                {activeDropdown === 'Major Mistakes' && (\n                                    <ul>\n                                        {filteredData.filter(line => line.MistakeType === 'Major Mistake').map((line, index) => (\n                                           <li key={index} className='line-item' onClick={() => handleLineClick(line.GameIDs)}>\n                                           {formatMovesWithNumbers(line)}\n                                           <p>Evaluation: {Math.round(line.EVAL * 100) / 100} w/ Trap Probability: {Math.round(line.LineProbability * 100)}%</p>\n                                           </li>\n                                        ))}\n                                    </ul>\n                                )}\n                            </div>\n                            <div className=\"dropdown\">\n                                <button onClick={() => toggleDropdown('Slight Inaccuracies')}>\n                                    Slight Inaccuracies: ({filteredData.filter(line => line.MistakeType === 'Slight Inaccuracy').length})\n                                </button>\n                                {activeDropdown === 'Slight Inaccuracies' && (\n                                    <ul>\n                                        {filteredData.filter(line => line.MistakeType === 'Slight Inaccuracy').map((line, index) => (\n                                           <li key={index} className='line-item' onClick={() => handleLineClick(line.GameIDs)}>\n                                           {formatMovesWithNumbers(line)}\n                                           <p>Evaluation: {Math.round(line.EVAL * 100) / 100} w/ Trap Probability: {Math.round(line.LineProbability * 100)}%</p>\n                                           </li>\n                                        ))}\n                                    </ul>\n                                )}\n                            </div>\n                            </div>\n                            </div>\n                        )}\n                        </div>\n                    ) : (\n                        <AdvancedFilter onSave={handleSaveFilter} onCancel={handleCancelFilter} />\n                    )}\n                </section>\n            </main>\n            <footer>\n                <p>&copy; 2024 CheckmateWizard.com All rights reserved.</p>\n            </footer>\n        </div>\n    );\n};\n\nexport default BlunderPunisher;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,KAAK,QAAQ,UAAU;AAChC,OAAOC,cAAc,MAAM,kBAAkB,CAAC,CAAC;;AAE/C,OAAO,cAAc;;AAGrB;AACA,OAAOC,IAAI,MAAM,mCAAmC,CAAC,CAAC;AACtD,OAAOC,SAAS,MAAM,gCAAgC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,SAAS,GAAGC,MAAM,CAACD,SAAS;AAClC,MAAME,YAAY,GAAG;EACjBC,aAAa,EAAE,EAAE;EACjBC,UAAU,EAAE,CAAC;EACbC,WAAW,EAAE,EAAE;EACfC,YAAY,EAAE,EAAE;EAChBC,UAAU,EAAE,EAAE;EACdC,cAAc,EAAE,EAAE;EAClBC,YAAY,EAAE,EAAE;EAChBC,aAAa,EAAE,OAAO;EACtBC,cAAc,EAAE,aAAa;EAC7BC,UAAU,EAAE,KAAK;EACjBC,cAAc,EAAE,IAAI;EACpBC,WAAW,EAAE,UAAU;EACvBC,aAAa,EAAE;AACnB,CAAC;AACD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAAC6B,YAAY,EAAEC,eAAe,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC+B,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACmC,UAAU,EAAEC,aAAa,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACqC,QAAQ,EAAEC,WAAW,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuC,MAAM,EAAEC,SAAS,CAAC,GAAGxC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACyC,UAAU,EAAEC,aAAa,CAAC,GAAG1C,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC2C,UAAU,EAAEC,aAAa,CAAC,GAAG5C,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAAC6C,UAAU,EAAEC,aAAa,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC+C,UAAU,EAAEC,aAAa,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiD,aAAa,EAAEC,gBAAgB,CAAC,GAAGlD,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACmD,eAAe,EAAEC,kBAAkB,CAAC,GAAGpD,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACqD,eAAe,EAAEC,kBAAkB,CAAC,GAAGtD,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACuD,cAAc,EAAEC,iBAAiB,CAAC,GAAGxD,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACwB,aAAa,EAAEiC,gBAAgB,CAAC,GAAGzD,QAAQ,CAACW,YAAY,CAACa,aAAa,CAAC;EAC9E,MAAM,CAACZ,aAAa,EAAE8C,gBAAgB,CAAC,GAAG1D,QAAQ,CAAC,MAAM2D,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,+BAA+B,CAAC,CAAC,IAAInD,YAAY,CAACC,aAAa,CAAC;EACzJ,MAAM,CAACC,UAAU,EAAEkD,aAAa,CAAC,GAAG/D,QAAQ,CAAC,MAAMgE,MAAM,CAACH,YAAY,CAACC,OAAO,CAAC,4BAA4B,CAAC,CAAC,IAAInD,YAAY,CAACE,UAAU,CAAC;EACzI,MAAM,CAACC,WAAW,EAAEmD,cAAc,CAAC,GAAGjE,QAAQ,CAAC,MAAM2D,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,6BAA6B,CAAC,CAAC,IAAInD,YAAY,CAACG,WAAW,CAAC;EACjJ,MAAM,CAACC,YAAY,EAAEmD,eAAe,CAAC,GAAGlE,QAAQ,CAAC,MAAM2D,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,8BAA8B,CAAC,CAAC,IAAInD,YAAY,CAACI,YAAY,CAAC;EACrJ,MAAM,CAACC,UAAU,EAAEmD,aAAa,CAAC,GAAGnE,QAAQ,CAAC,MAAM2D,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,4BAA4B,CAAC,CAAC,IAAInD,YAAY,CAACK,UAAU,CAAC;EAC7I,MAAM,CAACC,cAAc,EAAEmD,iBAAiB,CAAC,GAAGpE,QAAQ,CAACW,YAAY,CAACM,cAAc,CAAC;EACjF,MAAM,CAACC,YAAY,EAAEmD,eAAe,CAAC,GAAGrE,QAAQ,CAAC,MAAM6D,YAAY,CAACC,OAAO,CAAC,8BAA8B,CAAC,IAAInD,YAAY,CAACO,YAAY,CAAC;EACzI,MAAM,CAACC,aAAa,EAAEmD,gBAAgB,CAAC,GAAGtE,QAAQ,CAAC,MAAM6D,YAAY,CAACC,OAAO,CAAC,+BAA+B,CAAC,IAAInD,YAAY,CAACQ,aAAa,CAAC;EAC7I,MAAM,CAACC,cAAc,EAAEmD,iBAAiB,CAAC,GAAGvE,QAAQ,CAAC,MAAM6D,YAAY,CAACC,OAAO,CAAC,gCAAgC,CAAC,IAAInD,YAAY,CAACS,cAAc,CAAC;EACjJ,MAAM,CAACC,UAAU,EAAEmD,aAAa,CAAC,GAAGxE,QAAQ,CAACW,YAAY,CAACU,UAAU,CAAC;EACrE,MAAM,CAACC,cAAc,EAAEmD,iBAAiB,CAAC,GAAGzE,QAAQ,CAACW,YAAY,CAACW,cAAc,CAAC;EACjF,MAAM,CAACC,WAAW,EAAEmD,cAAc,CAAC,GAAG1E,QAAQ,CAAC,MAAM6D,YAAY,CAACC,OAAO,CAAC,6BAA6B,CAAC,IAAInD,YAAY,CAACY,WAAW,CAAC;EAErItB,SAAS,CAAC,MAAM;IACZ4D,YAAY,CAACc,OAAO,CAAC,+BAA+B,EAAEhB,IAAI,CAACiB,SAAS,CAAChE,aAAa,CAAC,CAAC;EACxF,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnBX,SAAS,CAAC,MAAM;IACZ4D,YAAY,CAACc,OAAO,CAAC,4BAA4B,EAAE9D,UAAU,CAAC;EAClE,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhBZ,SAAS,CAAC,MAAM;IACZ4D,YAAY,CAACc,OAAO,CAAC,6BAA6B,EAAEhB,IAAI,CAACiB,SAAS,CAAC9D,WAAW,CAAC,CAAC;EACpF,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjBb,SAAS,CAAC,MAAM;IACZ4D,YAAY,CAACc,OAAO,CAAC,8BAA8B,EAAEhB,IAAI,CAACiB,SAAS,CAAC7D,YAAY,CAAC,CAAC;EACtF,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElBd,SAAS,CAAC,MAAM;IACZ4D,YAAY,CAACc,OAAO,CAAC,4BAA4B,EAAEhB,IAAI,CAACiB,SAAS,CAAC5D,UAAU,CAAC,CAAC;EAClF,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhBf,SAAS,CAAC,MAAM;IACZ4D,YAAY,CAACc,OAAO,CAAC,8BAA8B,EAAEzD,YAAY,CAAC;EACtE,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElBjB,SAAS,CAAC,MAAM;IACZ4D,YAAY,CAACc,OAAO,CAAC,+BAA+B,EAAExD,aAAa,CAAC;EACxE,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnBlB,SAAS,CAAC,MAAM;IACZ4D,YAAY,CAACc,OAAO,CAAC,gCAAgC,EAAEvD,cAAc,CAAC;EAC1E,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpBnB,SAAS,CAAC,MAAM;IACZ4D,YAAY,CAACc,OAAO,CAAC,6BAA6B,EAAEpD,WAAW,CAAC;EACpE,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,MAAMsD,WAAW,GAAGA,CAAA,KAAM;IACtB;IACAnB,gBAAgB,CAAC/C,YAAY,CAACC,aAAa,CAAC;IAC5CmD,aAAa,CAACpD,YAAY,CAACE,UAAU,CAAC;IACtCoD,cAAc,CAACtD,YAAY,CAACG,WAAW,CAAC;IACxCoD,eAAe,CAACvD,YAAY,CAACI,YAAY,CAAC;IAC1CoD,aAAa,CAACxD,YAAY,CAACK,UAAU,CAAC;IACtCoD,iBAAiB,CAACzD,YAAY,CAACM,cAAc,CAAC;IAC9CoD,eAAe,CAAC1D,YAAY,CAACO,YAAY,CAAC;IAC1CoD,gBAAgB,CAAC3D,YAAY,CAACQ,aAAa,CAAC;IAC5CoD,iBAAiB,CAAC5D,YAAY,CAACS,cAAc,CAAC;IAC9CoD,aAAa,CAAC7D,YAAY,CAACU,UAAU,CAAC;IACtCoD,iBAAiB,CAAC9D,YAAY,CAACW,cAAc,CAAC;IAC9CoD,cAAc,CAAC/D,YAAY,CAACY,WAAW,CAAC;;IAExC;IACAsC,YAAY,CAACiB,UAAU,CAAC,+BAA+B,CAAC;IACxDjB,YAAY,CAACiB,UAAU,CAAC,4BAA4B,CAAC;IACrDjB,YAAY,CAACiB,UAAU,CAAC,6BAA6B,CAAC;IACtDjB,YAAY,CAACiB,UAAU,CAAC,8BAA8B,CAAC;IACvDjB,YAAY,CAACiB,UAAU,CAAC,4BAA4B,CAAC;IACrDjB,YAAY,CAACiB,UAAU,CAAC,8BAA8B,CAAC;IACvDjB,YAAY,CAACiB,UAAU,CAAC,+BAA+B,CAAC;IACxDjB,YAAY,CAACiB,UAAU,CAAC,gCAAgC,CAAC;IACzDjB,YAAY,CAACiB,UAAU,CAAC,6BAA6B,CAAC;IACtDjB,YAAY,CAACiB,UAAU,CAAC,6BAA6B,CAAC;EAC1D,CAAC;EAED,IAAIC,SAAS,GAAG,OAAOtE,SAAS,KAAK,UAAU,GAAGA,SAAS,CAAC,CAAC,GAAG,IAAIuE,MAAM,CAAC,cAAc,CAAC;EAC1FD,SAAS,CAACE,WAAW,CAAC,KAAK,CAAC;EAE5BhF,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAACe,UAAU,CAAC,CAAC;EAEjC,MAAMkE,gBAAgB,GAAIC,KAAK,IAAK;IAChC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACF,IAAI,EAAE;IAEX,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;MACnB,MAAMC,OAAO,GAAGD,CAAC,CAACL,MAAM,CAACO,MAAM;MAC/B,IAAIC,QAAQ,GAAGF,OAAO,CAACG,KAAK,CAAC,WAAW,CAAC,CAACvD,MAAM,CAACwD,OAAO,CAAC;MACzD,IAAIC,KAAK,GAAGH,QAAQ,CAACI,GAAG,CAACC,IAAI,IAAI,QAAQ,GAAGA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MAExDzC,gBAAgB,CAACsC,KAAK,CAAC;MACvBjC,aAAa,CAACiC,KAAK,CAACI,MAAM,CAAC;IAC/B,CAAC;IACDb,MAAM,CAACc,UAAU,CAACjB,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMkB,iBAAiB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,GAAG,IAAI,EAAEC,YAAY,KAAK;IACzE,MAAMC,WAAW,GAAG,EAAE;IACtB,IAAID,YAAY,CAACE,MAAM,EAAED,WAAW,CAACE,IAAI,CAAC,QAAQ,CAAC;IACnD,IAAIH,YAAY,CAACI,KAAK,EAAEH,WAAW,CAACE,IAAI,CAAC,OAAO,CAAC;IACjD,IAAIH,YAAY,CAACK,KAAK,EAAEJ,WAAW,CAACE,IAAI,CAAC,OAAO,CAAC;IACjD,IAAIH,YAAY,CAACM,SAAS,EAAEL,WAAW,CAACE,IAAI,CAAC,WAAW,CAAC;IACzD,IAAI;MACJ,MAAMI,eAAe,GAAGN,WAAW,CAACN,MAAM,GAAG,CAAC,GAAI,aAAYM,WAAW,CAACO,IAAI,CAAC,GAAG,CAAE,EAAC,GAAG,EAAE;MAC1F,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAqCZ,QAAS,QAAOC,QAAS,8BAA6BQ,eAAgB,EAAC,CAAC;MAC3I,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjB,OAAOA,IAAI;IACf,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZ1F,eAAe,CAAE,qCAAoCyE,QAAS,GAAE,CAAC;MACjE,OAAO,EAAE;IACb;EACA,CAAC;EAED,MAAMkB,iBAAiB,GAAGA,CAAA,KAAM;IAC5B7F,qBAAqB,CAAC,IAAI,CAAC;EAC/B,CAAC;EACD,MAAM8F,gBAAgB,GAAIC,MAAM,IAAK;IACjC3F,eAAe,CAAC2F,MAAM,CAAC;IACvB/F,qBAAqB,CAAC,KAAK,CAAC;IAC5B;EACJ,CAAC;EAED,MAAMgG,kBAAkB,GAAGA,CAAA,KAAM;IAC7BhG,qBAAqB,CAAC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMiG,kBAAkB,GAAG,MAAAA,CAAOtB,QAAQ,EAAEC,QAAQ,GAAG,IAAI,EAAEC,YAAY,KAAK;IAC1E,MAAMqB,eAAe,GAAG,MAAOC,UAAU,IAAK;MAC1C,IAAI;QACA,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAACY,UAAU,CAAC;QACxC,IAAI,CAACb,QAAQ,CAACc,EAAE,EAAE;UACd,MAAMC,SAAS,GAAG,MAAMf,QAAQ,CAACG,IAAI,CAAC,CAAC;UACvC,MAAM,IAAIa,KAAK,CAAE,wBAAuBhB,QAAQ,CAACiB,UAAW,MAAKF,SAAU,EAAC,CAAC;QACjF;QAEA,MAAMb,IAAI,GAAG,MAAMF,QAAQ,CAACkB,IAAI,CAAC,CAAC;QAClC;QACAd,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjB,MAAMiB,aAAa,GAAGjB,IAAI,CAACpB,KAAK,CAACzD,MAAM,CAAC2D,IAAI,IAAI;UAC5C,IAAGA,IAAI,CAACoC,KAAK,IAAE,OAAO,EAAE,OAAO,KAAK;UACpC,IAAI7B,YAAY,CAACE,MAAM,IAAIT,IAAI,CAACqC,UAAU,KAAK,QAAQ,EAAE,OAAO,IAAI;UACpE,IAAI9B,YAAY,CAACI,KAAK,IAAIX,IAAI,CAACqC,UAAU,KAAK,OAAO,EAAE,OAAO,IAAI;UAClE,IAAI9B,YAAY,CAACK,KAAK,IAAIZ,IAAI,CAACqC,UAAU,KAAK,OAAO,EAAE,OAAO,IAAI;UAClE,IAAI9B,YAAY,CAACM,SAAS,IAAIb,IAAI,CAACqC,UAAU,KAAK,WAAW,EAAE,OAAO,IAAI;UAC1E,OAAO,KAAK;QAChB,CAAC,CAAC;QAEF,OAAOF,aAAa;MACxB,CAAC,CAAC,OAAOb,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACgB,OAAO,CAAC;QAC3D,OAAO,EAAE,CAAC,CAAC;MACf;IACJ,CAAC;IAED,IAAI;MACA,MAAMC,gBAAgB,GAAG,MAAMtB,KAAK,CAAE,oCAAmCZ,QAAS,iBAAgB,CAAC;MACnG,IAAI,CAACkC,gBAAgB,CAACT,EAAE,EAAE;QACtB,MAAMC,SAAS,GAAG,MAAMQ,gBAAgB,CAACpB,IAAI,CAAC,CAAC;QAC/C,MAAM,IAAIa,KAAK,CAAE,4BAA2BO,gBAAgB,CAACN,UAAW,MAAKF,SAAU,EAAC,CAAC;MAC7F;MACA,MAAMS,YAAY,GAAG,MAAMD,gBAAgB,CAACL,IAAI,CAAC,CAAC;MAClD,MAAMO,QAAQ,GAAGD,YAAY,CAACC,QAAQ,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;;MAElD,MAAMC,OAAO,GAAG,EAAE;MAClB,KAAK,IAAId,UAAU,IAAIY,QAAQ,EAAE;QAC7B,IAAIE,OAAO,CAACzC,MAAM,IAAII,QAAQ,EAAE;QAEhC,MAAMR,KAAK,GAAG,MAAM8B,eAAe,CAACC,UAAU,CAAC;QAC/Cc,OAAO,CAACjC,IAAI,CAAC,GAAGZ,KAAK,CAAC;QAEtB,IAAI6C,OAAO,CAACzC,MAAM,IAAII,QAAQ,EAAE;UAC5BqC,OAAO,CAACzC,MAAM,GAAGI,QAAQ,CAAC,CAAC;UAC3B;QACJ;MACJ;MAEA,OAAOqC,OAAO;IAClB,CAAC,CAAC,OAAOrB,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAACgB,OAAO,CAAC;MACpE,MAAMhB,KAAK;IACf;EACJ,CAAC;EAGD,MAAMsB,eAAe,GAAGA,CAAA,KAAM;IAC1B;IACA;IACAxB,OAAO,CAACC,GAAG,CAAE,8BAA6BhF,MAAO,EAAC,CAAC;EACvD,CAAC;EAED,MAAMwG,QAAQ,GAAG;IACb;IACA,IAAI,EAAE,qBAAqB;IAC3B,OAAO,EAAE,WAAW;IACpB,WAAW,EAAE,uBAAuB;IACpC,eAAe,EAAE,yCAAyC;IAC1D,mBAAmB,EAAE,WAAW;IAChC,mBAAmB,EAAE,cAAc;IACnC,uBAAuB,EAAE,4BAA4B;IACrD,uBAAuB,EAAE,qBAAqB;IAC9C,kBAAkB,EAAE,aAAa;IACjC,4BAA4B,EAAE,4BAA4B;IAC1D,gCAAgC,EAAE,4BAA4B;IAC9D,sBAAsB,EAAE,2BAA2B;IACnD,0BAA0B,EAAE,2BAA2B;IACvD,8BAA8B,EAAE,mCAAmC;IACnE,kCAAkC,EAAE,mCAAmC;IACvE,sCAAsC,EAAE,mCAAmC;IAC3E,uDAAuD,EAAE,qCAAqC;IAC9F,2DAA2D,EAAE,4CAA4C;IACzG,cAAc,EAAE,kBAAkB;IAClC,UAAU,EAAE,eAAe;IAC3B,eAAe,EAAE,wBAAwB;IACzC,mBAAmB,EAAE,gDAAgD;IACrE,mBAAmB,EAAE,yCAAyC;IAC9D,aAAa,EAAE,wBAAwB;IACvC,cAAc,EAAE,kBAAkB;IAClC,WAAW,EAAE,aAAa;IAC1B,eAAe,EAAE,iCAAiC;IAClD,kBAAkB,EAAE,+BAA+B;IACnD,kBAAkB,EAAE,sBAAsB;IAC1C,UAAU,EAAE,aAAa;IACzB,oBAAoB,EAAE,4BAA4B;IAElD;IACA,OAAO,EAAE,kBAAkB;IAC3B,WAAW,EAAE,wBAAwB;IACrC,cAAc,EAAE,qCAAqC;IACrD,iBAAiB,EAAE,iCAAiC;IACpD,2BAA2B,EAAE,4CAA4C;IACzE,mCAAmC,EAAE,6BAA6B;IAClE,cAAc,EAAE,4BAA4B;IAC5C,+BAA+B,EAAE,uCAAuC;IACxE,8BAA8B,EAAE,iCAAiC;IACjE,eAAe,EAAE,0BAA0B;IAC3C,kBAAkB,EAAE,wBAAwB;IAC5C,4BAA4B,EAAE,sCAAsC;IACpE,+BAA+B,EAAE,oDAAoD;IACrF,sCAAsC,EAAE,2CAA2C;IACnF,0CAA0C,EAAE,sCAAsC;IAElF;IACA,OAAO,EAAE,gBAAgB;IACzB,UAAU,EAAE,mCAAmC;IAC/C,aAAa,EAAE,yBAAyB;IACxC,gBAAgB,EAAE,mCAAmC;IACrD,iBAAiB,EAAE,0BAA0B;IAC7C,iBAAiB,EAAE,2BAA2B;IAC9C,qBAAqB,EAAE,mCAAmC;IAC1D,qBAAqB,EAAE,yBAAyB;IAChD,2BAA2B,EAAE,oCAAoC;IACjE,2BAA2B,EAAE,gDAAgD;IAC7E,mBAAmB,EAAE,mCAAmC;IACxD,iBAAiB,EAAE,6BAA6B;IAEhD;IACA,OAAO,EAAE,mBAAmB;IAC5B,aAAa,EAAE,8BAA8B;IAC7C,iBAAiB,EAAE,4BAA4B;IAC/C,iBAAiB,EAAE,6BAA6B;IAChD,kBAAkB,EAAE,6BAA6B;IACjD,gBAAgB,EAAE,sCAAsC;IACxD,0BAA0B,EAAE,2CAA2C;IACvE,2BAA2B,EAAE,wCAAwC;IACrE,+BAA+B,EAAE,yCAAyC;IAC1E,+BAA+B,EAAE,qCAAqC;IACtE,wCAAwC,EAAE,sCAAsC;IAEhF;IACA,IAAI,EAAE,sBAAsB;IAC5B,UAAU,EAAE,gBAAgB;IAC5B,aAAa,EAAE,cAAc;IAC7B,aAAa,EAAE,yBAAyB;IACxC,eAAe,EAAE,yBAAyB;IAC1C,qBAAqB,EAAE,yBAAyB;IAChD,yBAAyB,EAAE,2CAA2C;IACtE,6BAA6B,EAAE,sDAAsD;IACrF,4BAA4B,EAAE,2DAA2D;IACzF,iBAAiB,EAAE,0CAA0C;IAC7D,qBAAqB,EAAE,qDAAqD;IAC5E,oBAAoB,EAAE,kBAAkB;IACxC,oBAAoB,EAAE,oCAAoC;IAC1D,8BAA8B,EAAE,uCAAuC;IACvE,sCAAsC,EAAE,6BAA6B;IACrE,yBAAyB,EAAE,gCAAgC;IAC3D,6BAA6B,EAAE,gCAAgC;IAC/D,iCAAiC,EAAE,0CAA0C;IAE7E;IACA,QAAQ,EAAE,aAAa;IACvB,cAAc,EAAE,uBAAuB;IACvC,sBAAsB,EAAE,mCAAmC;IAC3D,4BAA4B,EAAE,kCAAkC;IAChE,oCAAoC,EAAE,sCAAsC;IAC5E,+BAA+B,EAAE,2CAA2C;IAC5E,gCAAgC,EAAE,2CAA2C;IAC7E,oCAAoC,EAAE,6DAA6D;IACnG,wCAAwC,EAAE,6DAA6D;IACvG,2CAA2C,EAAE,6DAA6D;IAC1G,+CAA+C,EAAE,oEAAoE;IACrH,mDAAmD,EAAE,sEAAsE;IAC3H,oDAAoD,EAAE,uEAAuE;IAE7H;IACA,cAAc,EAAE,aAAa;IAC7B,kBAAkB,EAAE,sBAAsB;IAC1C,sBAAsB,EAAE,iCAAiC;IACzD,0BAA0B,EAAE,uDAAuD;IACnF,yBAAyB,EAAE,kCAAkC;IAC7D,6BAA6B,EAAE,2CAA2C;IAC1E,0BAA0B,EAAE,yCAAyC;IACrE,yBAAyB,EAAE,iDAAiD;IAE5E;IACA,sBAAsB,EAAE,2BAA2B;IACnD,0BAA0B,EAAE,2BAA2B;IACvD,8BAA8B,EAAE,mBAAmB;IACnD,kCAAkC,EAAE,mBAAmB;IACvD,sCAAsC,EAAE,mCAAmC;IAC3E,0CAA0C,EAAE,mCAAmC;IAE/E;IACA,IAAI,EAAE,iBAAiB;IACvB,OAAO,EAAE,oCAAoC;IAC7C,eAAe,EAAE,+BAA+B;IAChD,eAAe,EAAE,8BAA8B;IAC/C,UAAU,EAAE,mCAAmC;IAE/C;IACA,KAAK,EAAE,cAAc;IACrB,IAAI,EAAE,2BAA2B;IACjC,OAAO,EAAE,eAAe;IACxB,IAAI,EAAE,gBAAgB;IACtB,IAAI,EAAE,2BAA2B;IACjC;IACJ,OAAO,EAAE,WAAW;IACpB,OAAO,EAAE,kBAAkB;IAC3B,OAAO,EAAE,gBAAgB;IACzB,OAAO,EAAE,mBAAmB;IAC5B,OAAO,EAAE,cAAc;IACvB,OAAO,EAAE,sBAAsB;IAC/B,QAAQ,EAAE,oBAAoB;IAC9B,OAAO,EAAE,gBAAgB;IACzB,OAAO,EAAE,gBAAgB;IACzB,QAAQ,EAAE,qBAAqB;IAC/B,OAAO,EAAE,gBAAgB;IACzB,WAAW,EAAE,uBAAuB;IACpC,WAAW,EAAE,aAAa;IAC1B,UAAU,EAAE,eAAe;IAC3B,UAAU,EAAE,aAAa;IACzB,eAAe,EAAE,yCAAyC;IAC1D,mBAAmB,EAAE,WAAW;IAChC,mBAAmB,EAAE,cAAc;IACnC,uBAAuB,EAAE,4BAA4B;IACrD,uBAAuB,EAAE,qBAAqB;IAC9C,kBAAkB,EAAE,aAAa;IACjC,4BAA4B,EAAE,4BAA4B;IAC1D,gCAAgC,EAAE,4BAA4B;IAC9D,sBAAsB,EAAE,2BAA2B;IACnD,0BAA0B,EAAE,2BAA2B;IACvD,8BAA8B,EAAE,mCAAmC;IACnE,kCAAkC,EAAE,mCAAmC;IACvE,cAAc,EAAE,kBAAkB;IAClC,UAAU,EAAE,eAAe;IAC3B,eAAe,EAAE,wBAAwB;IACzC,aAAa,EAAE,wBAAwB;IACvC,WAAW,EAAE,aAAa;IAC1B,eAAe,EAAE,iCAAiC;IAClD,kBAAkB,EAAE,+BAA+B;IACnD,UAAU,EAAE,sBAAsB;IAClC,UAAU,EAAE,aAAa;IACzB,oBAAoB,EAAE,4BAA4B;IAElD;IACA,OAAO,EAAE,kBAAkB;IAC3B,WAAW,EAAE,wBAAwB;IACrC,UAAU,EAAE,oCAAoC;IAChD,UAAU,EAAE,sCAAsC;IAClD,WAAW,EAAE,0BAA0B;IACvC,UAAU,EAAE,qCAAqC;IACjD,UAAU,EAAE,gDAAgD;IAC5D,UAAU,EAAE,wCAAwC;IACpD,UAAU,EAAE,wCAAwC;IAEpD;IACA,OAAO,EAAE,gBAAgB;IACzB,UAAU,EAAE,mCAAmC;IAC/C,UAAU,EAAE,sCAAsC;IAClD,UAAU,EAAE,oCAAoC;IAChD,WAAW,EAAE,6BAA6B;IAC1C,aAAa,EAAE,2BAA2B;IAC1C,gBAAgB,EAAE,mCAAmC;IACrD,iBAAiB,EAAE,0BAA0B;IAC7C,iBAAiB,EAAE,2BAA2B;IAC9C,iBAAiB,EAAE,6BAA6B;IAChD,2BAA2B,EAAE,oCAAoC;IAEjE;IACA,OAAO,EAAE,mBAAmB;IAC5B,UAAU,EAAE,8BAA8B;IAC1C,UAAU,EAAE,2CAA2C;IACvD,WAAW,EAAE,gCAAgC;IAC7C,UAAU,EAAE,yCAAyC;IACrD,UAAU,EAAE,yCAAyC;IAErD;IACA,OAAO,EAAE,cAAc;IACvB,OAAO,EAAE,gBAAgB;IACzB,UAAU,EAAE,cAAc;IAC1B,UAAU,EAAE,gBAAgB;IAC5B,cAAc,EAAE,yBAAyB;IACzC,cAAc,EAAE,kCAAkC;IAElD;IACA,OAAO,EAAE,sBAAsB;IAC/B,YAAY,EAAE,iCAAiC;IAC/C,WAAW,EAAE,8BAA8B;IAE3C;IACA,QAAQ,EAAE,oBAAoB;IAC9B,WAAW,EAAE,qCAAqC;IAClD,WAAW,EAAE,0CAA0C;IAEvD;IACA,QAAQ,EAAE,qBAAqB;IAC/B,WAAW,EAAE,gCAAgC;IAE7C;IACA,OAAO,EAAE,eAAe;IACxB,OAAO,EAAE,oBAAoB;IAC7B,OAAO,EAAE,yBAAyB;IAClC,QAAQ,EAAE,aAAa;IACvB,UAAU,EAAE,gBAAgB;IAC5B,WAAW,EAAE,eAAe;IAC5B,YAAY,EAAE,sBAAsB;IACpC,OAAO,EAAE,eAAe;IACxB,OAAO,EAAE,gBAAgB;IACzB,QAAQ,EAAE,kBAAkB;IAC5B,OAAO,EAAE,oBAAoB;IAC7B,OAAO,EAAE,iBAAiB;IAC1B,OAAO,EAAE,gBAAgB;IACzB,WAAW,EAAE,aAAa;IAC1B,UAAU,EAAE,eAAe;IAE3B;IACA,IAAI,EAAE,iBAAiB;IACvB,OAAO,EAAE,wCAAwC;IACjD,OAAO,EAAE,oCAAoC;IAC7C,QAAQ,EAAE,+BAA+B;IACzC,OAAO,EAAE,mCAAmC;IAE5C;IACA,KAAK,EAAE,cAAc;IACrB,QAAQ,EAAE,yBAAyB;IACnC,QAAQ,EAAE,0BAA0B;IACpC,WAAW,EAAE,oCAAoC;IACjD,uBAAuB,EAAE,4BAA4B;IACrD,2CAA2C,EAAE,oBAAoB;IACjE,wBAAwB,EAAE,iBAAiB;IAC3C,IAAI,EAAE,2BAA2B;IACjC,IAAI,EAAE,2BAA2B;IACjC,IAAI,EAAE,gBAAgB;IACtB,OAAO,EAAE,iCAAiC;IAC1C,OAAO,EAAE,eAAe;IACxB,IAAI,EAAE,gBAAgB;IACtB,OAAO,EAAE,oCAAoC;IAC7C,IAAI,EAAE,uBAAuB;IAC7B,IAAI,EAAE,qBAAqB;IAC3B,IAAI,EAAE,iBAAiB;IACvB,IAAI,EAAE,iBAAiB;IACvB,IAAI,EAAE,gBAAgB;IACtB,IAAI,EAAE,mBAAmB;IACzB,KAAK,EAAE,kBAAkB;IACzB,IAAI,EAAE,eAAe;IACrB,KAAK,EAAE,eAAe;IACtB,KAAK,EAAE,cAAc;IACrB,IAAI,EAAE,uBAAuB;IAC7B,IAAI,EAAE,gBAAgB;IACtB,IAAI,EAAE;EACN,CAAC;EAED,MAAMC,aAAa,GAAIC,KAAK,IAAK;IAC7B,MAAMC,aAAa,GAAGD,KAAK,CAAChC,IAAI,CAAC,GAAG,CAAC;IACrC,KAAK,MAAMkC,OAAO,IAAIJ,QAAQ,EAAE;MAC5B,IAAIG,aAAa,CAACE,UAAU,CAACD,OAAO,CAAC,EAAE;QACnC,OAAOJ,QAAQ,CAACI,OAAO,CAAC;MAC5B;IACJ;IACA,OAAO,iBAAiB,CAAC,CAAC;EAC9B,CAAC;EAED,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B7E,aAAa,CAAC,IAAI,CAAC;IACnB,IAAIwB,KAAK,GAAG,EAAE;IACd,MAAM;MAAEQ,QAAQ;MAAEC;IAAa,CAAC,GAAG1E,YAAY,IAAI;MAAEyE,QAAQ,EAAE,IAAI;MAAEC,YAAY,EAAE;QAAEE,MAAM,EAAE,IAAI;QAAEE,KAAK,EAAE,IAAI;QAAEC,KAAK,EAAE,IAAI;QAAEC,SAAS,EAAE;MAAK;IAAE,CAAC;IAEhJ,IAAIxF,WAAW,KAAK,SAAS,EAAE;MAC3B,MAAM6F,IAAI,GAAG,MAAMd,iBAAiB,CAACpF,YAAY,EAAEsF,QAAQ,EAAEC,YAAY,CAAC;MAC1E,IAAIZ,QAAQ,GAAGuB,IAAI,CAACtB,KAAK,CAAC,WAAW,CAAC,CAACvD,MAAM,CAACwD,OAAO,CAAC;MACtDC,KAAK,GAAGH,QAAQ,CAACI,GAAG,CAACC,IAAI,IAAI,QAAQ,GAAGA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;IACxD,CAAC,MAAM,IAAI5E,WAAW,KAAK,UAAU,EAAE;MACnC,MAAM6F,IAAI,GAAG,MAAMS,kBAAkB,CAAC3G,YAAY,EAAEsF,QAAQ,EAAEC,YAAY,CAAC;MAC3ET,KAAK,GAAGoB,IAAI,CAACnB,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACoD,GAAG,CAAC;IACtC,CAAC,MAAM;MACHtD,KAAK,GAAGpF,aAAa;IACzB;IACAmD,aAAa,CAACiC,KAAK,CAACI,MAAM,CAAC;IAE3BmD,YAAY,CAACvD,KAAK,CAAC;EAEvB,CAAC;EAKD,MAAMuD,YAAY,GAAIvD,KAAK,IAAK;IAC5BsB,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IACd,MAAMiC,SAAS,GAAG,EAAE;IACpB,MAAMC,QAAQ,GAAG,EAAE;IACnB,MAAMC,SAAS,GAAG,EAAE;IACpB,MAAMC,SAAS,GAAG,EAAE;IACpB,MAAMC,UAAU,GAAG,EAAE;IACrB,MAAMC,QAAQ,GAAG,EAAE;IACnB,MAAMC,YAAY,GAAG,EAAE;IACvB,MAAMC,YAAY,GAAG,EAAE;IACvB,MAAMC,WAAW,GAAG,EAAE;IACtB,MAAMC,eAAe,GAAG,EAAE;IAC1B,MAAMC,SAAS,GAAG,EAAE;IACpB,MAAMC,OAAO,GAAG,EAAE;IAClB,MAAMC,KAAK,GAAG,IAAIjK,KAAK,CAAC,CAAC;IACzBmH,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IACd,MAAM8C,cAAc,GAAGtI,YAAY,GAAGA,YAAY,CAACsI,cAAc,GAAG,GAAG,CAAC,CAAC;;IAGzErE,KAAK,CAACsE,OAAO,CAAC,CAACpE,IAAI,EAAEqE,KAAK,KAAK;MAC3B,IAAIrE,IAAI,EAAC;QACTkE,KAAK,CAACI,OAAO,CAACtE,IAAI,CAAC;QACnBkE,KAAK,CAACK,cAAc,CAAC,CAAC;QACtB,IAAIxB,KAAK,GAAGmB,KAAK,CAACM,OAAO,CAAC,CAAC;QAC3BR,SAAS,CAACtD,IAAI,CAACqC,KAAK,CAAC;QAErB,MAAM0B,OAAO,GAAG,EAAE;QAClB,IAAIC,QAAQ,GAAGC,MAAM,CAAC5B,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;QACrC0B,OAAO,CAAC/D,IAAI,CAACgE,QAAQ,CAAC;QAEtBT,OAAO,CAACvD,IAAI,CAACwD,KAAK,CAACd,GAAG,CAAC,CAAC,CAAC;QACzBE,SAAS,CAAC5C,IAAI,CAACwD,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACvCrB,QAAQ,CAAC7C,IAAI,CAACwD,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACrCpB,SAAS,CAAC9C,IAAI,CAACwD,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACvCnB,SAAS,CAAC/C,IAAI,CAACwD,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACvClB,UAAU,CAAChD,IAAI,CAACwD,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QACzCjB,QAAQ,CAACjD,IAAI,CAACwD,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACrChB,YAAY,CAAClD,IAAI,CAACwD,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;QAC7Cf,YAAY,CAACnD,IAAI,CAACwD,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;QAE7C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,IAAIA,CAAC,GAAG9B,KAAK,CAAC7C,MAAM,EAAE2E,CAAC,EAAE,EAAE;UAC7CH,QAAQ,IAAIC,MAAM,CAAC5B,KAAK,CAAC8B,CAAC,CAAC,CAAC,GAAG,GAAG;UAClCJ,OAAO,CAAC/D,IAAI,CAACgE,QAAQ,CAAC;QAC1B;QACAZ,WAAW,CAACpD,IAAI,CAAC+D,OAAO,CAAC;MAC7B;MAAC;IACL,CAAC,CAAC;IAEExG,aAAa,CAACgG,OAAO,CAAC,CAAC,CAAC;;IAExB,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC1Bf,eAAe,CAACrD,IAAI,CAAC,MAAM,GAAGiE,MAAM,CAACG,CAAC,CAAC,CAAC;IAC5C;IACA1D,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IAEd,MAAM0D,SAAS,GAAGjB,WAAW,CAAC/D,GAAG,CAAC,CAACiF,GAAG,EAAEX,KAAK,MAAM;MAC/C,GAAGW,GAAG,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,EAAEN,CAAC,MAAM;QAAE,GAAGK,GAAG;QAAE,CAACnB,eAAe,CAACc,CAAC,CAAC,GAAGM;MAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC3EC,KAAK,EAAE9B,SAAS,CAACe,KAAK,CAAC;MACvBgB,IAAI,EAAE9B,QAAQ,CAACc,KAAK,CAAC;MACrBiB,KAAK,EAAE9B,SAAS,CAACa,KAAK,CAAC;MACvBkB,KAAK,EAAE9B,SAAS,CAACY,KAAK,CAAC;MACvBmB,YAAY,EAAE9B,UAAU,CAACW,KAAK,CAAC,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC;MACjDoB,IAAI,EAAE9B,QAAQ,CAACU,KAAK,CAAC;MACrBqB,QAAQ,EAAE9B,YAAY,CAACS,KAAK,CAAC;MAC7BsB,QAAQ,EAAE9B,YAAY,CAACQ,KAAK,CAAC;MAC7BuB,GAAG,EAAE3B,OAAO,CAACI,KAAK,CAAC;MACnBwB,MAAM,EAAExB;IACZ,CAAC,CAAC,CAAC;IACHjD,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBD,OAAO,CAACC,GAAG,CAAC0D,SAAS,CAAC;IACtB3D,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IAEd,MAAMyE,UAAU,GAAGf,SAAS,CAAC1I,MAAM,CAAC2I,GAAG,IAAIA,GAAG,CAAC/J,aAAa,CAAC,KAAKD,YAAY,CAAC;IAE/E,MAAM+K,SAAS,GAAGD,UAAU,CAACb,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAK;MAC9CE,GAAG,CAACF,GAAG,CAACgB,KAAK,CAAC,GAAG,CAACd,GAAG,CAACF,GAAG,CAACgB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;MAC1C,OAAOd,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;IACN,MAAM3I,UAAU,GAAGuJ,UAAU,CAAC5F,MAAM;IAEpC4F,UAAU,CAAC1B,OAAO,CAACY,GAAG,IAAI;MACtBA,GAAG,CAACiB,gBAAgB,GAAGF,SAAS,CAACf,GAAG,CAACgB,KAAK,CAAC,GAAGzJ,UAAU;IAC5D,CAAC,CAAC;IAEF,KAAK,IAAIsI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MACzBiB,UAAU,CAAC1B,OAAO,CAACY,GAAG,IAAI;QACtBA,GAAG,CAAE,cAAaH,CAAC,GAAG,CAAE,EAAC,CAAC,GAAGG,GAAG,CAACQ,YAAY;MACjD,CAAC,CAAC;MAEF,MAAMU,QAAQ,GAAGJ,UAAU,CAACb,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAK;QAC7C,MAAMmB,GAAG,GAAI,GAAEnB,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAE,IAAGG,GAAG,CAAE,OAAMH,CAAC,GAAG,CAAE,EAAC,CAAE,EAAC;QACvDK,GAAG,CAACiB,GAAG,CAAC,GAAG,CAACjB,GAAG,CAACiB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QAC9B,OAAOjB,GAAG;MACd,CAAC,EAAE,CAAC,CAAC,CAAC;MAEN,MAAMkB,SAAS,GAAGN,UAAU,CAACb,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAK;QAC9CE,GAAG,CAACF,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAC,CAAC,GAAG,CAACK,GAAG,CAACF,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;QACtD,OAAOK,GAAG;MACd,CAAC,EAAE,CAAC,CAAC,CAAC;MAENY,UAAU,CAAC1B,OAAO,CAACY,GAAG,IAAI;QACtB,MAAMmB,GAAG,GAAI,GAAEnB,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAE,IAAGG,GAAG,CAAE,OAAMH,CAAC,GAAG,CAAE,EAAC,CAAE,EAAC;QACvDG,GAAG,CAAE,kBAAiBH,CAAC,GAAG,CAAE,EAAC,CAAC,GAAGqB,QAAQ,CAACC,GAAG,CAAC,GAAGC,SAAS,CAACpB,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAC,CAAC;MAC/E,CAAC,CAAC;IACN;IACAzD,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzBD,OAAO,CAACC,GAAG,CAACyE,UAAU,CAAC;IAEvBA,UAAU,CAAC1B,OAAO,CAACY,GAAG,IAAI;MACtB,IAAIqB,EAAE,GAAG,CAAC;MACV,IAAIC,EAAE,GAAG,CAAC;MACV,KAAK,IAAIzB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC1B,IAAIA,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;UACbwB,EAAE,IAAIrB,GAAG,CAAE,kBAAiBH,CAAE,EAAC,CAAC,IAAI,CAAC;QACzC,CAAC,MAAM;UACHyB,EAAE,IAAItB,GAAG,CAAE,kBAAiBH,CAAE,EAAC,CAAC,IAAI,CAAC;QACzC;QACAG,GAAG,CAAE,qBAAoBH,CAAE,EAAC,CAAC,GAAGwB,EAAE;QAClCrB,GAAG,CAAE,qBAAoBH,CAAE,EAAC,CAAC,GAAGyB,EAAE;MACtC;IACJ,CAAC,CAAC;IACFlF,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzBD,OAAO,CAACC,GAAG,CAACyE,UAAU,CAAC;IACvB1E,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IAEd,MAAMkF,MAAM,GAAG,EAAE;IACjBT,UAAU,CAAC1B,OAAO,CAACY,GAAG,IAAI;MACtB,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC1B0B,MAAM,CAAC7F,IAAI,CAAC;UACRmF,MAAM,EAAEb,GAAG,CAACa,MAAM;UAClBW,GAAG,EAAE3B,CAAC;UACN4B,IAAI,EAAEzB,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAC;UACrB6B,IAAI,EAAE1B,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAC;UACrB8B,WAAW,EAAE3B,GAAG,CAAE,cAAaH,CAAE,EAAC,CAAC;UACnC+B,eAAe,EAAE5B,GAAG,CAAE,kBAAiBH,CAAE,EAAC,CAAC;UAC3CgC,gBAAgB,EAAE7B,GAAG,CAAE,qBAAoBH,CAAE,EAAC,CAAC;UAC/CiC,gBAAgB,EAAE9B,GAAG,CAAE,qBAAoBH,CAAE,EAAC,CAAC;UAC/Ce,GAAG,EAAEZ,GAAG,CAACY;QACb,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;IACFxE,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrBD,OAAO,CAACC,GAAG,CAACkF,MAAM,CAAC;;IAEnB;IACA,MAAMQ,UAAU,GAAGR,MAAM,CAACtB,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAK;MAC3CE,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,GAAG,CAACvB,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;MACxC,OAAOvB,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;IAENqB,MAAM,CAACnC,OAAO,CAACY,GAAG,IAAI;MAClBA,GAAG,CAAC,QAAQ,CAAC,GAAG+B,UAAU,CAAC/B,GAAG,CAACyB,IAAI,CAAC;IACxC,CAAC,CAAC;IACF,MAAMO,eAAe,GAAGT,MAAM,CAAClK,MAAM,CAAC2I,GAAG,IACpC/J,aAAa,KAAK,OAAO,IAAI+J,GAAG,CAAC8B,gBAAgB,GAAG3C,cAAc,IAClElJ,aAAa,KAAK,OAAO,IAAI+J,GAAG,CAAC6B,gBAAgB,GAAG1C,cACzD,CAAC;;IAED;IACA;IACA,IAAI8C,QAAQ,GAAG,CAAC,CAAC,CAAC;IAClB,IAAI/L,cAAc,KAAK,cAAc,EAAE;MACnC+L,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAAC5K,UAAU,GAAG,EAAE,CAAC;IACzC,CAAC,MAAM,IAAIrB,cAAc,KAAK,aAAa,EAAE;MACzC+L,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAAC5K,UAAU,GAAG,EAAE,CAAC;IACzC;IACA6E,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvBD,OAAO,CAACC,GAAG,CAAC4F,QAAQ,CAAC;;IAErB;IACA,MAAMG,sBAAsB,GAAGJ,eAAe,CAAC3K,MAAM,CAAC2I,GAAG,IAAIA,GAAG,CAACyB,IAAI,KAAKY,SAAS,IAAIrC,GAAG,CAAC,QAAQ,CAAC,GAAGiC,QAAQ,CAAC;IAChH7F,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrCD,OAAO,CAACC,GAAG,CAAC+F,sBAAsB,CAAC;IACnC,MAAME,cAAc,GAAGF,sBAAsB,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACjB,GAAG,GAAGgB,CAAC,CAAChB,GAAG,CAAC;IAC3EpF,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BD,OAAO,CAACC,GAAG,CAACiG,cAAc,CAAC;IAE3B,MAAMI,gBAAgB,GAAGN,sBAAsB,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAChB,IAAI,CAACvG,MAAM,GAAGsH,CAAC,CAACf,IAAI,CAACvG,MAAM,CAAC;IAC7FkB,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BD,OAAO,CAACC,GAAG,CAACqG,gBAAgB,CAAC;;IAE7B;IACA,IAAIC,cAAc,GAAG,IAAI;;IAEzB;IACA,MAAMC,eAAe,GAAGF,gBAAgB,CAACrL,MAAM,CAAC2I,GAAG,IAAI;MACnD,IAAG2C,cAAc,CAACE,QAAQ,CAAE,IAAI,GAAC7C,GAAG,CAACyB,IAAI,CAAC,EAAC;QACvCkB,cAAc,IAAI3C,GAAG,CAACyB,IAAI;QAC1BkB,cAAc,IAAI,IAAI;QACtB,OAAO,KAAK;MAAC,CAAC,MACd;QACAA,cAAc,IAAI3C,GAAG,CAACyB,IAAI;QAC1BkB,cAAc,IAAI,IAAI;QACtB,OAAO,IAAI;MACf;IACJ,CAAC,CAAC;IACFvG,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IAEdD,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9BD,OAAO,CAACC,GAAG,CAACuG,eAAe,CAAC;IAE5B,MAAME,aAAa,GAAGF,eAAe,CAAC3C,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAK;MACvD,IAAI,CAACE,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,EAAE;QAChBvB,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,GAAG;UACZA,IAAI,EAAEzB,GAAG,CAACyB,IAAI;UACdC,IAAI,EAAE,CAACqB,KAAK,CAAC/C,GAAG,CAAC0B,IAAI,CAAC,GAAG1B,GAAG,CAAC0B,IAAI,GAAG,CAACsB,QAAQ;UAC7CxB,GAAG,EAAExB,GAAG,CAACwB,GAAG;UACZG,WAAW,EAAE3B,GAAG,CAAC2B,WAAW;UAC5BG,gBAAgB,EAAE9B,GAAG,CAAC8B,gBAAgB;UACtCD,gBAAgB,EAAE7B,GAAG,CAAC6B,gBAAgB;UACtChB,MAAM,EAAEb,GAAG,CAACa,MAAM;UAClBoC,OAAO,EAAE,CAACjD,GAAG,CAACa,MAAM;QACxB,CAAC;MACL,CAAC,MAAM;QACHX,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACC,IAAI,GAAGQ,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACC,IAAI,EAAE,CAACqB,KAAK,CAAC/C,GAAG,CAAC0B,IAAI,CAAC,GAAG1B,GAAG,CAAC0B,IAAI,GAAG,CAACsB,QAAQ,CAAC;QAC1F9C,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACD,GAAG,GAAGU,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACD,GAAG,EAAExB,GAAG,CAACwB,GAAG,CAAC;QACxDtB,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACE,WAAW,GAAGO,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACE,WAAW,EAAE3B,GAAG,CAAC2B,WAAW,CAAC;QAChFzB,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACK,gBAAgB,GAAGI,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACK,gBAAgB,EAAE9B,GAAG,CAAC8B,gBAAgB,CAAC;QAC/F5B,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACI,gBAAgB,GAAGK,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACI,gBAAgB,EAAE7B,GAAG,CAAC6B,gBAAgB,CAAC;QAC/F3B,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACZ,MAAM,GAAGqB,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACZ,MAAM,EAAEb,GAAG,CAACa,MAAM,CAAC;QACjEX,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACwB,OAAO,CAACvH,IAAI,CAACsE,GAAG,CAACa,MAAM,CAAC;MAC1C;MACA,OAAOX,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEN;IACAiD,MAAM,CAACC,MAAM,CAACN,aAAa,CAAC,CAAC1D,OAAO,CAACY,GAAG,IAAI;MACxC,IAAIA,GAAG,CAAC0B,IAAI,KAAK,CAACsB,QAAQ,EAAE;QACxBhD,GAAG,CAAC0B,IAAI,GAAG2B,GAAG;MAClB;IACJ,CAAC,CAAC;IACFjH,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5BD,OAAO,CAACC,GAAG,CAACyG,aAAa,CAAC;;IAE1B;IACA,MAAMQ,aAAa,GAAGH,MAAM,CAACC,MAAM,CAACN,aAAa,CAAC;IAClD,MAAMS,YAAY,GAAGD,aAAa,CAACf,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC9C,IAAIxM,aAAa,KAAK,OAAO,EAAE;QAC3B,OAAOwM,CAAC,CAACf,IAAI,GAAGc,CAAC,CAACd,IAAI;MAC1B,CAAC,MAAM;QACH,OAAOc,CAAC,CAACd,IAAI,GAAGe,CAAC,CAACf,IAAI;MAC1B;IACJ,CAAC,CAAC;;IAEF;IACA6B,YAAY,CAACnE,OAAO,CAACY,GAAG,IAAI;MACxB,IAAI/J,aAAa,KAAK,OAAO,EAAE;QAC3B+J,GAAG,CAACwD,eAAe,GAAGxD,GAAG,CAAC8B,gBAAgB;QAC1C,OAAO9B,GAAG,CAAC6B,gBAAgB;QAC3B,OAAO7B,GAAG,CAAC8B,gBAAgB;MAC/B,CAAC,MAAM;QACH9B,GAAG,CAACwD,eAAe,GAAGxD,GAAG,CAAC6B,gBAAgB;QAC1C,OAAO7B,GAAG,CAAC8B,gBAAgB;QAC3B,OAAO9B,GAAG,CAAC6B,gBAAgB;MAC/B;IACJ,CAAC,CAAC;IAEFzF,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BD,OAAO,CAACC,GAAG,CAACkH,YAAY,CAAC;IAEzB,MAAME,gBAAgB,GAAGC,eAAe,CAACH,YAAY,EAAEtN,aAAa,CAAC;IACrE+C,eAAe,CAACyK,gBAAgB,CAAC;IAEjC,MAAM7N,WAAW,GAAG+N,eAAe,CAAC3E,SAAS,CAAC;IAC9CjG,cAAc,CAACnD,WAAW,CAAC;IAE3BgO,wBAAwB,CAACL,YAAY,EAAEtE,OAAO,CAAC,CAAC,CAAC;EACrD,CAAC;EAED,MAAM2E,wBAAwB,GAAG,MAAAA,CAAOC,gBAAgB,EAAE5E,OAAO,KAAK;IAClE,MAAMC,KAAK,GAAG,IAAIjK,KAAK,CAAC,CAAC;IACzB,MAAM6O,cAAc,GAAG,EAAE;IACzB,MAAMC,MAAM,GAAG7B,IAAI,CAACgB,GAAG,CAAC,GAAGW,gBAAgB,CAAC9I,GAAG,CAACiF,GAAG,IAAIA,GAAG,CAACwB,GAAG,CAAC,CAAC;IAChEpF,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrBD,OAAO,CAACC,GAAG,CAAC0H,MAAM,CAAC;IAEnB,MAAMC,aAAa,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACJ,gBAAgB,CAAC9I,GAAG,CAACiF,GAAG,IAAIA,GAAG,CAACa,MAAM,CAAC,CAAC,CAAC;IAC3EzE,OAAO,CAACC,GAAG,CAAC2H,aAAa,CAAC;IAC1B,KAAK,IAAIE,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAGjF,OAAO,CAAC/D,MAAM,EAAEgJ,MAAM,EAAE,EAAE;MACpD,IAAIF,aAAa,CAACnB,QAAQ,CAACqB,MAAM,CAAC,EAAE;QAChC,MAAM9F,GAAG,GAAGa,OAAO,CAACiF,MAAM,CAAC,CAAC,CAAC;QAC7BhF,KAAK,CAACI,OAAO,CAAClB,GAAG,CAAC;QAClB,MAAM+F,MAAM,GAAG,IAAIlP,KAAK,CAAC,CAAC;QAC1BkP,MAAM,CAAC7E,OAAO,CAAClB,GAAG,CAAC;QACnB+F,MAAM,CAACC,IAAI,CAAC,0DAA0D,EAAE;UAAEC,eAAe,EAAE;QAAK,CAAC,CAAC;QAClG,MAAMtG,KAAK,GAAGmB,KAAK,CAACM,OAAO,CAAC,CAAC;QAE7B,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkE,MAAM,IAAIlE,CAAC,GAAG9B,KAAK,CAAC7C,MAAM,EAAE2E,CAAC,EAAE,EAAE;UACjDsE,MAAM,CAACG,IAAI,CAACvG,KAAK,CAAC8B,CAAC,CAAC,CAAC;UACrB,MAAM0E,GAAG,GAAGJ,MAAM,CAACI,GAAG,CAAC,CAAC;UACxB,MAAMC,cAAc,GAAG,MAAMC,gBAAgB,CAACF,GAAG,CAAC;UAClD,MAAMtN,UAAU,GAAG4I,CAAC,GAAC,CAAC,IAAE,CAAC,GAACF,MAAM,CAAC+E,UAAU,CAACF,cAAc,CAAC,GAAE,CAAC,CAAE,CAAC,GAAC7E,MAAM,CAAC+E,UAAU,CAACF,cAAc,CAAC,CAAC;UAEpGL,MAAM,CAACQ,UAAU,CAAC1N,UAAU,CAAC;QACjC;QAEA6M,cAAc,CAACpI,IAAI,CAACyI,MAAM,CAAC/F,GAAG,CAAC,CAAC,CAAC;MACrC,CAAC,MAAM;QACH0F,cAAc,CAACpI,IAAI,CAACuD,OAAO,CAACiF,MAAM,CAAC,CAAC;MACxC;IAEJ;IAEAU,qBAAqB,CAACd,cAAc,EAAEC,MAAM,CAAC;EACjD,CAAC;EAED,MAAMa,qBAAqB,GAAGA,CAACC,aAAa,EAAEd,MAAM,KAAK;IACrD,MAAM7E,KAAK,GAAG,IAAIjK,KAAK,CAAC,CAAC;IACzB,MAAM+J,SAAS,GAAG,EAAE;IACpB,MAAMF,WAAW,GAAG,EAAE;IACtB,MAAMR,SAAS,GAAG,EAAE;IACpB,MAAMC,QAAQ,GAAG,EAAE;IACnB,MAAMC,SAAS,GAAG,EAAE;IACpB,MAAMC,SAAS,GAAG,EAAE;IACpB,MAAMC,UAAU,GAAG,EAAE;IACrB,MAAMC,QAAQ,GAAG,EAAE;IACnB,MAAMC,YAAY,GAAG,EAAE;IACvB,MAAMC,YAAY,GAAG,EAAE;IACvB,MAAME,eAAe,GAAG,EAAE;IAC1BG,KAAK,CAACI,OAAO,CAACuF,aAAa,CAAC,CAAC,CAAC,CAAC;IAG/BA,aAAa,CAACzF,OAAO,CAAC,CAAChB,GAAG,EAAEiB,KAAK,KAAK;MAClCjD,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;MAClBD,OAAO,CAACC,GAAG,CAAC+B,GAAG,CAAC;MAChB,IAAG;QACHc,KAAK,CAACI,OAAO,CAAClB,GAAG,CAAC;QAClBhC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;QAChB,IAAI0B,KAAK,GAAGmB,KAAK,CAACM,OAAO,CAAC,CAAC;QAC3BpD,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;QAEhB2C,SAAS,CAACtD,IAAI,CAACqC,KAAK,CAAC;QACrB3B,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;QAChB,MAAMyI,gBAAgB,GAAG5F,KAAK,CAAC6F,WAAW,CAAC,CAAC;QAC5C,MAAMC,QAAQ,GAAGF,gBAAgB,CAAC/J,GAAG,CAACkK,IAAI,IAAIA,IAAI,CAACC,OAAO,CAAC;QAE3D,MAAMzF,OAAO,GAAG,EAAE;QAClB,IAAIC,QAAQ,GAAGC,MAAM,CAAC5B,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;QACrC0B,OAAO,CAAC/D,IAAI,CAACgE,QAAQ,CAAC;QACtBD,OAAO,CAAC/D,IAAI,CAACgJ,UAAU,CAACM,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAErC1G,SAAS,CAAC5C,IAAI,CAACwD,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACvCrB,QAAQ,CAAC7C,IAAI,CAACwD,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACrCpB,SAAS,CAAC9C,IAAI,CAACwD,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACvCnB,SAAS,CAAC/C,IAAI,CAACwD,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QACvClB,UAAU,CAAChD,IAAI,CAACwD,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QACzCjB,QAAQ,CAACjD,IAAI,CAACwD,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACrChB,YAAY,CAAClD,IAAI,CAACwD,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;QAC7Cf,YAAY,CAACnD,IAAI,CAACwD,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;QAE7C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkE,MAAM,IAAIlE,CAAC,GAAG9B,KAAK,CAAC7C,MAAM,EAAE2E,CAAC,EAAE,EAAE;UACjDH,QAAQ,IAAIC,MAAM,CAAC5B,KAAK,CAAC8B,CAAC,CAAC,CAAC,GAAG,GAAG;UAClCJ,OAAO,CAAC/D,IAAI,CAACgE,QAAQ,CAAC;UACtBD,OAAO,CAAC/D,IAAI,CAACgJ,UAAU,CAACM,QAAQ,CAACnF,CAAC,CAAC,CAAC,CAAC;QACzC;QACAf,WAAW,CAACpD,IAAI,CAAC+D,OAAO,CAAC;MAC7B,CAAC,QAAMnD,KAAK,EAAC;QACTwC,WAAW,CAACpD,IAAI,CAAC,EAAE,CAAC;QACpB4C,SAAS,CAAC5C,IAAI,CAAC,EAAE,CAAC;QAClB6C,QAAQ,CAAC7C,IAAI,CAAC,EAAE,CAAC;QACjB8C,SAAS,CAAC9C,IAAI,CAAC,EAAE,CAAC;QAClB+C,SAAS,CAAC/C,IAAI,CAAC,EAAE,CAAC;QAClBgD,UAAU,CAAChD,IAAI,CAAC,EAAE,CAAC;QACnBiD,QAAQ,CAACjD,IAAI,CAAC,EAAE,CAAC;QACjBkD,YAAY,CAAClD,IAAI,CAAC,EAAE,CAAC;QACrBmD,YAAY,CAACnD,IAAI,CAAC,EAAE,CAAC;MAAC;IAC1B,CAAC,CAAC;IAEFU,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1BD,OAAO,CAACC,GAAG,CAACyC,WAAW,CAAC;IACxB1C,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1BD,OAAO,CAACC,GAAG,CAACyC,WAAW,CAAC;IAExB,KAAK,IAAIgB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIiE,MAAM,EAAEjE,CAAC,EAAE,EAAE;MAC9Bf,eAAe,CAACrD,IAAI,CAAC,MAAM,GAAGiE,MAAM,CAACG,CAAC,CAAC,CAAC;MACxCf,eAAe,CAACrD,IAAI,CAAC,MAAM,GAAGiE,MAAM,CAACG,CAAC,CAAC,CAAC;IAC5C;IAEA,MAAMC,SAAS,GAAGjB,WAAW,CAAC/D,GAAG,CAAC,CAACiF,GAAG,EAAEX,KAAK,MAAM;MAC/C,GAAGW,GAAG,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,EAAEN,CAAC,MAAM;QAAE,GAAGK,GAAG;QAAE,CAACnB,eAAe,CAACc,CAAC,CAAC,GAAGM;MAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC3EC,KAAK,EAAE9B,SAAS,CAACe,KAAK,CAAC;MACvBgB,IAAI,EAAE9B,QAAQ,CAACc,KAAK,CAAC;MACrBiB,KAAK,EAAE9B,SAAS,CAACa,KAAK,CAAC;MACvBkB,KAAK,EAAE9B,SAAS,CAACY,KAAK,CAAC;MACvBmB,YAAY,EAAE9B,UAAU,CAACW,KAAK,CAAC,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC;MACjDoB,IAAI,EAAE9B,QAAQ,CAACU,KAAK,CAAC;MACrBqB,QAAQ,EAAE9B,YAAY,CAACS,KAAK,CAAC;MAC7BsB,QAAQ,EAAE9B,YAAY,CAACQ,KAAK,CAAC;MAC7BwB,MAAM,EAAExB;IACZ,CAAC,CAAC,CAAC;IAEHjD,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBD,OAAO,CAACC,GAAG,CAAC0D,SAAS,CAAC;IAEtB,MAAMe,UAAU,GAAGf,SAAS,CAAC1I,MAAM,CAAC2I,GAAG,IAAIA,GAAG,CAAC/J,aAAa,CAAC,KAAKD,YAAY,CAAC;IAE/E,MAAM+K,SAAS,GAAGD,UAAU,CAACb,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAK;MAC9CE,GAAG,CAACF,GAAG,CAACgB,KAAK,CAAC,GAAG,CAACd,GAAG,CAACF,GAAG,CAACgB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;MAC1C,OAAOd,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;IACN,MAAM3I,UAAU,GAAGuJ,UAAU,CAAC5F,MAAM;IAEpC4F,UAAU,CAAC1B,OAAO,CAACY,GAAG,IAAI;MACtBA,GAAG,CAACiB,gBAAgB,GAAGF,SAAS,CAACf,GAAG,CAACgB,KAAK,CAAC,GAAGzJ,UAAU;IAC5D,CAAC,CAAC;IAEF,KAAK,IAAIsI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkE,MAAM,EAAElE,CAAC,EAAE,EAAE;MAC7BiB,UAAU,CAAC1B,OAAO,CAACY,GAAG,IAAI;QACtBA,GAAG,CAAE,cAAaH,CAAC,GAAG,CAAE,EAAC,CAAC,GAAGG,GAAG,CAACQ,YAAY;MACjD,CAAC,CAAC;MAEF,MAAMU,QAAQ,GAAGJ,UAAU,CAACb,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAK;QAC7C,MAAMmB,GAAG,GAAI,GAAEnB,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAE,IAAGG,GAAG,CAAE,OAAMH,CAAC,GAAG,CAAE,EAAC,CAAE,EAAC;QACvDK,GAAG,CAACiB,GAAG,CAAC,GAAG,CAACjB,GAAG,CAACiB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QAC9B,OAAOjB,GAAG;MACd,CAAC,EAAE,CAAC,CAAC,CAAC;MAEN,MAAMkB,SAAS,GAAGN,UAAU,CAACb,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAK;QAC9CE,GAAG,CAACF,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAC,CAAC,GAAG,CAACK,GAAG,CAACF,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;QACtD,OAAOK,GAAG;MACd,CAAC,EAAE,CAAC,CAAC,CAAC;MAENY,UAAU,CAAC1B,OAAO,CAACY,GAAG,IAAI;QACtB,MAAMmB,GAAG,GAAI,GAAEnB,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAE,IAAGG,GAAG,CAAE,OAAMH,CAAC,GAAG,CAAE,EAAC,CAAE,EAAC;QACvDG,GAAG,CAAE,kBAAiBH,CAAC,GAAG,CAAE,EAAC,CAAC,GAAGqB,QAAQ,CAACC,GAAG,CAAC,GAAGC,SAAS,CAACpB,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAC,CAAC;MAC/E,CAAC,CAAC;IACN;IAEAiB,UAAU,CAAC1B,OAAO,CAACY,GAAG,IAAI;MACtB,IAAIqB,EAAE,GAAG,CAAC;MACV,IAAIC,EAAE,GAAG,CAAC;MACV,KAAK,IAAIzB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIkE,MAAM,EAAElE,CAAC,EAAE,EAAE;QAC9B,IAAIA,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;UACbwB,EAAE,IAAIrB,GAAG,CAAE,kBAAiBH,CAAE,EAAC,CAAC,IAAI,CAAC;QACzC,CAAC,MAAM;UACHyB,EAAE,IAAItB,GAAG,CAAE,kBAAiBH,CAAE,EAAC,CAAC,IAAI,CAAC;QACzC;QACAG,GAAG,CAAE,qBAAoBH,CAAE,EAAC,CAAC,GAAGwB,EAAE;QAClCrB,GAAG,CAAE,qBAAoBH,CAAE,EAAC,CAAC,GAAGyB,EAAE;MACtC;IACJ,CAAC,CAAC;IAEF,MAAMC,MAAM,GAAG,EAAE;IACjBT,UAAU,CAAC1B,OAAO,CAACY,GAAG,IAAI;MACtB,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIkE,MAAM,EAAElE,CAAC,EAAE,EAAE;QAC9B0B,MAAM,CAAC7F,IAAI,CAAC;UACRmF,MAAM,EAAEb,GAAG,CAACa,MAAM;UAClBW,GAAG,EAAE3B,CAAC;UACN4B,IAAI,EAAEzB,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAC;UACrB6B,IAAI,EAAE1B,GAAG,CAAE,OAAMH,CAAE,EAAC,CAAC;UACrB8B,WAAW,EAAE3B,GAAG,CAAE,cAAaH,CAAE,EAAC,CAAC;UACnC+B,eAAe,EAAE5B,GAAG,CAAE,kBAAiBH,CAAE,EAAC,CAAC;UAC3CgC,gBAAgB,EAAE7B,GAAG,CAAE,qBAAoBH,CAAE,EAAC,CAAC;UAC/CiC,gBAAgB,EAAE9B,GAAG,CAAE,qBAAoBH,CAAE,EAAC,CAAC;UAC/Ce,GAAG,EAAEZ,GAAG,CAACY;QACb,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;IAEFxE,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrBD,OAAO,CAACC,GAAG,CAACkF,MAAM,CAAC;;IAEnB;IACA,MAAMQ,UAAU,GAAGR,MAAM,CAACtB,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAK;MAC3CE,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,GAAG,CAACvB,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;MACxC,OAAOvB,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;IAENqB,MAAM,CAACnC,OAAO,CAACY,GAAG,IAAI;MAClBA,GAAG,CAAC,QAAQ,CAAC,GAAG+B,UAAU,CAAC/B,GAAG,CAACyB,IAAI,CAAC;IACxC,CAAC,CAAC;;IAEF;IACA,IAAIQ,QAAQ,GAAG,CAAC,CAAC,CAAC;IAClB,IAAI/L,cAAc,KAAK,cAAc,EAAE;MACnC+L,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAAC5K,UAAU,GAAG,EAAE,CAAC;IACzC,CAAC,MAAM,IAAIrB,cAAc,KAAK,aAAa,EAAE;MACzC+L,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAAC5K,UAAU,GAAG,EAAE,CAAC;IACzC;IACA6E,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvBD,OAAO,CAACC,GAAG,CAAC4F,QAAQ,CAAC;;IAErB;IACA,MAAMG,sBAAsB,GAAGb,MAAM,CAAClK,MAAM,CAAC2I,GAAG,IAAIA,GAAG,CAAC,QAAQ,CAAC,GAAGiC,QAAQ,CAAC;IAC7E7F,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrCD,OAAO,CAACC,GAAG,CAAC+F,sBAAsB,CAAC;IACnC,MAAME,cAAc,GAAGF,sBAAsB,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACjB,GAAG,GAAGgB,CAAC,CAAChB,GAAG,CAAC;IAC3EpF,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BD,OAAO,CAACC,GAAG,CAACiG,cAAc,CAAC;IAE3B,MAAMQ,aAAa,GAAGR,cAAc,CAACrC,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAK;MACtD,IAAI,CAACE,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,EAAE;QAChBvB,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,GAAG;UACZA,IAAI,EAAEzB,GAAG,CAACyB,IAAI;UACdC,IAAI,EAAE,CAACqB,KAAK,CAAC/C,GAAG,CAAC0B,IAAI,CAAC,GAAG1B,GAAG,CAAC0B,IAAI,GAAG,CAACsB,QAAQ;UAC7CxB,GAAG,EAAExB,GAAG,CAACwB,GAAG;UACZG,WAAW,EAAE3B,GAAG,CAAC2B,WAAW;UAC5BG,gBAAgB,EAAE9B,GAAG,CAAC8B,gBAAgB;UACtCD,gBAAgB,EAAE7B,GAAG,CAAC6B,gBAAgB;UACtCoB,OAAO,EAAE,CAACjD,GAAG,CAACa,MAAM;QACxB,CAAC;MACL,CAAC,MAAM;QACHX,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACC,IAAI,GAAGQ,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACC,IAAI,EAAE,CAACqB,KAAK,CAAC/C,GAAG,CAAC0B,IAAI,CAAC,GAAG1B,GAAG,CAAC0B,IAAI,GAAG,CAACsB,QAAQ,CAAC;QAC1F9C,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACD,GAAG,GAAGU,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACD,GAAG,EAAExB,GAAG,CAACwB,GAAG,CAAC;QACxDtB,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACE,WAAW,GAAGO,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACE,WAAW,EAAE3B,GAAG,CAAC2B,WAAW,CAAC;QAChFzB,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACK,gBAAgB,GAAGI,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACK,gBAAgB,EAAE9B,GAAG,CAAC8B,gBAAgB,CAAC;QAC/F5B,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACI,gBAAgB,GAAGK,IAAI,CAACgB,GAAG,CAAChD,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACI,gBAAgB,EAAE7B,GAAG,CAAC6B,gBAAgB,CAAC;QAC/F3B,GAAG,CAACF,GAAG,CAACyB,IAAI,CAAC,CAACwB,OAAO,CAACvH,IAAI,CAACsE,GAAG,CAACa,MAAM,CAAC;MAC1C;MACA,OAAOX,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEN;IACAiD,MAAM,CAACC,MAAM,CAACN,aAAa,CAAC,CAAC1D,OAAO,CAACY,GAAG,IAAI;MACxC,IAAIA,GAAG,CAAC0B,IAAI,KAAK,CAACsB,QAAQ,EAAE;QACxBhD,GAAG,CAAC0B,IAAI,GAAG2B,GAAG;MAClB;IACJ,CAAC,CAAC;IAEFjH,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5BD,OAAO,CAACC,GAAG,CAACyG,aAAa,CAAC;;IAE1B;IACA,MAAMQ,aAAa,GAAGH,MAAM,CAACC,MAAM,CAACN,aAAa,CAAC;IAClD,MAAMS,YAAY,GAAGD,aAAa,CAACf,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC9C,IAAIxM,aAAa,KAAK,OAAO,EAAE;QAC3B,OAAOwM,CAAC,CAACf,IAAI,GAAGc,CAAC,CAACd,IAAI;MAC1B,CAAC,MAAM;QACH,OAAOc,CAAC,CAACd,IAAI,GAAGe,CAAC,CAACf,IAAI;MAC1B;IACJ,CAAC,CAAC;;IAEF;IACA6B,YAAY,CAACnE,OAAO,CAACY,GAAG,IAAI;MACxB,IAAI/J,aAAa,KAAK,OAAO,EAAE;QAC3B+J,GAAG,CAACwD,eAAe,GAAGxD,GAAG,CAAC8B,gBAAgB;QAC1C,OAAO9B,GAAG,CAAC6B,gBAAgB;QAC3B,OAAO7B,GAAG,CAAC8B,gBAAgB;MAC/B,CAAC,MAAM;QACH9B,GAAG,CAACwD,eAAe,GAAGxD,GAAG,CAAC6B,gBAAgB;QAC1C,OAAO7B,GAAG,CAAC8B,gBAAgB;QAC3B,OAAO9B,GAAG,CAAC6B,gBAAgB;MAC/B;IACJ,CAAC,CAAC;IAEFzF,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BD,OAAO,CAACC,GAAG,CAACkH,YAAY,CAAC;IAG7B,MAAM4B,SAAS,GAAG5B,YAAY,CAAClM,MAAM,CAAC2I,GAAG,IAAIA,GAAG,CAACyB,IAAI,KAAKY,SAAS,CAAC;IACpEjG,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACpBD,OAAO,CAACC,GAAG,CAAC8I,SAAS,CAAC;IAEtB,IAAIC,YAAY,GAAG,IAAI;IACvB,IAAIC,eAAe,GAAG,IAAI;IAC9B,MAAMzC,eAAe,GAAGuC,SAAS,CAAC9N,MAAM,CAAC2I,GAAG,IAAI;MAC5C,MAAMsF,OAAO,GAAG,EAAE;MAClB,MAAMC,SAAS,GAAGvF,GAAG,CAACyB,IAAI,CAAC7G,KAAK,CAAC,GAAG,CAAC,CAACvD,MAAM,CAACwD,OAAO,CAAC;;MAE7D;MACQ;MACA,IAAIwK,eAAe,CAACxC,QAAQ,CAAC,IAAI,GAAG7C,GAAG,CAACyB,IAAI,GAAE,IAAI,CAAC,EAAE;QAC7C,OAAO,KAAK;MAChB;;MAIJ;MACA;;MAEA;MACA,KAAK,IAAI5B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI0F,SAAS,CAACrK,MAAM,EAAE2E,CAAC,EAAE,EAAE;QACxC,MAAM2F,MAAM,GAAGD,SAAS,CAACE,KAAK,CAAC,CAAC,EAAE5F,CAAC,CAAC,CAAC9D,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG;QACpD,IAAIqJ,YAAY,CAACvC,QAAQ,CAAC,IAAI,GAAG2C,MAAM,GAAE,IAAI,CAAC,EAAE;UAC5C,OAAO,KAAK;QAChB;QACAH,eAAe,IAAIG,MAAM,GAAG,IAAI;MACxC;MAAC;MACGJ,YAAY,IAAIpF,GAAG,CAACyB,IAAI,GAAE,IAAI;MAC9B,OAAO,IAAI;IACf,CAAC,CAAC;IAEFrF,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9BD,OAAO,CAACC,GAAG,CAACuG,eAAe,CAAC;IAExB,MAAMa,gBAAgB,GAAGC,eAAe,CAACd,eAAe,EAAE3M,aAAa,CAAC;IACxE+C,eAAe,CAACyK,gBAAgB,CAAC;IAEjC,MAAM7N,WAAW,GAAG+N,eAAe,CAAC3E,SAAS,CAAC;IAC9CjG,cAAc,CAACnD,WAAW,CAAC;IAC3B0D,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;EAC1B,CAAC;EACD,MAAMmL,gBAAgB,GAAIF,GAAG,IAAK;IAC9B,OAAO,IAAImB,OAAO,CAAEC,OAAO,IAAK;MAC5B9L,SAAS,CAACE,WAAW,CAAE,gBAAewK,GAAI,EAAC,CAAC;MAC5C1K,SAAS,CAACE,WAAW,CAAC,aAAa,CAAC;MAEpCF,SAAS,CAAC+L,SAAS,GAAI3L,KAAK,IAAK;QAC7B,MAAM4L,IAAI,GAAG5L,KAAK,CAACiC,IAAI;QACvB,MAAM4J,UAAU,GAAGD,IAAI,CAACE,KAAK,CAAC,aAAa,CAAC;QAC5C,MAAMC,SAAS,GAAGH,IAAI,CAACE,KAAK,CAAC,kBAAkB,CAAC;QAEhD,IAAID,UAAU,IAAIE,SAAS,EAAE;UACzB,MAAMC,KAAK,GAAGC,QAAQ,CAACJ,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;UACzC,IAAIG,KAAK,KAAK,EAAE,EAAE;YACd,MAAMhP,UAAU,GAAG,CAACiP,QAAQ,CAACF,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,EAAEG,OAAO,CAAC,CAAC,CAAC;YAChER,OAAO,CAAC1O,UAAU,CAAC;UACvB;QACJ;MACJ,CAAC;IACL,CAAC,CAAC;EACN,CAAC;EAED,MAAMmP,oBAAoB,GAAGA,CAACC,OAAO,EAAEpH,OAAO,KAAK;IAC/C,OAAOoH,OAAO,CAACtL,GAAG,CAACuL,EAAE,IAAIrH,OAAO,CAACqH,EAAE,CAAC,CAAC,CAACvK,IAAI,CAAC,MAAM,CAAC;EACtD,CAAC;EAED,MAAMwK,eAAe,GAAIF,OAAO,IAAK;IACjC,MAAMG,WAAW,GAAGJ,oBAAoB,CAACC,OAAO,EAAEvQ,UAAU,CAAC;;IAE7D;IACA6C,YAAY,CAACc,OAAO,CAAC,aAAa,EAAE+M,WAAW,CAAC;;IAEhD;IACA7N,YAAY,CAACiB,UAAU,CAAC,eAAe,CAAC;;IAExC;IACApE,MAAM,CAACiR,QAAQ,CAACC,IAAI,GAAG,iBAAiB;EAC5C,CAAC;EAID,MAAMhD,eAAe,GAAGA,CAAC3M,WAAW,EAAEd,aAAa,KAAK;IACpD,OAAOc,WAAW,CAACgE,GAAG,CAACiF,GAAG,IAAI;MAC1B,MAAM2G,UAAU,GAAG,MAAM;MACzB,MAAM1P,UAAU,GAAG+I,GAAG,CAAC2G,UAAU,CAAC;MAElC,IAAI1Q,aAAa,KAAK,OAAO,EAAE;QAC3B,IAAIgB,UAAU,IAAI,CAAC,EAAE;UACjB+I,GAAG,CAAC4G,WAAW,GAAG,eAAe;QACrC,CAAC,MAAM,IAAI3P,UAAU,IAAI,GAAG,EAAE;UAC1B+I,GAAG,CAAC4G,WAAW,GAAG,eAAe;QACrC,CAAC,MAAM,IAAI3P,UAAU,IAAI,GAAG,EAAE;UAC1B+I,GAAG,CAAC4G,WAAW,GAAG,mBAAmB;QACzC,CAAC,MAAM;UACH5G,GAAG,CAAC4G,WAAW,GAAG,MAAM;QAC5B;MACJ,CAAC,MAAM;QACH,IAAI3P,UAAU,IAAI,CAAC,GAAG,EAAE;UACpB+I,GAAG,CAAC4G,WAAW,GAAG,eAAe;QACrC,CAAC,MAAM,IAAI3P,UAAU,IAAI,CAAC,GAAG,EAAE;UAC3B+I,GAAG,CAAC4G,WAAW,GAAG,eAAe;QACrC,CAAC,MAAM,IAAI3P,UAAU,IAAI,CAAC,GAAG,EAAE;UAC3B+I,GAAG,CAAC4G,WAAW,GAAG,mBAAmB;QACzC,CAAC,MAAM;UACH5G,GAAG,CAAC4G,WAAW,GAAG,MAAM;QAC5B;MACJ;MAEA,OAAO5G,GAAG;IACd,CAAC,CAAC,CAAC3I,MAAM,CAAC2I,GAAG,IAAIA,GAAG,CAAC4G,WAAW,KAAK,MAAM,IAAI5G,GAAG,CAACwD,eAAe,GAAG,GAAG,CAAC;EAC7E,CAAC;EAED,MAAMG,eAAe,GAAI3E,SAAS,IAAK;IACnC,MAAM+C,UAAU,GAAG,CAAC,CAAC;IAErB/C,SAAS,CAACI,OAAO,CAACrB,KAAK,IAAI;MACvBA,KAAK,CAACqB,OAAO,CAAC,CAACkF,IAAI,EAAEjF,KAAK,KAAK;QAC3B,MAAMwG,IAAI,GAAG9H,KAAK,CAAC0H,KAAK,CAAC,CAAC,EAAEpG,KAAK,GAAG,CAAC,CAAC,CAACtD,IAAI,CAAC,GAAG,CAAC;QAChD,IAAI,CAACgG,UAAU,CAAC8D,IAAI,CAAC,EAAE;UACnB9D,UAAU,CAAC8D,IAAI,CAAC,GAAG,CAAC;QACxB;QACA9D,UAAU,CAAC8D,IAAI,CAAC,EAAE;MACtB,CAAC,CAAC;IACN,CAAC,CAAC;IAEF,MAAMgB,WAAW,GAAG1D,MAAM,CAAC2D,OAAO,CAAC/E,UAAU,CAAC,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1E,OAAOqE,WAAW,CAACpB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAClC,CAAC;EAED,MAAMsB,cAAc,GAAIC,QAAQ,IAAK;IACjCzN,iBAAiB,CAACnD,cAAc,KAAK4Q,QAAQ,GAAG,IAAI,GAAGA,QAAQ,CAAC;EACpE,CAAC;EAEA,MAAMC,sBAAsB,GAAIpB,IAAI,IAAK;IACtC,MAAM9H,KAAK,GAAG8H,IAAI,CAACpE,IAAI,CAAC7G,KAAK,CAAC,GAAG,CAAC,CAACvD,MAAM,CAACwD,OAAO,CAAC;IAClD,MAAMoD,OAAO,GAAGH,aAAa,CAACC,KAAK,CAAC;IACpC,MAAMmJ,cAAc,GAAGnJ,KAAK,CAAChD,GAAG,CAAC,CAACuJ,IAAI,EAAEjF,KAAK,KAAK;MAC9C,MAAM8H,UAAU,GAAGjF,IAAI,CAACkF,KAAK,CAAC/H,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;MAC5C,OAAOA,KAAK,GAAG,CAAC,KAAK,CAAC,GAAI,GAAE8H,UAAW,KAAI7C,IAAK,EAAC,GAAI,GAAE6C,UAAW,MAAK7C,IAAK,EAAC;IACjF,CAAC,CAAC,CAACvI,IAAI,CAAC,GAAG,CAAC;IAEZ,OAAQ,GAAEkC,OAAQ,KAAIiJ,cAAe,EAAC;EAC1C,CAAC;EAED,oBACI5R,OAAA;IAAK+R,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BhS,OAAA;MAAAgS,QAAA,eACIhS,OAAA;QAAAgS,QAAA,eACIhS,OAAA;UAAAgS,QAAA,gBACIhS,OAAA;YAAIiS,YAAY,EAAEA,CAAA,KAAMhP,gBAAgB,CAAC,IAAI,CAAE;YAC3CiP,YAAY,EAAEA,CAAA,KAAMjP,gBAAgB,CAAC,KAAK,CAAE;YAAA+O,QAAA,eAC5ChS,OAAA,CAACN,IAAI;cAACyS,EAAE,EAAC,GAAG;cAAAH,QAAA,eACRhS,OAAA;gBAAKoS,GAAG,EAAEpR,aAAa,GAAGlB,SAAS,GAAGD,IAAK;gBAACwS,GAAG,EAAC,MAAM;gBAACC,KAAK,EAAE;kBAAEC,MAAM,EAAE;gBAAO;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eACL3S,OAAA;YAAAgS,QAAA,eAAIhS,OAAA,CAACN,IAAI;cAACyS,EAAE,EAAC,mBAAmB;cAACJ,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAgB;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtF3S,OAAA;YAAAgS,QAAA,eAAIhS,OAAA,CAACN,IAAI;cAACyS,EAAE,EAAC,kBAAkB;cAAAH,QAAA,EAAC;YAAe;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3D3S,OAAA;YAAAgS,QAAA,eAAIhS,OAAA,CAACN,IAAI;cAACyS,EAAE,EAAC,iBAAiB;cAAAH,QAAA,EAAC;YAAc;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzD3S,OAAA;YAAAgS,QAAA,eAAIhS,OAAA,CAACN,IAAI;cAACyS,EAAE,EAAC,eAAe;cAAAH,QAAA,EAAC;YAAY;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACT3S,OAAA;MAAAgS,QAAA,eACIhS,OAAA;QAAS+R,SAAS,EAAC,OAAO;QAAAC,QAAA,gBAC1BhS,OAAA;UAAKsS,KAAK,EAAE;YAAEM,OAAO,EAAE,MAAM;YAAEC,cAAc,EAAE,QAAQ;YAAEC,UAAU,EAAE,QAAQ;YAAEC,QAAQ,EAAE;UAAW,CAAE;UAAAf,QAAA,gBAClHhS,OAAA;YAAI+R,SAAS,EAAC,OAAO;YAACO,KAAK,EAAE;cAAES,QAAQ,EAAE,UAAU;cAAEC,IAAI,EAAE,KAAK;cAAEC,SAAS,EAAE;YAAmB,CAAE;YAAAjB,QAAA,EAAC;UAAgB;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxH3S,OAAA;YAAGsS,KAAK,EAAE;cAAEY,SAAS,EAAE,QAAQ;cAAEC,QAAQ,EAAE,EAAE;cAAEC,UAAU,EAAE;YAAO,CAAE;YAAApB,QAAA,EAAC;UAA0C;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClH,CAAC,EAEe,CAACxR,kBAAkB,gBAChBnB,OAAA;UAAK+R,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC7BhS,OAAA;YAAQqT,OAAO,EAAEpM,iBAAkB;YAAC8K,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAC;UAAE;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAErF3S,OAAA;YAAK+R,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC1BhS,OAAA;cAAK+R,SAAS,EAAC,KAAK;cAAAC,QAAA,gBAChBhS,OAAA;gBAAQ+R,SAAS,EAAEhR,WAAW,KAAK,UAAU,GAAG,iBAAiB,GAAG,UAAW;gBAACsS,OAAO,EAAEA,CAAA,KAAMnP,cAAc,CAAC,UAAU,CAAE;gBAAA8N,QAAA,EAAC;cAAS;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC7I3S,OAAA;gBAAQ+R,SAAS,EAAEhR,WAAW,KAAK,SAAS,GAAG,iBAAiB,GAAG,UAAW;gBAACsS,OAAO,EAAEA,CAAA,KAAMnP,cAAc,CAAC,SAAS,CAAE;gBAAA8N,QAAA,EAAC;cAAO;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACzI3S,OAAA;gBAAQ+R,SAAS,EAAEhR,WAAW,KAAK,KAAK,GAAG,iBAAiB,GAAG,UAAW;gBAACsS,OAAO,EAAEA,CAAA,KAAMnP,cAAc,CAAC,KAAK,CAAE;gBAAA8N,QAAA,EAAC;cAAG;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5H,CAAC,eAEN3S,OAAA;cAAK+R,SAAS,EAAC,YAAY;cAACO,KAAK,EAAE;gBAAEM,OAAO,EAAE7R,WAAW,KAAK,KAAK,GAAG,OAAO,GAAG;cAAO,CAAE;cAAAiR,QAAA,eACrFhS,OAAA;gBAAK+R,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACvBhS,OAAA;kBAAOsT,IAAI,EAAC,MAAM;kBAACC,QAAQ,EAAE7O;gBAAiB;kBAAA8N,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACjD3S,OAAA;kBAAOwT,OAAO,EAAC,cAAc;kBAAAxB,QAAA,EAAC;gBAAc;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACpD3S,OAAA;kBACIsT,IAAI,EAAC,MAAM;kBACXtC,EAAE,EAAC,cAAc;kBACjByC,KAAK,EAAE/S,YAAa;kBACpB6S,QAAQ,EAAGrO,CAAC,IAAKrB,eAAe,CAACqB,CAAC,CAACL,MAAM,CAAC4O,KAAK;gBAAE;kBAAAjB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpD,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAEN3S,OAAA;cAAK+R,SAAS,EAAC,YAAY;cAACO,KAAK,EAAE;gBAAEM,OAAO,EAAE7R,WAAW,KAAK,SAAS,GAAG,OAAO,GAAG;cAAO,CAAE;cAAAiR,QAAA,eACzFhS,OAAA;gBAAK+R,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACvBhS,OAAA;kBAAOwT,OAAO,EAAC,kBAAkB;kBAAAxB,QAAA,EAAC;gBAAkB;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC5D3S,OAAA;kBACIsT,IAAI,EAAC,MAAM;kBACXtC,EAAE,EAAC,kBAAkB;kBACrByC,KAAK,EAAE/S,YAAa;kBACpB6S,QAAQ,EAAGrO,CAAC,IAAKrB,eAAe,CAACqB,CAAC,CAACL,MAAM,CAAC4O,KAAK;gBAAE;kBAAAjB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpD,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAEN3S,OAAA;cAAK+R,SAAS,EAAC,YAAY;cAACO,KAAK,EAAE;gBAAEM,OAAO,EAAE7R,WAAW,KAAK,UAAU,GAAG,OAAO,GAAG;cAAO,CAAE;cAAAiR,QAAA,eAC1FhS,OAAA;gBAAK+R,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACvBhS,OAAA;kBAAOwT,OAAO,EAAC,kBAAkB;kBAAAxB,QAAA,EAAC;gBAAkB;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC5D3S,OAAA;kBACIsT,IAAI,EAAC,MAAM;kBACXtC,EAAE,EAAC,kBAAkB;kBACrByC,KAAK,EAAE/S,YAAa;kBACpB6S,QAAQ,EAAGrO,CAAC,IAAKrB,eAAe,CAACqB,CAAC,CAACL,MAAM,CAAC4O,KAAK;gBAAE;kBAAAjB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpD,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAEN3S,OAAA;cAAK+R,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACvBhS,OAAA;gBAAOwT,OAAO,EAAC,eAAe;gBAAAxB,QAAA,EAAC;cAAe;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACtD3S,OAAA;gBACIgR,EAAE,EAAC,eAAe;gBAClByC,KAAK,EAAE9S,aAAc;gBACrB4S,QAAQ,EAAGrO,CAAC,IAAKpB,gBAAgB,CAACoB,CAAC,CAACL,MAAM,CAAC4O,KAAK,CAAE;gBAAAzB,QAAA,gBAElDhS,OAAA;kBAAQyT,KAAK,EAAC,OAAO;kBAAAzB,QAAA,EAAC;gBAAK;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACpC3S,OAAA;kBAAQyT,KAAK,EAAC,OAAO;kBAAAzB,QAAA,EAAC;gBAAK;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC,eAEN3S,OAAA;cAAK+R,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACvBhS,OAAA;gBAAOwT,OAAO,EAAC,gBAAgB;gBAAAxB,QAAA,EAAC;cAAsB;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC9D3S,OAAA;gBACIgR,EAAE,EAAC,gBAAgB;gBACnByC,KAAK,EAAE7S,cAAe;gBACtB2S,QAAQ,EAAGrO,CAAC,IAAKnB,iBAAiB,CAACmB,CAAC,CAACL,MAAM,CAAC4O,KAAK,CAAE;gBAAAzB,QAAA,gBAEnDhS,OAAA;kBAAQyT,KAAK,EAAC,cAAc;kBAAAzB,QAAA,EAAC;gBAAsB;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAC5D3S,OAAA;kBAAQyT,KAAK,EAAC,aAAa;kBAAAzB,QAAA,EAAC;gBAAsB;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAC3D3S,OAAA;kBAAQyT,KAAK,EAAC,iBAAiB;kBAAAzB,QAAA,EAAC;gBAAyB;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9D,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC,eAEN3S,OAAA;cAAQqT,OAAO,EAAExK,WAAY;cAACkJ,SAAS,EAAC,aAAa;cAACO,KAAK,EAAE;gBAACoB,SAAS,EAAC,GAAG;gBAAEN,UAAU,EAAC;cAAE,CAAE;cAAApB,QAAA,EAAC;YAAK;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC3G3S,OAAA;cAAQqT,OAAO,EAAEhP,WAAY;cAAE0N,SAAS,EAAC,aAAa;cAACO,KAAK,EAAE;gBAACoB,SAAS,EAAC,GAAG;gBAAEN,UAAU,EAAC;cAAE,CAAE;cAAApB,QAAA,EAAE;YAAK;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5G,CAAC,EACL9R,UAAU,iBAAIb,OAAA;YAAAgS,QAAA,EAAG;UAA+C;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,EAEpE9R,UAAU,gBACPb,OAAA;YAAK+R,SAAS,EAAC;UAAc;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,gBAEN3S,OAAA;YAAAgS,QAAA,gBACIhS,OAAA;cAAAgS,QAAA,GAAG,eAAa,EAAC3R,UAAU;YAAA;cAAAmS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpC3S,OAAA;cAAK+R,SAAS,EAAC,oBAAoB;cAAAC,QAAA,gBAC/BhS,OAAA;gBAAK+R,SAAS,EAAC,UAAU;gBAAAC,QAAA,gBACrBhS,OAAA;kBAAQqT,OAAO,EAAEA,CAAA,KAAM5B,cAAc,CAAC,gBAAgB,CAAE;kBAAAO,QAAA,GAAC,mBACpC,EAACzR,YAAY,CAACwB,MAAM,CAACwO,IAAI,IAAIA,IAAI,CAACe,WAAW,KAAK,eAAe,CAAC,CAAC1L,MAAM,EAAC,GAC/F;gBAAA;kBAAA4M,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACR7R,cAAc,KAAK,gBAAgB,iBAChCd,OAAA;kBAAAgS,QAAA,EACKzR,YAAY,CAACwB,MAAM,CAACwO,IAAI,IAAIA,IAAI,CAACe,WAAW,KAAK,eAAe,CAAC,CAAC7L,GAAG,CAAC,CAAC8K,IAAI,EAAExG,KAAK,kBAC/E/J,OAAA;oBAAgB+R,SAAS,EAAC,WAAW;oBAACsB,OAAO,EAAEA,CAAA,KAAMpC,eAAe,CAACV,IAAI,CAAC5C,OAAO,CAAE;oBAAAqE,QAAA,GAClFL,sBAAsB,CAACpB,IAAI,CAAC,eAC7BvQ,OAAA;sBAAAgS,QAAA,GAAG,cAAY,EAACpF,IAAI,CAAC+G,KAAK,CAACpD,IAAI,CAACnE,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,EAAC,wBAAsB,EAACQ,IAAI,CAAC+G,KAAK,CAACpD,IAAI,CAACrC,eAAe,GAAG,GAAG,CAAC,EAAC,GAAC;oBAAA;sBAAAsE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAG,CAAC;kBAAA,GAF5G5I,KAAK;oBAAAyI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAGd,CACH;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF,CACP;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACN3S,OAAA;gBAAK+R,SAAS,EAAC,UAAU;gBAAAC,QAAA,gBACrBhS,OAAA;kBAAQqT,OAAO,EAAEA,CAAA,KAAM5B,cAAc,CAAC,gBAAgB,CAAE;kBAAAO,QAAA,GAAC,mBACpC,EAACzR,YAAY,CAACwB,MAAM,CAACwO,IAAI,IAAIA,IAAI,CAACe,WAAW,KAAK,eAAe,CAAC,CAAC1L,MAAM,EAAC,GAC/F;gBAAA;kBAAA4M,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACR7R,cAAc,KAAK,gBAAgB,iBAChCd,OAAA;kBAAAgS,QAAA,EACKzR,YAAY,CAACwB,MAAM,CAACwO,IAAI,IAAIA,IAAI,CAACe,WAAW,KAAK,eAAe,CAAC,CAAC7L,GAAG,CAAC,CAAC8K,IAAI,EAAExG,KAAK,kBAChF/J,OAAA;oBAAgB+R,SAAS,EAAC,WAAW;oBAACsB,OAAO,EAAEA,CAAA,KAAMpC,eAAe,CAACV,IAAI,CAAC5C,OAAO,CAAE;oBAAAqE,QAAA,GAClFL,sBAAsB,CAACpB,IAAI,CAAC,eAC7BvQ,OAAA;sBAAAgS,QAAA,GAAG,cAAY,EAACpF,IAAI,CAAC+G,KAAK,CAACpD,IAAI,CAACnE,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,EAAC,wBAAsB,EAACQ,IAAI,CAAC+G,KAAK,CAACpD,IAAI,CAACrC,eAAe,GAAG,GAAG,CAAC,EAAC,GAAC;oBAAA;sBAAAsE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAG,CAAC;kBAAA,GAF5G5I,KAAK;oBAAAyI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAGV,CACN;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF,CACP;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACN3S,OAAA;gBAAK+R,SAAS,EAAC,UAAU;gBAAAC,QAAA,gBACrBhS,OAAA;kBAAQqT,OAAO,EAAEA,CAAA,KAAM5B,cAAc,CAAC,qBAAqB,CAAE;kBAAAO,QAAA,GAAC,wBACpC,EAACzR,YAAY,CAACwB,MAAM,CAACwO,IAAI,IAAIA,IAAI,CAACe,WAAW,KAAK,mBAAmB,CAAC,CAAC1L,MAAM,EAAC,GACxG;gBAAA;kBAAA4M,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACR7R,cAAc,KAAK,qBAAqB,iBACrCd,OAAA;kBAAAgS,QAAA,EACKzR,YAAY,CAACwB,MAAM,CAACwO,IAAI,IAAIA,IAAI,CAACe,WAAW,KAAK,mBAAmB,CAAC,CAAC7L,GAAG,CAAC,CAAC8K,IAAI,EAAExG,KAAK,kBACpF/J,OAAA;oBAAgB+R,SAAS,EAAC,WAAW;oBAACsB,OAAO,EAAEA,CAAA,KAAMpC,eAAe,CAACV,IAAI,CAAC5C,OAAO,CAAE;oBAAAqE,QAAA,GAClFL,sBAAsB,CAACpB,IAAI,CAAC,eAC7BvQ,OAAA;sBAAAgS,QAAA,GAAG,cAAY,EAACpF,IAAI,CAAC+G,KAAK,CAACpD,IAAI,CAACnE,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,EAAC,wBAAsB,EAACQ,IAAI,CAAC+G,KAAK,CAACpD,IAAI,CAACrC,eAAe,GAAG,GAAG,CAAC,EAAC,GAAC;oBAAA;sBAAAsE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAG,CAAC;kBAAA,GAF5G5I,KAAK;oBAAAyI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAGV,CACN;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF,CACP;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CACR;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,gBAEN3S,OAAA,CAACJ,cAAc;UAACgU,MAAM,EAAE1M,gBAAiB;UAAC2M,QAAQ,EAAEzM;QAAmB;UAAAoL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAC5E;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACP3S,OAAA;MAAAgS,QAAA,eACIhS,OAAA;QAAAgS,QAAA,EAAG;MAAoD;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACzR,EAAA,CAv3CID,eAAe;AAAA6S,EAAA,GAAf7S,eAAe;AAy3CrB,eAAeA,eAAe;AAAC,IAAA6S,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}