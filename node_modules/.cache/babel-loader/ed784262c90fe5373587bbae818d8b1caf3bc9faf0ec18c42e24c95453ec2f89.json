{"ast":null,"code":"var _jsxFileName = \"/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/ErrorBoundary.js\";\nimport React, { Component } from 'react';\nimport './ErrorBoundary.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ErrorBoundary extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hasError: false,\n      errorMessage: ''\n    };\n  }\n  static getDerivedStateFromError(error) {\n    var _error$message;\n    // Check for specific ArrayBuffer error\n    const isArrayBufferError = (_error$message = error.message) === null || _error$message === void 0 ? void 0 : _error$message.includes('ArrayBuffer allocation failed');\n    if (isArrayBufferError) {\n      return {\n        hasError: true,\n        errorMessage: 'Array Buffer Allocation Message'\n      };\n    }\n    return {\n      hasError: false,\n      errorMessage: ''\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error('ErrorBoundary caught an error', error, errorInfo);\n  }\n  componentDidUpdate(_, prevState) {\n    if (this.state.hasError && prevState.hasError !== this.state.hasError) {\n      // Trigger a page reload when an error is caught\n      setTimeout(() => {\n        window.location.reload();\n      }, 3000); // 3 seconds delay before reload\n    }\n  }\n  render() {\n    if (this.state.hasError) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-banner\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    }\n    return this.props.children;\n  }\n}\nexport default ErrorBoundary;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","ErrorBoundary","constructor","args","state","hasError","errorMessage","getDerivedStateFromError","error","_error$message","isArrayBufferError","message","includes","componentDidCatch","errorInfo","console","componentDidUpdate","_","prevState","setTimeout","window","location","reload","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","props"],"sources":["/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/ErrorBoundary.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './ErrorBoundary.css';\n\nclass ErrorBoundary extends Component {\n  state = { hasError: false, errorMessage: '' };\n\n  static getDerivedStateFromError(error) {\n    // Check for specific ArrayBuffer error\n    const isArrayBufferError = error.message?.includes('ArrayBuffer allocation failed');\n    if (isArrayBufferError) {\n      return { hasError: true, errorMessage: 'Array Buffer Allocation Message' };\n    }\n    return { hasError: false, errorMessage: '' };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('ErrorBoundary caught an error', error, errorInfo);\n  }\n\n  componentDidUpdate(_, prevState) {\n    if (this.state.hasError && prevState.hasError !== this.state.hasError) {\n      // Trigger a page reload when an error is caught\n      setTimeout(() => {\n        window.location.reload();\n      }, 3000); // 3 seconds delay before reload\n    }\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"error-banner\">\n          <p>{this.state.errorMessage}</p>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,SAASH,SAAS,CAAC;EAAAI,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACpCC,KAAK,GAAG;MAAEC,QAAQ,EAAE,KAAK;MAAEC,YAAY,EAAE;IAAG,CAAC;EAAA;EAE7C,OAAOC,wBAAwBA,CAACC,KAAK,EAAE;IAAA,IAAAC,cAAA;IACrC;IACA,MAAMC,kBAAkB,IAAAD,cAAA,GAAGD,KAAK,CAACG,OAAO,cAAAF,cAAA,uBAAbA,cAAA,CAAeG,QAAQ,CAAC,+BAA+B,CAAC;IACnF,IAAIF,kBAAkB,EAAE;MACtB,OAAO;QAAEL,QAAQ,EAAE,IAAI;QAAEC,YAAY,EAAE;MAAkC,CAAC;IAC5E;IACA,OAAO;MAAED,QAAQ,EAAE,KAAK;MAAEC,YAAY,EAAE;IAAG,CAAC;EAC9C;EAEAO,iBAAiBA,CAACL,KAAK,EAAEM,SAAS,EAAE;IAClCC,OAAO,CAACP,KAAK,CAAC,+BAA+B,EAAEA,KAAK,EAAEM,SAAS,CAAC;EAClE;EAEAE,kBAAkBA,CAACC,CAAC,EAAEC,SAAS,EAAE;IAC/B,IAAI,IAAI,CAACd,KAAK,CAACC,QAAQ,IAAIa,SAAS,CAACb,QAAQ,KAAK,IAAI,CAACD,KAAK,CAACC,QAAQ,EAAE;MACrE;MACAc,UAAU,CAAC,MAAM;QACfC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC1B,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ;EACF;EAEAC,MAAMA,CAAA,EAAG;IACP,IAAI,IAAI,CAACnB,KAAK,CAACC,QAAQ,EAAE;MACvB,oBACEL,OAAA;QAAKwB,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3BzB,OAAA;UAAAyB,QAAA,EAAI,IAAI,CAACrB,KAAK,CAACE;QAAY;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAEV;IAEA,OAAO,IAAI,CAACC,KAAK,CAACL,QAAQ;EAC5B;AACF;AAEA,eAAexB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}