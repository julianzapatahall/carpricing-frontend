{"ast":null,"code":"var _jsxFileName = \"/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/AnalysisBoard.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport PropTypes from \"prop-types\";\nimport { Chess } from \"chess.js\";\n//import { Chessboard } from 'react-chessboard';\nimport EditBoard from \"./EditBoard\";\nimport Chessboard from \"chessboardjsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STOCKFISH = window.STOCKFISH;\nconst game = new Chess();\nclass AnalysisBoard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orientation: \"white\",\n      evaluation: \"\",\n      bestLine: \"\",\n      currentPly: 1,\n      future: [],\n      ply0Game: true,\n      showEvaluation: false,\n      moveHistory: [],\n      fullGame: [],\n      importedGames: JSON.parse(localStorage.getItem('importedGames')) || [],\n      showDropdown: false,\n      selectedGame: null,\n      gamesDetails: [],\n      showEditBoard: false,\n      fen: this.props.fen || 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n      startFen: this.props.fen || 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n      fileInputKey: Date.now(),\n      // To reset the file input\n      showImportTabs: false,\n      inputMethod: 'chesscom',\n      opponentName: '',\n      topLines: [],\n      topEvaluations: []\n    };\n    this.handleKeyDown = event => {\n      switch (event.key) {\n        case \"ArrowRight\":\n          this.goToNextMove();\n          break;\n        case \"ArrowLeft\":\n          this.goToPreviousMove();\n          break;\n        case \"ArrowDown\":\n          this.goToStart();\n          break;\n        case \"ArrowUp\":\n          this.goToEnd();\n          break;\n        default:\n          break;\n      }\n    };\n    this.handleGameSelect = pgn => {\n      const game = new Chess();\n      game.loadPgn(pgn);\n      console.log(\"game.history()\");\n      console.log(game.history());\n      this.setState({\n        fen: game.fen() || \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n        showDropdown: true,\n        selectedGame: pgn\n      });\n      //this.future = tmp.history();\n      this.future = [];\n      this.moveHistory = game.history();\n      this.fullGame = this.moveHistory;\n      this.setState({\n        currentPly: this.moveHistory.length\n      });\n      this.engineGame().prepareMove();\n    };\n    this.fetchLichessGames = async username => {\n      const response = await fetch(`https://lichess.org/api/games/user/${username}?max=1000&moves=true&pgnInJson=false`);\n      const data = await response.text(); // Get the response as text (PGN format)\n      return data;\n    };\n    this.fetchChessComGames = async (username, maxGames = 1000) => {\n      const fetchGamesBatch = async archiveUrl => {\n        try {\n          const response = await fetch(archiveUrl);\n          if (!response.ok) {\n            const errorText = await response.text();\n            throw new Error(`Error fetching data: ${response.statusText} - ${errorText}`);\n          }\n          const data = await response.json();\n          return data.games;\n        } catch (error) {\n          console.error('Error fetching games batch:', error.message);\n          return []; // Return an empty array if there's an error\n        }\n      };\n      try {\n        // Fetch the archives (list of months)\n        const archivesResponse = await fetch(`https://api.chess.com/pub/player/${username}/games/archives`);\n        if (!archivesResponse.ok) {\n          const errorText = await archivesResponse.text();\n          throw new Error(`Error fetching archives: ${archivesResponse.statusText} - ${errorText}`);\n        }\n        const archivesData = await archivesResponse.json();\n        const archives = archivesData.archives.reverse(); // Reverse to start from the most recent\n\n        const results = [];\n        for (let archiveUrl of archives) {\n          if (results.length >= maxGames) break;\n          const games = await fetchGamesBatch(archiveUrl);\n          results.push(...games);\n          if (results.length >= maxGames) {\n            results.length = maxGames; // Trim to the maxGames limit\n            break;\n          }\n        }\n        return results;\n      } catch (error) {\n        console.error('Error fetching games from Chess.com:', error.message);\n        throw error;\n      }\n    };\n    this.handleFileSelect = async event => {\n      const file = event.target.files[0];\n      if (!file) {\n        return;\n      }\n      const reader = new FileReader();\n      reader.onload = e => {\n        const fullPgn = e.target.result;\n        let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n        let games = rawGames.map((game, index) => {\n          return ('[Event' + game).trim();\n        });\n        const details = games.map(pgn => {\n          const chess = new Chess();\n          chess.loadPgn(pgn);\n          const headers = chess.header();\n          return {\n            pgn: pgn,\n            details: `${headers.White} vs ${headers.Black}, ${headers.Result}, ${headers.Date}`\n          };\n        });\n        this.setState({\n          importedGames: [...this.state.importedGames, ...details],\n          selectedGame: null,\n          fileInputKey: Date.now() // Reset the file input\n        });\n        localStorage.setItem('importedGames', JSON.stringify([...this.state.importedGames, ...details]));\n      };\n      reader.readAsText(file);\n    };\n    this.handleRemoveFile = () => {\n      this.setState({\n        importedGames: [],\n        selectedGame: null,\n        fileInputKey: Date.now() // Reset the file input\n      });\n      localStorage.removeItem('importedGames');\n    };\n    this.displayGameDetails = pgn => {\n      const chess = new Chess();\n      chess.loadPgn(pgn);\n      const headers = chess.header();\n      return `${headers.White} vs ${headers.Black}, ${headers.Result}, ${headers.Date}`;\n    };\n    this.handleFlipBoard = () => {\n      this.setState(({\n        orientation\n      }) => ({\n        orientation: orientation === 'white' ? 'black' : 'white'\n      }));\n    };\n    this.handleAddLichessGames = async () => {\n      const {\n        opponentName,\n        importedGames\n      } = this.state;\n      const data = await this.fetchLichessGames(opponentName);\n      let rawGames = data.split(/\\[Event/gi).filter(Boolean);\n      const games = rawGames.map(game => '[Event' + game.trim());\n      this.setState({\n        importedGames: [...importedGames, ...games.map(pgn => ({\n          pgn,\n          details: this.displayGameDetails(pgn)\n        }))],\n        showImportTabs: false\n      });\n    };\n    this.handleAddChessComGames = async () => {\n      const {\n        opponentName,\n        importedGames\n      } = this.state;\n      const data = await this.fetchChessComGames(opponentName);\n      let games = data.map(game => game.pgn);\n      games = games.filter(function (element) {\n        return element !== undefined;\n      });\n      console.log(games);\n      this.setState({\n        importedGames: [...importedGames, ...games.map(pgn => ({\n          pgn,\n          details: this.displayGameDetails(pgn)\n        }))],\n        showImportTabs: false\n      });\n    };\n    this.downloadCombinedPgn = () => {\n      const {\n        importedGames\n      } = this.state;\n      const combinedPgn = importedGames.map(game => game.pgn).join('\\n\\n');\n      const blob = new Blob([combinedPgn], {\n        type: 'text/plain;charset=utf-8'\n      });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.style.display = 'none';\n      a.href = url;\n\n      // Suggest a default filename\n      a.download = 'imported_games.pgn';\n      document.body.appendChild(a);\n      a.click(); // This triggers the \"Save As\" dialog in most browsers\n\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n    };\n    this.handleResetBoard = () => {\n      game.reset();\n      this.setState({\n        fen: game.fen(),\n        selectedGame: null\n      });\n      this.future = [];\n      this.moveHistory = [];\n      this.fullGame = [];\n      this.engineGame().prepareMove();\n    };\n    this.toggleStockfishEvaluation = () => {\n      this.setState(prevState => ({\n        showEvaluation: !prevState.showEvaluation\n      }));\n    };\n    this.goToEnd = () => {\n      const moves = game.history();\n      const tmp = new Chess();\n      tmp.load(this.state.startFen);\n      const previous = moves.length + this.future.length - 1;\n      if (previous >= 0) {\n        if (moves.length > 0) {\n          for (var i = 0; i < moves.length; i += 1) {\n            tmp.move(moves[i]);\n          }\n        }\n        if (this.future.length - 1 >= 0) {\n          for (var i = 0; i < this.future.length; i += 1) {\n            tmp.move(this.future[i]);\n          }\n          const previous_fen = tmp.fen();\n          const previous_pgn = tmp.pgn();\n          this.future = [];\n          game.load(previous_fen);\n          game.loadPgn(previous_pgn);\n          this.setState({\n            fen: game.fen()\n          });\n          this.moveHistory = game.history();\n          this.setState({\n            currentPly: this.state.ply0Game ? this.moveHistory.length : this.moveHistory.length + 1\n          });\n          this.engineGame().prepareMove();\n        } else {\n          return;\n        }\n      } else {\n        return;\n      }\n    };\n    this.goToNextMove = () => {\n      if (this.future.length > 0) {\n        game.move(this.future[0]);\n        this.setState({\n          fen: game.fen()\n        });\n        this.future.shift();\n        this.moveHistory = game.history();\n        this.setState({\n          currentPly: this.state.ply0Game ? this.moveHistory.length : this.moveHistory.length + 1\n        });\n        this.engineGame().prepareMove();\n      }\n      return;\n    };\n    this.goToPreviousMove = () => {\n      console.log(\"game.history()\");\n      console.log(game.history());\n      const moves = this.moveHistory;\n      const tmp = new Chess();\n      tmp.load(this.state.startFen);\n      const previous = moves.length - 1;\n      if (previous >= 0) {\n        for (var i = 0; i < previous; i += 1) {\n          tmp.move(moves[i]);\n        }\n        const previous_fen = tmp.fen();\n        const previous_pgn = tmp.pgn();\n        this.future.unshift(moves[previous]);\n        tmp.move(moves[previous]);\n        game.load(previous_fen);\n        game.loadPgn(previous_pgn);\n        this.setState({\n          fen: previous_fen\n        });\n        this.moveHistory = game.history();\n        this.setState({\n          currentPly: this.state.ply0Game ? this.moveHistory.length : this.moveHistory.length + 1\n        });\n        this.engineGame().prepareMove();\n      }\n      return;\n    };\n    this.goToStart = () => {\n      const moves = this.moveHistory;\n      const tmp = new Chess();\n      tmp.load(this.state.startFen);\n      const previous_fen = tmp.fen();\n      const previous_pgn = tmp.pgn();\n      const previous = moves.length - 1;\n      if (previous >= 0) {\n        for (var i = 0; i < previous; i += 1) {\n          tmp.move(moves[i]);\n        }\n        this.future.unshift(...moves);\n        game.load(previous_fen);\n        game.loadPgn(previous_pgn);\n        this.setState({\n          fen: game.fen()\n        });\n        this.moveHistory = [];\n        this.setState({\n          currentPly: this.state.ply0Game ? this.moveHistory.length : this.moveHistory.length + 1\n        });\n        this.engineGame().prepareMove();\n      }\n      return;\n    };\n    this.toggleDropdown = () => {\n      this.setState(prevState => ({\n        showDropdown: !prevState.showDropdown\n      }));\n    };\n    this.goToMove = moveIndex => {\n      const moves = this.fullGame;\n      const tmp = new Chess();\n      for (let i = 0; i <= moveIndex; i++) {\n        tmp.move(moves[i]);\n      }\n      const previous_fen = tmp.fen();\n      const previous_pgn = tmp.pgn();\n      game.loadPgn(previous_pgn);\n      this.setState({\n        fen: previous_fen\n      });\n      const newMoveHistory = tmp.history();\n      this.moveHistory = newMoveHistory;\n      this.future = moves.slice(moveIndex + 1);\n      this.setState({\n        currentPly: this.state.ply0Game ? this.moveHistory.length : this.moveHistory.length + 1\n      });\n      this.engineGame().prepareMove();\n    };\n    this.engineGame = options => {\n      options = options || {};\n      let engine = typeof STOCKFISH === \"function\" ? STOCKFISH() : new Worker(options.stockfishjs || \"stockfish.js\");\n      engine.postMessage(\"uci\");\n      engine.onmessage = event => {\n        let line;\n        if (event && typeof event === \"object\") {\n          line = event.data;\n          const evaluation = this.extractEvaluation(line);\n          const bestLines = this.extractTopLines(line);\n          this.setState({\n            evaluation,\n            bestLine: bestLines\n          });\n        } else {\n          line = event;\n        }\n        const bestLines = this.extractTopLines(line);\n        this.setState({\n          previousOutput: bestLines\n        });\n      };\n      return {\n        prepareMove: function () {\n          engine.postMessage(\"position fen \" + game.fen());\n          engine.postMessage(\"setoption name MultiPV value 3\"); // Request top 3 lines\n          engine.postMessage(\"go depth 17\");\n        }\n      };\n    };\n    this.handleEditBoard = () => {\n      this.setState(prevState => ({\n        showEditBoard: !prevState.showEditBoard\n      }));\n    };\n    this.updateFenAndCloseEdit = newFen => {\n      game.reset();\n      game.load(newFen);\n      const parts = newFen.split(' ');\n      const isWhitesTurn = parts[1] === 'w';\n      this.setState({\n        fen: newFen,\n        showEditBoard: false,\n        currentPly: isWhitesTurn ? 0 : 1,\n        ply0Game: isWhitesTurn ? true : false,\n        startFen: newFen,\n        selectedGame: null\n      });\n      this.future = [];\n      this.moveHistory = [];\n      this.fullGame = [];\n      console.log(this.state.currentPly);\n      this.engineGame().prepareMove();\n    };\n    this.onDrop = ({\n      sourceSquare,\n      targetSquare\n    }) => {\n      const legalMoves = game.moves({\n        verbose: true\n      });\n      const move = legalMoves.find(move => move.from === sourceSquare && move.to === targetSquare);\n      if (!move) {\n        console.log(\"Illegal move\");\n        return;\n      }\n      if (move.san === this.future[0]) {\n        this.future.shift();\n      } else {\n        this.future = [];\n      }\n      game.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: \"q\"\n      });\n      this.moveHistory = game.history();\n      this.setState({\n        currentPly: this.state.ply0Game ? this.moveHistory.length : this.moveHistory.length + 1\n      });\n      this.fullGame = this.moveHistory.concat(this.future);\n      this.setState(prevState => ({\n        fen: game.fen()\n      }));\n      this.engineGame().prepareMove();\n    };\n    this.extractEvaluation = line => {\n      console.log(line);\n      const mateEvalMatch = line.match(/score mate (-?\\d+)/);\n      const evalMatch = line.match(/score cp (-?\\d+)/);\n      // Handle game over (mate on the board)\n      if (game.isCheckmate()) {\n        return game.turn() === \"w\" ? \"Mate on the board! Black wins!\" : \"Mate on the board! White wins!\";\n      }\n\n      // Handle forced mate evaluation\n      if (mateEvalMatch) {\n        const evaluation = parseInt(mateEvalMatch[1], 10);\n        if (evaluation > 0) {\n          return game.turn() === \"b\" ? `Black Mate in ${evaluation}` : `White Mate in ${evaluation}`;\n        }\n        return game.turn() === \"w\" ? `Black Mate in ${-evaluation}` : `White Mate in ${-evaluation}`;\n      }\n\n      // Handle normal evaluation\n      if (evalMatch) {\n        const evaluation = Math.round(parseInt(evalMatch[1]) * 0.01 * 100) / 100;\n        if (evaluation >= 0) {\n          return game.turn() === \"b\" ? -evaluation : `+${evaluation}`;\n        }\n        return game.turn() === \"w\" ? evaluation : `+${-evaluation}`;\n      }\n      return null;\n    };\n    this.extractTopLines = line => {\n      console.log(line);\n      const currentPly = this.state.currentPly;\n      const lines = line.split('\\n');\n      const topLines = [];\n      const topEvaluations = [];\n      lines.forEach(line => {\n        const multipvMatch = line.match(/multipv\\s+(\\d+)/);\n        const scoreMatch = line.match(/score (cp|mate) (-?\\d+)/);\n        const pvSanMatch = line.match(/pv\\s+(.*)/);\n        if (multipvMatch && pvSanMatch && scoreMatch) {\n          const multipv = parseInt(multipvMatch[1], 10);\n          const scoreType = scoreMatch[1];\n          const scoreValue = parseInt(scoreMatch[2], 10);\n          const evaluation = scoreType === 'mate' ? `Mate ${scoreValue}` : (scoreValue / 100).toFixed(2);\n          const moves = pvSanMatch[1].split(\" \");\n          const sanMoves = moves.map((move, index) => {\n            const moveNumber = index + currentPly + 1;\n            return moveNumber % 2 === 1 ? `${Math.floor((moveNumber + 1) / 2)}.${move}` : `${Math.floor((moveNumber + 1) / 2)}...${move}`;\n          });\n          topLines[multipv - 1] = sanMoves.join(\" \");\n          topEvaluations[multipv - 1] = evaluation;\n        }\n      });\n\n      // Filter out undefined entries and store the top 3 lines and evaluations in the state\n      this.setState({\n        topLines: topLines.filter(Boolean).slice(0, 3),\n        topEvaluations: topEvaluations.filter(Boolean).slice(0, 3)\n      });\n    };\n  }\n  componentDidMount() {\n    const combinedPgn = localStorage.getItem('combinedPgn');\n    if (combinedPgn) {\n      this.processCombinedPgn(combinedPgn);\n      localStorage.removeItem('combinedPgn');\n      this.future = [];\n    } else if (this.props.pgn) {\n      game.loadPgn(this.props.pgn);\n      this.future = [];\n      this.moveHistory = game.history();\n      this.fullGame = this.moveHistory.concat(this.future);\n      this.importedGames = [];\n    } else {\n      game.reset();\n      this.future = [];\n      this.moveHistory = [];\n      this.fullGame = [];\n      this.setState({\n        fen: this.props.fen\n      });\n    }\n    this.engineGame().prepareMove();\n    // Add keyboard event listener\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n  componentWillUnmount() {\n    // Remove keyboard event listener\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n  processCombinedPgn(combinedPgn) {\n    const rawGames = combinedPgn.split(/\\[Event/gi).filter(Boolean);\n    const games = rawGames.map(game => '[Event' + game.trim());\n    const details = games.map(pgn => {\n      const chess = new Chess();\n      chess.loadPgn(pgn);\n      const headers = chess.header();\n      return {\n        pgn: pgn,\n        details: `${headers.White} vs ${headers.Black}, ${headers.Result}, ${headers.Date}`\n      };\n    });\n    this.setState({\n      importedGames: details,\n      selectedGame: null,\n      showDropdown: true,\n      fen: this.props.fen || \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"\n    });\n    localStorage.setItem('importedGames', JSON.stringify(details));\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.selectedGame !== this.state.selectedGame && this.state.selectedGame) {\n      const chess = new Chess();\n      chess.loadPgn(this.state.selectedGame);\n      this.setState({\n        fen: chess.fen()\n      });\n    }\n    if (prevProps.pgn !== this.props.pgn && this.props.pgn) {\n      game.reset();\n      game.loadPgn(this.props.pgn);\n      this.setState({\n        fen: game.fen(),\n        currentPly: 1,\n        future: []\n      });\n      this.moveHistory = game.history();\n      this.engineGame().prepareMove();\n    }\n  }\n  render() {\n    const {\n      fen,\n      orientation,\n      evaluation,\n      bestLine,\n      currentPly,\n      future,\n      showEvaluation,\n      moveHistory,\n      fullGame,\n      importedGames,\n      showDropdown,\n      showEditBoard,\n      fileInputKey,\n      ply0Game,\n      selectedGame,\n      showImportTabs,\n      inputMethod,\n      topLines,\n      topEvaluations\n    } = this.state;\n    let headers = {};\n    if (selectedGame) {\n      console.log(selectedGame);\n      const chess = new Chess();\n      chess.loadPgn(selectedGame);\n      headers = chess.header();\n    }\n    const whiteResult = headers.Result === '1-0' ? 1 : headers.Result === '1/2-1/2' ? 0.5 : 0;\n    const blackResult = headers.Result === '0-1' ? 1 : headers.Result === '1/2-1/2' ? 0.5 : 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analysis-toolkit\",\n        id: \"EditingOff\",\n        style: {\n          display: showEditBoard ? \"none\" : \"block\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [showImportTabs ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"import-tabs\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tab-container\",\n              style: {\n                width: \"400px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tab\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: inputMethod === 'chesscom' ? 'tablinks active' : 'tablinks',\n                  onClick: () => this.setState({\n                    inputMethod: 'chesscom'\n                  }),\n                  children: \"Chess.com\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 645,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: inputMethod === 'lichess' ? 'tablinks active' : 'tablinks',\n                  onClick: () => this.setState({\n                    inputMethod: 'lichess'\n                  }),\n                  children: \"Lichess\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 646,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: inputMethod === 'pgn' ? 'tablinks active' : 'tablinks',\n                  onClick: () => this.setState({\n                    inputMethod: 'pgn'\n                  }),\n                  children: \"PGN\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 647,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tabcontent\",\n                style: {\n                  display: inputMethod === 'pgn' ? 'block' : 'none'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    onChange: this.handleFileSelect\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 652,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => this.setState({\n                      showImportTabs: false\n                    }),\n                    children: \"Add Game(s)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 653,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 651,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tabcontent\",\n                style: {\n                  display: inputMethod === 'lichess' ? 'block' : 'none'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"opponentUsername\",\n                    children: \"Lichess Username:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 659,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"opponentUsername\",\n                    value: this.state.opponentName,\n                    onChange: e => this.setState({\n                      opponentName: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 660,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: this.handleAddLichessGames,\n                    children: \"Add Game(s)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 666,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 658,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tabcontent\",\n                style: {\n                  display: inputMethod === 'chesscom' ? 'block' : 'none'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"opponentUsername\",\n                    children: \"Chess.com Username:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 672,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"opponentUsername\",\n                    value: this.state.opponentName,\n                    onChange: e => this.setState({\n                      opponentName: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 673,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: this.handleAddChessComGames,\n                    children: \"Add Game(s)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 679,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 9\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown-header\",\n                onClick: this.toggleDropdown,\n                children: [\"Imported Games: \", importedGames.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 11\n              }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"games-list\",\n                children: importedGames.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Click \\\"Upload New Game(s)\\\" to Import Games\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 693,\n                  columnNumber: 17\n                }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: importedGames.map((game, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"game-item\",\n                    onClick: () => this.handleGameSelect(game.pgn),\n                    children: game.details\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 697,\n                    columnNumber: 21\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 695,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"upload-button\",\n                onClick: () => this.setState({\n                  showImportTabs: true\n                }),\n                style: {\n                  backgroundColor: 'green',\n                  color: 'white',\n                  padding: '10px 15px',\n                  fontSize: '16px',\n                  position: 'absolute',\n                  marginTop: '386px'\n                },\n                children: \"Upload New Game(s)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"remove-file-button\",\n                onClick: this.handleRemoveFile,\n                style: {\n                  backgroundColor: 'red',\n                  color: 'white',\n                  padding: '10px 15px',\n                  fontSize: '16px',\n                  position: 'absolute',\n                  marginTop: '386px',\n                  marginLeft: '185px'\n                },\n                children: \"Clear Imported Game(s)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"download-button\",\n                onClick: this.downloadCombinedPgn,\n                style: {\n                  backgroundColor: 'yellow',\n                  color: 'black',\n                  padding: '10px 86px',\n                  fontSize: '16px',\n                  position: 'absolute',\n                  marginTop: '427px',\n                  marginLeft: '0px'\n                },\n                children: \"Download All Imported Games\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: boardsContainer,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"analysis-board-container\",\n              style: {\n                display: \"block\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Chessboard, {\n                position: fen,\n                width: 520,\n                pieces: customPieces({\n                  squareWidth: 65,\n                  isDragging: false\n                }),\n                onDrop: this.onDrop,\n                orientation: orientation,\n                boardStyle: boardStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 11\n          }, this), selectedGame && (orientation === \"white\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-upper-info-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [blackResult, \" \", headers.Black, \" (\", headers.BlackElo, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 5\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"white-upper-info-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [whiteResult, \" \", headers.White, \" (\", headers.WhiteElo, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 5\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"move-history\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: this.fullGame && this.fullGame.map((move, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: ply0Game ? index === currentPly - 1 ? 'selected' : '' : index === currentPly - 2 ? 'selected' : '',\n                onClick: () => this.goToMove(index),\n                children: [ply0Game ? index % 2 === 0 ? `${index / 2 + 1}. ` : `${(index - 1) / 2 + 1}...` : index % 2 === 0 ? `${index / 2 + 1}... ` : `${(index - 1) / 2 + 2}. `, move]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 761,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 759,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 11\n          }, this), selectedGame && (orientation === \"white\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"white-lower-info-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [whiteResult, \" \", headers.White, \" (\", headers.WhiteElo, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 5\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-lower-info-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [blackResult, \" \", headers.Black, \" (\", headers.BlackElo, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 5\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-panel\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.handleEditBoard,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.handleFlipBoard,\n              children: \"Flip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.handleResetBoard,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 793,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.toggleStockfishEvaluation,\n              children: \"\\uD83D\\uDC1F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 794,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.goToStart,\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 795,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.goToPreviousMove,\n              children: \"\\u21E6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.goToNextMove,\n              children: \"\\u21E8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.goToEnd,\n              children: \"End\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 13\n            }, this), showEvaluation && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stockfish-evaluation\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Evaluation\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 804,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Line\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 805,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 803,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 802,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: topEvaluations.map((evaluation, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: evaluation\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 811,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: topLines[index]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 812,\n                      columnNumber: 23\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 810,\n                    columnNumber: 21\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 808,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 801,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 800,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 9\n      }, this), showEditBoard && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-board-container\",\n        id: \"EditingOn\",\n        style: {\n          display: \"block\"\n        },\n        children: /*#__PURE__*/_jsxDEV(EditBoard, {\n          in_fen: fen,\n          updateFenAndClose: this.updateFenAndCloseEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 7\n    }, this);\n  }\n}\nAnalysisBoard.propTypes = {\n  children: PropTypes.func,\n  fen: PropTypes.string,\n  pgn: PropTypes.string\n};\nexport default AnalysisBoard;\nconst customPieces = ({\n  squareWidth,\n  isDragging\n}) => ({\n  wK: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/4/42/Chess_klt45.svg\",\n    alt: \"White King\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 837,\n    columnNumber: 5\n  }, this),\n  wQ: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/1/15/Chess_qlt45.svg\",\n    alt: \"White Queen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 847,\n    columnNumber: 5\n  }, this),\n  wR: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg\",\n    alt: \"White Rook\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 857,\n    columnNumber: 5\n  }, this),\n  wB: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/b/b1/Chess_blt45.svg\",\n    alt: \"White Bishop\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 867,\n    columnNumber: 5\n  }, this),\n  wN: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/7/70/Chess_nlt45.svg\",\n    alt: \"White Knight\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 877,\n    columnNumber: 5\n  }, this),\n  wP: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/4/45/Chess_plt45.svg\",\n    alt: \"White Pawn\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 887,\n    columnNumber: 5\n  }, this),\n  bK: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/f/f0/Chess_kdt45.svg\",\n    alt: \"Black King\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 897,\n    columnNumber: 5\n  }, this),\n  bQ: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/4/47/Chess_qdt45.svg\",\n    alt: \"Black Queen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 907,\n    columnNumber: 5\n  }, this),\n  bR: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg\",\n    alt: \"Black Rook\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 917,\n    columnNumber: 5\n  }, this),\n  bB: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/9/98/Chess_bdt45.svg\",\n    alt: \"Black Bishop\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 927,\n    columnNumber: 5\n  }, this),\n  bN: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/e/ef/Chess_ndt45.svg\",\n    alt: \"Black Knight\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 937,\n    columnNumber: 5\n  }, this),\n  bP: () => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: isDragging ? squareWidth * 1.75 : squareWidth,\n      height: isDragging ? squareWidth * 1.75 : squareWidth\n    },\n    src: \"https://upload.wikimedia.org/wikipedia/commons/c/c7/Chess_pdt45.svg\",\n    alt: \"Black Pawn\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 947,\n    columnNumber: 5\n  }, this)\n});\nconst boardStyle = {\n  borderRadius: \"5px\",\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\n};\nconst boardsContainer = {\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  alignItems: \"center\"\n};","map":{"version":3,"names":["React","Component","axios","PropTypes","Chess","EditBoard","Chessboard","jsxDEV","_jsxDEV","STOCKFISH","window","game","AnalysisBoard","constructor","args","state","orientation","evaluation","bestLine","currentPly","future","ply0Game","showEvaluation","moveHistory","fullGame","importedGames","JSON","parse","localStorage","getItem","showDropdown","selectedGame","gamesDetails","showEditBoard","fen","props","startFen","fileInputKey","Date","now","showImportTabs","inputMethod","opponentName","topLines","topEvaluations","handleKeyDown","event","key","goToNextMove","goToPreviousMove","goToStart","goToEnd","handleGameSelect","pgn","loadPgn","console","log","history","setState","length","engineGame","prepareMove","fetchLichessGames","username","response","fetch","data","text","fetchChessComGames","maxGames","fetchGamesBatch","archiveUrl","ok","errorText","Error","statusText","json","games","error","message","archivesResponse","archivesData","archives","reverse","results","push","handleFileSelect","file","target","files","reader","FileReader","onload","e","fullPgn","result","rawGames","split","filter","Boolean","map","index","trim","details","chess","headers","header","White","Black","Result","setItem","stringify","readAsText","handleRemoveFile","removeItem","displayGameDetails","handleFlipBoard","handleAddLichessGames","handleAddChessComGames","element","undefined","downloadCombinedPgn","combinedPgn","join","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","style","display","href","download","body","appendChild","click","revokeObjectURL","removeChild","handleResetBoard","reset","toggleStockfishEvaluation","prevState","moves","tmp","load","previous","i","move","previous_fen","previous_pgn","shift","unshift","toggleDropdown","goToMove","moveIndex","newMoveHistory","slice","options","engine","Worker","stockfishjs","postMessage","onmessage","line","extractEvaluation","bestLines","extractTopLines","previousOutput","handleEditBoard","updateFenAndCloseEdit","newFen","parts","isWhitesTurn","onDrop","sourceSquare","targetSquare","legalMoves","verbose","find","from","to","san","promotion","concat","mateEvalMatch","match","evalMatch","isCheckmate","turn","parseInt","Math","round","lines","forEach","multipvMatch","scoreMatch","pvSanMatch","multipv","scoreType","scoreValue","toFixed","sanMoves","moveNumber","floor","componentDidMount","processCombinedPgn","addEventListener","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","render","whiteResult","blackResult","children","className","id","width","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","htmlFor","value","backgroundColor","color","padding","fontSize","position","marginTop","marginLeft","boardsContainer","pieces","customPieces","squareWidth","isDragging","boardStyle","BlackElo","WhiteElo","in_fen","updateFenAndClose","propTypes","func","string","wK","height","src","alt","wQ","wR","wB","wN","wP","bK","bQ","bR","bB","bN","bP","borderRadius","boxShadow","justifyContent","alignItems"],"sources":["/Users/julianzapata-hall/Documents/Renamed/my-react-website/client/src/AnalysisBoard.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\nimport PropTypes from \"prop-types\";\nimport { Chess } from \"chess.js\";\n//import { Chessboard } from 'react-chessboard';\nimport EditBoard from \"./EditBoard\";\nimport Chessboard from \"chessboardjsx\";\n\nconst STOCKFISH = window.STOCKFISH;\nconst game = new Chess();\n\nclass AnalysisBoard extends Component {\n  static propTypes = {\n    children: PropTypes.func,\n    fen: PropTypes.string,\n    pgn: PropTypes.string,\n  };\n  \n  state = {\n    orientation: \"white\",\n    evaluation: \"\",\n    bestLine: \"\",\n    currentPly: 1,\n    future: [],\n    ply0Game:true,\n    showEvaluation: false,\n    moveHistory: [],\n    fullGame: [],\n    importedGames: JSON.parse(localStorage.getItem('importedGames')) || [],\n    showDropdown: false,\n    selectedGame: null,\n    gamesDetails: [],\n    showEditBoard: false,\n    fen: this.props.fen || 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n    startFen: this.props.fen || 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n    fileInputKey: Date.now(), // To reset the file input\n    showImportTabs: false,\n  inputMethod: 'chesscom',\n  opponentName: '',\n  topLines: [],\n  topEvaluations: []\n  };\n\n  componentDidMount() {\n    const combinedPgn = localStorage.getItem('combinedPgn');\n    if (combinedPgn) {\n        this.processCombinedPgn(combinedPgn);\n        localStorage.removeItem('combinedPgn');\n        this.future = [];\n    }else if (this.props.pgn) {\n      game.loadPgn(this.props.pgn);\n      this.future = [];\n      this.moveHistory = game.history();\n      this.fullGame = this.moveHistory.concat(this.future);\n      this.importedGames = [];\n    } else {\n      game.reset();\n      this.future = [];\n      this.moveHistory = [];\n      this.fullGame = [];\n      this.setState({ fen: this.props.fen });\n    }\n    this.engineGame().prepareMove();\n    // Add keyboard event listener\n  document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n  componentWillUnmount() {\n    // Remove keyboard event listener\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\nprocessCombinedPgn(combinedPgn) {\n  const rawGames = combinedPgn.split(/\\[Event/gi).filter(Boolean);\n  const games = rawGames.map(game => '[Event' + game.trim());\n\n  const details = games.map(pgn => {\n      const chess = new Chess();\n      chess.loadPgn(pgn);\n      const headers = chess.header();\n      return {\n          pgn: pgn,\n          details: `${headers.White} vs ${headers.Black}, ${headers.Result}, ${headers.Date}`\n      };\n  });\n\n  this.setState({\n      importedGames: details,\n      selectedGame: null,\n      showDropdown: true,\n      fen: this.props.fen || \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"\n    });\n\n  localStorage.setItem('importedGames', JSON.stringify(details));\n}\n  handleKeyDown = (event) => {\n    switch (event.key) {\n      case \"ArrowRight\":\n        this.goToNextMove();\n        break;\n      case \"ArrowLeft\":\n        this.goToPreviousMove();\n        break;\n      case \"ArrowDown\":\n        this.goToStart();\n        break;\n      case \"ArrowUp\":\n        this.goToEnd();\n        break;\n      default:\n        break;\n    }\n  };\n  \n\n  handleGameSelect = (pgn) => {\n    const game = new Chess();\n    game.loadPgn(pgn);\n\n    console.log(\"game.history()\")\n    console.log(game.history())\n    this.setState({ \n      fen: game.fen()|| \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n      showDropdown: true,\n      selectedGame:pgn,\n    });\n    //this.future = tmp.history();\n    this.future = [];\n    this.moveHistory = game.history();\n    this.fullGame = this.moveHistory;\n    this.setState({ currentPly:this.moveHistory.length});\n    this.engineGame().prepareMove();\n  };\nfetchLichessGames = async (username) => {\n    const response = await fetch(`https://lichess.org/api/games/user/${username}?max=1000&moves=true&pgnInJson=false`);\n    const data = await response.text(); // Get the response as text (PGN format)\n    return data;\n};\n\n\nfetchChessComGames = async (username, maxGames = 1000) => {\n  const fetchGamesBatch = async (archiveUrl) => {\n      try {\n          const response = await fetch(archiveUrl);\n          if (!response.ok) {\n              const errorText = await response.text();\n              throw new Error(`Error fetching data: ${response.statusText} - ${errorText}`);\n          }\n\n          const data = await response.json();\n          return data.games;\n      } catch (error) {\n          console.error('Error fetching games batch:', error.message);\n          return []; // Return an empty array if there's an error\n      }\n  };\n\n  try {\n      // Fetch the archives (list of months)\n      const archivesResponse = await fetch(`https://api.chess.com/pub/player/${username}/games/archives`);\n      if (!archivesResponse.ok) {\n          const errorText = await archivesResponse.text();\n          throw new Error(`Error fetching archives: ${archivesResponse.statusText} - ${errorText}`);\n      }\n      const archivesData = await archivesResponse.json();\n      const archives = archivesData.archives.reverse(); // Reverse to start from the most recent\n\n      const results = [];\n      for (let archiveUrl of archives) {\n          if (results.length >= maxGames) break;\n\n          const games = await fetchGamesBatch(archiveUrl);\n          results.push(...games);\n\n          if (results.length >= maxGames) {\n              results.length = maxGames; // Trim to the maxGames limit\n              break;\n          }\n      }\n\n      return results;\n  } catch (error) {\n      console.error('Error fetching games from Chess.com:', error.message);\n      throw error;\n  }\n};\n\n  handleFileSelect = async (event) => {\n    const file = event.target.files[0];\n    if (!file) {\n      return;\n    }\n  \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const fullPgn = e.target.result;\n      let rawGames = fullPgn.split(/\\[Event/gi).filter(Boolean);\n      let games = rawGames.map((game, index) => {\n        return ('[Event' + game).trim();\n      });\n      const details = games.map(pgn => {\n        const chess = new Chess();\n        chess.loadPgn(pgn);\n        const headers = chess.header();\n        return {\n          pgn: pgn,\n          details: `${headers.White} vs ${headers.Black}, ${headers.Result}, ${headers.Date}`\n        };\n      });\n  \n      this.setState({\n        importedGames: [...this.state.importedGames, ...details],\n        selectedGame: null,\n        fileInputKey: Date.now() // Reset the file input\n      });\n      localStorage.setItem('importedGames', JSON.stringify([...this.state.importedGames, ...details]));\n    };\n    reader.readAsText(file);\n  };\n  \n\n  handleRemoveFile = () => {\n    this.setState({\n      importedGames: [],\n      selectedGame: null,\n      fileInputKey: Date.now() // Reset the file input\n    });\n    localStorage.removeItem('importedGames');\n  };\n\n  displayGameDetails = (pgn) => {\n    const chess = new Chess();\n    chess.loadPgn(pgn);\n    const headers = chess.header();\n    return `${headers.White} vs ${headers.Black}, ${headers.Result}, ${headers.Date}`;\n  };\n\n  handleFlipBoard = () => {\n    this.setState(({ orientation }) => ({\n      orientation: orientation === 'white' ? 'black' : 'white',\n    }));\n  };\n\n  \n\n  handleAddLichessGames = async () => {\n    const { opponentName, importedGames } = this.state;\n    const data = await this.fetchLichessGames(opponentName);\n    let rawGames = data.split(/\\[Event/gi).filter(Boolean);\n    const games = rawGames.map(game => '[Event' + game.trim());\n  \n    this.setState({\n      importedGames: [...importedGames, ...games.map(pgn => ({ pgn, details: this.displayGameDetails(pgn) }))],\n      showImportTabs: false,\n    });\n  };\n\n  \n  handleAddChessComGames = async () => {\n    const { opponentName, importedGames } = this.state;\n    const data = await this.fetchChessComGames(opponentName);\n    let games = data.map(game => game.pgn);\n    games = games.filter(function( element ) {\n      return element !== undefined;\n   });\n    console.log(games);\n    \n    this.setState({\n      importedGames: [...importedGames, ...games.map(pgn => ({ pgn, details: this.displayGameDetails(pgn) }))],\n      showImportTabs: false,\n    });\n  };\n\n  \n  downloadCombinedPgn = () => {\n    const { importedGames } = this.state;\n    const combinedPgn = importedGames.map(game => game.pgn).join('\\n\\n');\n    \n    const blob = new Blob([combinedPgn], { type: 'text/plain;charset=utf-8' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.style.display = 'none';\n    a.href = url;\n    \n    // Suggest a default filename\n    a.download = 'imported_games.pgn';\n    \n    document.body.appendChild(a);\n    a.click();  // This triggers the \"Save As\" dialog in most browsers\n    \n    window.URL.revokeObjectURL(url);\n    document.body.removeChild(a);\n};\n\n  \n\n  handleResetBoard = () => {\n    game.reset();\n    this.setState(({ fen: game.fen() , selectedGame: null}));\n    this.future = [];\n    this.moveHistory = [];\n    this.fullGame = [];\n    this.engineGame().prepareMove();\n  };\n\n  toggleStockfishEvaluation = () => {\n    this.setState(prevState => ({\n      showEvaluation: !prevState.showEvaluation\n    }));\n  };\n\n\n  goToEnd = () => {\n    const moves = game.history();\n    const tmp = new Chess();\n    tmp.load(this.state.startFen);\n    const previous = moves.length + this.future.length - 1;\n    if (previous >= 0) {\n      if (moves.length > 0) {\n        for (var i = 0; i < moves.length; i += 1) {\n          tmp.move(moves[i]);\n        }\n      }\n\n      if (this.future.length - 1 >= 0) {\n        for (var i = 0; i < this.future.length; i += 1) {\n          tmp.move(this.future[i]);\n        }\n        const previous_fen = tmp.fen();\n        const previous_pgn = tmp.pgn();\n        this.future = [];\n        game.load(previous_fen);\n        game.loadPgn(previous_pgn);\n        this.setState(({ fen: game.fen() }));\n        this.moveHistory = game.history();\n        this.setState({currentPly: this.state.ply0Game?this.moveHistory.length:this.moveHistory.length+1});\n        this.engineGame().prepareMove();\n        \n        \n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  };\n\n  goToNextMove = () => {\n    if (this.future.length > 0) {\n      game.move(this.future[0]);\n      this.setState(({ fen: game.fen() }));\n      this.future.shift();\n      this.moveHistory = game.history();\n      this.setState({currentPly: this.state.ply0Game?this.moveHistory.length:this.moveHistory.length+1});\n      this.engineGame().prepareMove();\n      \n    }\n    return;\n  };\n\n  goToPreviousMove = () => {\n    console.log(\"game.history()\")\n    console.log(game.history())\n    const moves = this.moveHistory; \n    const tmp = new Chess();\n    tmp.load(this.state.startFen);\n    const previous = moves.length - 1;\n    if (previous >= 0) {\n      for (var i = 0; i < previous; i += 1) {\n        tmp.move(moves[i]);\n      }\n      const previous_fen = tmp.fen();\n\n      const previous_pgn = tmp.pgn();\n      this.future.unshift(moves[previous]);\n      tmp.move(moves[previous]);\n      game.load(previous_fen);\n      game.loadPgn(previous_pgn);\n      this.setState({ fen: previous_fen });\n      this.moveHistory = game.history();\n      this.setState({currentPly: this.state.ply0Game?this.moveHistory.length:this.moveHistory.length+1});\n      this.engineGame().prepareMove();\n      \n    }\n    return;\n  };\n\n  goToStart = () => {\n    const moves = this.moveHistory; \n    const tmp = new Chess();\n    tmp.load(this.state.startFen);\n    const previous_fen = tmp.fen();\n    const previous_pgn = tmp.pgn();\n    const previous = moves.length - 1;\n    if (previous >= 0) {\n      for (var i = 0; i < previous; i += 1) {\n        tmp.move(moves[i]);\n      }\n      this.future.unshift(...moves);\n      game.load(previous_fen);\n      game.loadPgn(previous_pgn);\n      this.setState(({ fen: game.fen() }));\n      this.moveHistory = [];\n      this.setState({currentPly: this.state.ply0Game?this.moveHistory.length:this.moveHistory.length+1});\n      this.engineGame().prepareMove();\n      \n    }\n    return;\n  };\n  \n\n  toggleDropdown = () => {\n    this.setState((prevState) => ({\n      showDropdown: !prevState.showDropdown,\n    }));\n  };\n\n  goToMove = (moveIndex) => {\n    const moves = this.fullGame;\n    const tmp = new Chess();\n\n    for (let i = 0; i <= moveIndex; i++) {\n      tmp.move(moves[i]);\n    }\n\n    const previous_fen = tmp.fen();\n    const previous_pgn = tmp.pgn();\n    game.loadPgn(previous_pgn);\n    this.setState({ fen: previous_fen });\n\n    const newMoveHistory = tmp.history();\n    this.moveHistory = newMoveHistory;\n    this.future = moves.slice(moveIndex + 1);\n    this.setState({currentPly: this.state.ply0Game?this.moveHistory.length:this.moveHistory.length+1});\n    this.engineGame().prepareMove();\n    \n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.selectedGame !== this.state.selectedGame && this.state.selectedGame) {\n      const chess = new Chess();\n      chess.loadPgn(this.state.selectedGame);\n      this.setState({ fen: chess.fen() });\n    }\n    if (prevProps.pgn !== this.props.pgn && this.props.pgn) {\n      game.reset();\n      game.loadPgn(this.props.pgn);\n      this.setState({ fen: game.fen(), currentPly: 1, future: [] });\n      this.moveHistory = game.history();\n      this.engineGame().prepareMove();\n    }\n  }\n\n  engineGame = (options) => {\n    options = options || {};\n  \n    let engine =\n      typeof STOCKFISH === \"function\"\n        ? STOCKFISH()\n        : new Worker(options.stockfishjs || \"stockfish.js\");\n  \n    engine.postMessage(\"uci\");\n  \n    engine.onmessage = (event) => {\n      let line;\n    \n      if (event && typeof event === \"object\") {\n        line = event.data;\n        const evaluation = this.extractEvaluation(line);\n        const bestLines = this.extractTopLines(line);\n        this.setState({ evaluation, bestLine: bestLines });\n      } else {\n        line = event;\n      }\n    \n      const bestLines = this.extractTopLines(line);\n      this.setState({ previousOutput: bestLines });\n    };\n    \n  \n    return {\n      prepareMove: function () {\n        engine.postMessage(\"position fen \" + game.fen());\n        engine.postMessage(\"setoption name MultiPV value 3\");  // Request top 3 lines\n        engine.postMessage(\"go depth 17\");\n      },\n    };\n        \n  };\n  \n\n  handleEditBoard = () => {\n    this.setState(prevState => ({\n      showEditBoard: !prevState.showEditBoard\n    }));\n  };\n\n  updateFenAndCloseEdit = (newFen) => {\n    game.reset();\n    game.load(newFen);\n    const parts = newFen.split(' ');\n    const isWhitesTurn = parts[1] === 'w';\n    this.setState({\n      fen: newFen,\n      showEditBoard: false,\n      currentPly: isWhitesTurn ? 0 : 1,\n      ply0Game:isWhitesTurn? true: false,\n      startFen:newFen,\n      selectedGame:null\n    });\n    this.future = [];\n    this.moveHistory = [];\n    this.fullGame = [];\n    console.log(this.state.currentPly);\n    this.engineGame().prepareMove();\n  };\n\n  onDrop = ({ sourceSquare, targetSquare }) => {\n    \n    const legalMoves = game.moves({ verbose: true });\n    const move = legalMoves.find(\n      (move) => move.from === sourceSquare && move.to === targetSquare\n    );\n\n    if (!move) {\n      console.log(\"Illegal move\");\n      return;\n    }\n\n    if (move.san === this.future[0]) {\n      this.future.shift();\n    } else {\n      this.future = [];\n    }\n\n    game.move({ from: sourceSquare, to: targetSquare, promotion: \"q\" });\n    this.moveHistory = game.history();\n    this.setState({currentPly: this.state.ply0Game?this.moveHistory.length:this.moveHistory.length+1});\n    this.fullGame = this.moveHistory.concat(this.future);\n    this.setState((prevState) => ({\n      fen: game.fen()\n    }));\n    this.engineGame().prepareMove();\n    \n  };\n\n  extractEvaluation = (line) => {\n    console.log(line);\n    const mateEvalMatch = line.match(/score mate (-?\\d+)/);\n    const evalMatch = line.match(/score cp (-?\\d+)/);\n    // Handle game over (mate on the board)\n    if (game.isCheckmate()) {\n        return game.turn() === \"w\" ? \"Mate on the board! Black wins!\" : \"Mate on the board! White wins!\";\n    }\n\n    // Handle forced mate evaluation\n    if (mateEvalMatch) {\n        const evaluation = parseInt(mateEvalMatch[1], 10);\n        if (evaluation > 0) {\n            return game.turn() === \"b\" ? `Black Mate in ${evaluation}` : `White Mate in ${evaluation}`;\n        }\n        return game.turn() === \"w\" ? `Black Mate in ${-evaluation}` : `White Mate in ${-evaluation}`;\n    }\n\n    // Handle normal evaluation\n    if (evalMatch) {\n        const evaluation = Math.round(parseInt(evalMatch[1]) * 0.01 * 100) / 100;\n        if (evaluation >= 0) {\n            return game.turn() === \"b\" ? -evaluation : `+${evaluation}`;\n        }\n        return game.turn() === \"w\" ? evaluation : `+${-evaluation}`;\n    }\n\n    return null;\n};\n\n\n  \n\nextractTopLines = (line) => {\n  console.log(line);\n  const currentPly = this.state.currentPly;\n  const lines = line.split('\\n');\n  const topLines = [];\n  const topEvaluations = [];\n\n  lines.forEach((line) => {\n      const multipvMatch = line.match(/multipv\\s+(\\d+)/);\n      const scoreMatch = line.match(/score (cp|mate) (-?\\d+)/);\n      const pvSanMatch = line.match(/pv\\s+(.*)/);\n\n      if (multipvMatch && pvSanMatch && scoreMatch) {\n          const multipv = parseInt(multipvMatch[1], 10);\n          const scoreType = scoreMatch[1];\n          const scoreValue = parseInt(scoreMatch[2], 10);\n          const evaluation = scoreType === 'mate' ? `Mate ${scoreValue}` : (scoreValue / 100).toFixed(2);\n          const moves = pvSanMatch[1].split(\" \");\n          const sanMoves = moves.map((move, index) => {\n              const moveNumber = index + currentPly + 1;\n              return moveNumber % 2 === 1\n                  ? `${Math.floor((moveNumber + 1) / 2)}.${move}`\n                  : `${Math.floor((moveNumber + 1) / 2)}...${move}`;\n          });\n\n          topLines[multipv - 1] = sanMoves.join(\" \");\n          topEvaluations[multipv - 1] = evaluation;\n      }\n  });\n\n  // Filter out undefined entries and store the top 3 lines and evaluations in the state\n  this.setState({\n      topLines: topLines.filter(Boolean).slice(0, 3),\n      topEvaluations: topEvaluations.filter(Boolean).slice(0, 3)\n  });\n};\n\n\n\n  \n  \n  \n  render() {\n    const { fen, orientation, evaluation, bestLine, currentPly, future, showEvaluation, moveHistory, fullGame, importedGames, showDropdown, showEditBoard, fileInputKey, ply0Game, selectedGame,showImportTabs, \n      inputMethod,topLines, topEvaluations } = this.state;\n    \n    let headers = {};\n    if (selectedGame) {\n      console.log(selectedGame);\n      const chess = new Chess();\n      chess.loadPgn(selectedGame);\n      headers = chess.header();\n    }\n  \n    const whiteResult = headers.Result === '1-0' ? 1 : (headers.Result === '1/2-1/2' ? 0.5 : 0);\n    const blackResult = headers.Result === '0-1' ? 1 : (headers.Result === '1/2-1/2' ? 0.5 : 0);\n  \n    return (\n      <div>\n        <div className=\"analysis-toolkit\" id=\"EditingOff\" style={{ display: showEditBoard ? \"none\" : \"block\" }}>\n          \n          <div>\n          {showImportTabs ? (\n        <div className=\"import-tabs\">\n          <div className=\"tab-container\" style={{width:\"400px\"}}>\n            <div className=\"tab\">\n              <button className={inputMethod === 'chesscom' ? 'tablinks active' : 'tablinks'} onClick={() => this.setState({ inputMethod: 'chesscom' })}>Chess.com</button>\n              <button className={inputMethod === 'lichess' ? 'tablinks active' : 'tablinks'} onClick={() => this.setState({ inputMethod: 'lichess' })}>Lichess</button>\n              <button className={inputMethod === 'pgn' ? 'tablinks active' : 'tablinks'} onClick={() => this.setState({ inputMethod: 'pgn' })}>PGN</button>\n            </div>\n\n            <div className=\"tabcontent\" style={{ display: inputMethod === 'pgn' ? 'block' : 'none' }}>\n              <div className=\"form-group\">\n                <input type=\"file\" onChange={this.handleFileSelect} />\n                <button onClick={() => this.setState({ showImportTabs: false })}>Add Game(s)</button>\n              </div>\n            </div>\n\n            <div className=\"tabcontent\" style={{ display: inputMethod === 'lichess' ? 'block' : 'none' }}>\n              <div className=\"form-group\">\n                <label htmlFor=\"opponentUsername\">Lichess Username:</label>\n                <input \n                  type=\"text\" \n                  id=\"opponentUsername\" \n                  value={this.state.opponentName} \n                  onChange={(e) => this.setState({ opponentName: e.target.value })} \n                />\n                <button onClick={this.handleAddLichessGames}>Add Game(s)</button>\n              </div>\n            </div>\n\n            <div className=\"tabcontent\" style={{ display: inputMethod === 'chesscom' ? 'block' : 'none' }}>\n              <div className=\"form-group\">\n                <label htmlFor=\"opponentUsername\">Chess.com Username:</label>\n                <input \n                  type=\"text\" \n                  id=\"opponentUsername\" \n                  value={this.state.opponentName} \n                  onChange={(e) => this.setState({ opponentName: e.target.value })} \n                />\n                <button onClick={this.handleAddChessComGames}>Add Game(s)</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div>\n          <div>\n          <div className=\"dropdown-header\" onClick={this.toggleDropdown}>\n            Imported Games: {importedGames.length}\n          </div>\n          {showDropdown && (\n            <div className=\"games-list\">\n              {importedGames.length === 0 ? (\n                <p>Click \"Upload New Game(s)\" to Import Games</p>\n              ) : (\n                <ul>\n                  {importedGames.map((game, index) => (\n                    <li className=\"game-item\" key={index} onClick={() => this.handleGameSelect(game.pgn)}>\n                      {game.details}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          )}\n          </div>\n          <div className=\"file-buttons\">\n  <button \n    className=\"upload-button\" \n    onClick={() => this.setState({ showImportTabs: true })}\n    style={{ backgroundColor: 'green', color: 'white', padding: '10px 15px', fontSize: '16px',position: 'absolute', marginTop: '386px' }}\n  >\n    Upload New Game(s)\n  </button>\n  <button \n    className=\"remove-file-button\" \n    onClick={this.handleRemoveFile} \n    style={{ backgroundColor: 'red', color: 'white', padding: '10px 15px', fontSize: '16px', position: 'absolute',marginTop: '386px',marginLeft: '185px' }}\n  >\n    Clear Imported Game(s)\n  </button>\n\n  <button\n  className=\"download-button\"\n  onClick={this.downloadCombinedPgn}\n  style={{ backgroundColor: 'yellow', color: 'black', padding: '10px 86px', fontSize: '16px', position: 'absolute', marginTop: '427px',marginLeft: '0px' }}\n>\n  Download All Imported Games\n</button>\n\n  </div>\n  </div>\n      )}\n\n          <div style={boardsContainer}>\n            <div className=\"analysis-board-container\" style={{ display: \"block\" }}>\n              <Chessboard\n                position={fen}\n                width={520}\n                pieces={customPieces({ squareWidth:65, isDragging: false })}\n                onDrop={this.onDrop}\n                orientation={orientation}\n                boardStyle={boardStyle}\n              />\n            </div>\n          </div>\n          {selectedGame && (\n  orientation === \"white\" ? (\n    <div className=\"black-upper-info-bar\">\n      <span>{blackResult} {headers.Black} ({headers.BlackElo})</span>\n    </div>\n  ) : (\n    <div className=\"white-upper-info-bar\">\n      <span>{whiteResult} {headers.White} ({headers.WhiteElo})</span>\n    </div>\n  )\n)}\n\n          <div className=\"move-history\">\n            <ul>\n              {this.fullGame && this.fullGame.map((move, index) => (\n                <li\n                  key={index}\n                  className={ply0Game ? (index === currentPly - 1 ? 'selected' : '') : (index === currentPly - 2 ? 'selected' : '')}\n                  onClick={() => this.goToMove(index)}\n                >\n                  {ply0Game ? (\n                    index % 2 === 0 ? `${index / 2 + 1}. ` : `${(index - 1) / 2 + 1}...`\n                  ) : (\n                    index % 2 === 0 ? `${index / 2 + 1}... ` : `${(index - 1) / 2 + 2}. `\n                  )}\n                  {move}\n                </li>\n              ))}\n            </ul>\n            \n          </div>\n          {selectedGame && (\n  orientation === \"white\" ? (\n    <div className=\"white-lower-info-bar\">\n      <span>{whiteResult} {headers.White} ({headers.WhiteElo})</span>\n    </div>\n    \n  ) : (\n    <div className=\"black-lower-info-bar\">\n      <span>{blackResult} {headers.Black} ({headers.BlackElo})</span>\n    </div>\n  )\n)}\n\n          <div className=\"control-panel\">\n            <button onClick={this.handleEditBoard}>Edit</button>\n            <button onClick={this.handleFlipBoard}>Flip</button>\n            <button onClick={this.handleResetBoard}>Reset</button>\n            <button onClick={this.toggleStockfishEvaluation}>🐟</button>\n            <button onClick={this.goToStart}>Start</button>\n            <button onClick={this.goToPreviousMove}>⇦</button>\n            <button onClick={this.goToNextMove}>⇨</button>\n            <button onClick={this.goToEnd}>End</button>\n            {showEvaluation && (\n            <div className=\"stockfish-evaluation\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>Evaluation</th>\n                    <th>Line</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {topEvaluations.map((evaluation, index) => (\n                    <tr key={index}>\n                      <td>{evaluation}</td>\n                      <td>{topLines[index]}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n\n          </div>\n        </div>\n        </div>\n        {showEditBoard && (\n          <div className=\"edit-board-container\" id=\"EditingOn\" style={{ display: \"block\" }}>\n            <EditBoard in_fen={fen} updateFenAndClose={this.updateFenAndCloseEdit} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default AnalysisBoard;\n\n\nconst customPieces = ({ squareWidth, isDragging }) => ({\n  wK: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/4/42/Chess_klt45.svg\"\n      alt=\"White King\"\n    />\n  ),\n  wQ: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/1/15/Chess_qlt45.svg\"\n      alt=\"White Queen\"\n    />\n  ),\n  wR: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg\"\n      alt=\"White Rook\"\n    />\n  ),\n  wB: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Chess_blt45.svg\"\n      alt=\"White Bishop\"\n    />\n  ),\n  wN: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/7/70/Chess_nlt45.svg\"\n      alt=\"White Knight\"\n    />\n  ),\n  wP: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/4/45/Chess_plt45.svg\"\n      alt=\"White Pawn\"\n    />\n  ),\n  bK: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/f/f0/Chess_kdt45.svg\"\n      alt=\"Black King\"\n    />\n  ),\n  bQ: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/4/47/Chess_qdt45.svg\"\n      alt=\"Black Queen\"\n    />\n  ),\n  bR: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg\"\n      alt=\"Black Rook\"\n    />\n  ),\n  bB: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/9/98/Chess_bdt45.svg\"\n      alt=\"Black Bishop\"\n    />\n  ),\n  bN: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/e/ef/Chess_ndt45.svg\"\n      alt=\"Black Knight\"\n    />\n  ),\n  bP: () => (\n    <img\n      style={{\n        width: isDragging ? squareWidth * 1.75 : squareWidth,\n        height: isDragging ? squareWidth * 1.75 : squareWidth\n      }}\n      src=\"https://upload.wikimedia.org/wikipedia/commons/c/c7/Chess_pdt45.svg\"\n      alt=\"Black Pawn\"\n    />\n  )\n});\n\n\n\n\nconst boardStyle = {\n  borderRadius: \"5px\",\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\n};\n\nconst boardsContainer = {\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  alignItems: \"center\"\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}